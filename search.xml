<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Config_Hexo_with_GitHub_via_Windows</title>
    <url>/2021/11/02/Config-Hexo-with-GitHub-via-Windows/</url>
    <content><![CDATA[<h1 id="Config-Hexo-with-GitHub-via-Windows"><a href="#Config-Hexo-with-GitHub-via-Windows" class="headerlink" title="Config Hexo with GitHub via Windows"></a>Config Hexo with GitHub via Windows</h1><p>If you want to set up a GitHub website with Hexo in Windows, and you need your website set up with basic functionality, like tags, categories, about, search, theme, visitor count, comments and etc, you can follow the below guide.</p>
<h2 id="Set-up-the-account-and-repository-in-GitHub"><a href="#Set-up-the-account-and-repository-in-GitHub" class="headerlink" title="Set up the account and repository in GitHub"></a>Set up the account and repository in GitHub</h2><ol>
<li><p>Create an account in <a href="https://github.com/">GitHub</a> </p>
</li>
<li><p>Click on the Create New button in the left upper corner, choose New Repository.</p>
</li>
<li><p>In the Repository name, input [your_GitHub_account].github.io such as “damontung.github.io”, select the checkbox Initialize this repository with a README, and click on button Create repository.</p>
</li>
<li><p>In the home page of the new repository, choose tab Settings. In the GitHub Pages section, change Source from None to main branch, and click on Save button next to it.</p>
</li>
</ol>
<h2 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h2><p>Git is the tool to manage your repository on GitHub.</p>
<p>Download the <a href="https://git-scm.com/download/win">Git</a>, and install it.</p>
<p>After installation, right click on any folder, and choose Git Bash Here to open Git Bash. To bind your GitHub account and email to the Git tool on your local computer, run the below commands.</p>
<pre><code>git config --global user.name [your GitHub account]
git config --global user.email [your GitHub email address]
</code></pre>
<h2 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h2><p>Hexo is a framework based on Node.js.</p>
<p>Download <a href="https://nodejs.org/en/download/">Node.js</a>, and install it. Run the below command to validate the Node.js status after installation.</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure>

<p>npm is the package manager for JavasSript. Run the below command to check the npm status.</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> -v</span><br></pre></td></tr></table></figure>

<h2 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h2><p><strong>Hexo</strong> is a framework which is helpful to build a blog. See <a href="https://hexo.io/">https://hexo.io/</a> for details.</p>
<p>Create a folder as the base folder for Hexo. Run cmd command, run cd to change the folder to the Hexo base folder, and run the below command to install Hexo.</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure>
<p>Run the below command to install Hexo Git deployer</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>Run the below command to initialize Hexo</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span></span><br></pre></td></tr></table></figure>
<p>Hexo basic commands<br>Initialize Hexo after installation</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span></span><br></pre></td></tr></table></figure>

<p>Start Hexo server. You can stop the server by pressing Ctrl + C.</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">server</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>After the server start, open the below link in browser, and you can see the initial page for Hexo</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost:<span class="number">4000</span>/</span><br></pre></td></tr></table></figure>

<p>Create a new page, like tags, categories, about me, etc</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> [page_name]</span><br></pre></td></tr></table></figure>

<p>Create a new post</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo</span> new<span class="meta"> [post_name]</span></span><br><span class="line"><span class="attribute">hexo</span> n<span class="meta"> [post_name]</span></span><br></pre></td></tr></table></figure>
<p>Generate the website for .md files</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>Deploy the website to GitHub</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo deploy</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure>

<p>Generate the website for .md files and deploy the website to GitHub</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">hexo deploy --<span class="keyword">generate</span></span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p>Clean the cache. It may be necessary after the change on a post, a page or a configuration file.</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br></pre></td></tr></table></figure>

<p>Hexo folder structure and basic setup</p>
<pre><code>node_modules: the folder to save Node.js modules for Hexo
themes: the folder for themes
source: the folder to save the source markdown (.md) files
scaffolds: the folder for templates
public: the folder to save the HTML pages after generation
_config.yml: the root configuration file
themes/[theme_name]/_config.yml: the theme configuration file
source/_posts: the folder to save the post markdown (.md) files
</code></pre>
<p>add CNAME file in the source folder with following your own domain if you have and add CNAME record to your domain</p>
<pre><code>blog.ddong.online
</code></pre>
<p>Update the root configuration file for the below parameters</p>
<pre><code>url: https://damontung.github.io/

highlight:
  enable: true
  line_number: true
  auto_detect: true
</code></pre>
<p>or replace url with your custom domain</p>
<pre><code>url: https://blog.ddong.online/

highlight:
  enable: true
  line_number: true
  auto_detect: true
</code></pre>
<h2 id="Change-Hexo-theme"><a href="#Change-Hexo-theme" class="headerlink" title="Change Hexo theme"></a>Change Hexo theme</h2><p>Check the Hexo themes from <a href="https://hexo.io/themes/">https://hexo.io/themes/</a>.</p>
<p>For example, if you want to download the Next theme and use it, follow the below steps.</p>
<p>a. Run the below command to download the Next theme to themes folder.</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/theme-next/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>b. Change the theme parameter to next in the root configuration file</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>c. Change the parameters in the theme configuration file to use another scheme and add social links if necessary.</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">scheme:</span> Gemini</span><br><span class="line"><span class="symbol">highlight_theme:</span> night</span><br></pre></td></tr></table></figure>

<p>d. Update the file custom.styl under folder \themes\next\source\css_custom, and change the parameter as below</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#098</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="About-Markdown"><a href="#About-Markdown" class="headerlink" title="About Markdown"></a>About Markdown</h2><p>Markdown is a text-to-HTML formatting syntax for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML). See <a href="https://www.appinn.com/markdown/">https://www.appinn.com/markdown/</a> for Markdown syntax details.</p>
<p>Here is some common syntax.</p>
<p><em>italic text</em></p>
<p><strong>bold text</strong></p>
<hr>
<p><a href="http://www.url.com/">http://www.url.com</a><br>[url tile](url address)</p>
<h3 id="header-3"><a href="#header-3" class="headerlink" title="header 3"></a>header 3</h3><ul>
<li>list item 1</li>
<li>list item 2</li>
</ul>
<p>text before <code>small code block</code> text after</p>
<p><img src="/path/to/img.jpg" alt="Alt text"></p>
<pre><code>code block line 1
code block line 2
</code></pre>
<p>You can choose a Markdown editor like <a href="http://www.markdownpad.com/"><em>MarkdownPad</em></a> to edit Markdown files. The editor has a preview functionality which is very helpful for editing.</p>
<p>Install <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe">Awesomium 1.6.6 SDK</a> and restart the computer, if LivePreview is not working for MarkdownPad and the error message is <strong>This view has crashed!</strong></p>
<h2 id="Link-to-a-local-image"><a href="#Link-to-a-local-image" class="headerlink" title="Link to a local image"></a>Link to a local image</h2><p>Update the <strong>root configuration file</strong> as below. After the configuration change, there will be a folder created when using command <strong>hexo new [post_name]</strong> to create a new post, and the folder name will be the same as post name.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>You can copy your image file to the post folder, and use the below Markdown syntax to add an image in a post. With this approach, the image will be showing in the post, but it is not showing in the home page.</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[alt_text]</span>(image_name.jpg)</span><br></pre></td></tr></table></figure>

<p>You can install the below package and then use the below Markdown syntax to add an image to a post, and the image will be showing in both the post and home page.</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">npm install http<span class="variable">s:</span>//github.<span class="keyword">com</span>/CodeFalling/hexo-asset-image --save</span><br><span class="line">&#123;% asset_img image_name.jpg This <span class="keyword">is</span> <span class="keyword">an</span> image %&#125;</span><br><span class="line">Add the page<span class="variable">s:</span> <span class="keyword">tags</span>, categories</span><br></pre></td></tr></table></figure>


<p>Update the theme configuration file for the menu parameter.</p>
<pre><code>menu:
  tags: /tags/ || tags
  categories: /categories/ || th
</code></pre>
<p>Run the below command to create the page for tags</p>
<pre><code>hexo new page tags
</code></pre>
<p>Update the file \source\tags\index.md</p>
<pre><code>---
title: tags
date: 2018-03-06 14:38:05
type: &quot;tags&quot;
comments: false
---
</code></pre>
<p>Run the below command to create the page for categories</p>
<pre><code>hexo new page categories
</code></pre>
<p>Update the file \source\categories\index.md</p>
<pre><code>---
title: categories
date: 2018-03-06 14:39:05
type: &quot;categories&quot;
comments: false
---
</code></pre>
<p>Add the page: about me<br>Update the theme configuration file for the menu parameter.</p>
<pre><code>menu:
  about: /about/ || user
</code></pre>
<p>Run the below command to create the page for about</p>
<pre><code>hexo new page about
</code></pre>
<p>Update the file \source\about\index.md</p>
<pre><code>---
title: about me
date: 2018-03-06 14:19:41
---
### About me

This is my blog.
</code></pre>
<h2 id="Add-search-functionality"><a href="#Add-search-functionality" class="headerlink" title="Add search functionality"></a>Add search functionality</h2><p>Install the Hexo search package via the below command</p>
<pre><code>npm install hexo-generator-searchdb --save
</code></pre>
<p>Add the below parameters to root configuration file.</p>
<pre><code>search:
  path: search.xml
  field: post
</code></pre>
<p>Change the below parameter in theme configuration file.</p>
<pre><code>local_search:
  enable: true
</code></pre>
<h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><p>Run the below command to create a new post</p>
<pre><code>hexo new [post_name]
</code></pre>
<p>Update the file \source_post[post_name].md. See below for example.</p>
<pre><code>---
title: Hello World
date: 2018-03-06 14:19:41
tags: [Windows]
categories: Windows
---
###Hello

Hello! This is my first blog.

printf(&quot;Hello world!&quot;);
</code></pre>
<h2 id="Deploy-to-GitHub"><a href="#Deploy-to-GitHub" class="headerlink" title="Deploy to GitHub"></a>Deploy to GitHub</h2><p>If you are using HTTP to deploy your website to GitHub, you may get a pop-up dialog to input your GitHub account and password when running command hexo deploy during deployment.</p>
<p>In this case, the root configuration file is configured as below.</p>
<pre><code>deploy:
  type: git
  repo: https://github.com/damontung/damontung.github.io.git
  name: damontung
  email: damontung@163.com
  branch: master
</code></pre>
<p>If you are using SSH to deploy your website to GitHub, you can follow the below steps.</p>
<p>a. Run the below command via Git Bash to generate a key pair.</p>
<pre><code>ssh-keygen -t rsa -C &quot;your_GitHub_email_address&quot;
</code></pre>
<p>b. Use the default file path C:/User/[Windows_account]/.ssh/, and input the passphrase if necessary</p>
<p>c. Open the file C:/User/[Windows_account]/.ssh/id_rsa.pub, and copy the entire file content</p>
<p>d. Log on to GitHub, click on Avatar on the left upper corner, choose Settings, choose SSH and GPG Keys, click on button New SSH Key, input the Title with any value, paste the entire file content from last step as Key, and click on button Add SSH Key</p>
<p>e. If the passphrase is not empty in the step b, and you don’t want to reenter your passphrase every time you use your SSH key, you can run the below commands to add your key to the SSH agent, which manages your SSH keys and remembers your passphrase.</p>
<pre><code>eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
</code></pre>
<p>f. Run the below command via Git Bash to check the SSH connection</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p>The successful result should be like below.</p>
<p><em>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.</em></p>
<p>g. Run the below command to deploy website to GitHub</p>
<pre><code>hexo deploy
</code></pre>
<p>In this case, the root configuration file is configured as below.</p>
<pre><code>deploy:
  type: git
  repo: git@github.com:damontung/damontung.github.io.git
  branch: master
</code></pre>
<h2 id="Count-of-Visitors"><a href="#Count-of-Visitors" class="headerlink" title="Count of Visitors"></a>Count of Visitors</h2><p>Open the theme configuration file and update the parameters as below</p>
<pre><code>busuanzi_count:
  enable: true
  total_visitors: true
  total_visitors_icon: user
  total_views: true
  total_views_icon: eye
  post_views: true
  post_views_icon: eye
</code></pre>
<h2 id="Add-comments-for-website"><a href="#Add-comments-for-website" class="headerlink" title="Add comments for website"></a>Add comments for website</h2><p>Create a new GitHub repository website_comments to save the comments for the website</p>
<p>Request a GitHub OAuth application via the link <a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a>, or via navigation by GitHub homepage -&gt; Avatar on the left upper corner -&gt; Settings -&gt; Developer Settings -&gt; OAuth Apps -&gt; Request a new application. Input the parameters as below, and register application</p>
<p>Application name: website_comments</p>
<p>Homepage URL: <a href="https://damontung.github.io/">https://damontung.github.io/</a></p>
<p>Authorization callback URL: <a href="https://damontung.github.io/">https://damontung.github.io/</a></p>
<p>Note down the Client ID and Client Secret on the application page.</p>
<p>Update the theme configuration file to add the below parameters</p>
<pre><code>gitalk:
  enable: true
  clientID: [above_client_id]
  clientSecret: [above_client_secret]
  repo: website_comments
  owner: ddong
  admin: ddong
  distractionFreeMode: true # Facebook-like distraction free mode
  createIssueManually: false
</code></pre>
<p>Create a file gitalk.swig under folder next/layout/_third-party/comments. See below for the file content.</p>
<pre><code>&#123;% if theme.gitalk.enable %&#125;
	  &#123;% if page.comments %&#125;
	    <link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css">
	    <script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script>
	    <script type="text/javascript">
	      const gitalk = new Gitalk(&#123;
	        clientID: '&#123;&#123;theme.gitalk.clientID&#125;&#125;',
	        clientSecret: '&#123;&#123;theme.gitalk.clientSecret&#125;&#125;',
	        repo: '&#123;&#123;theme.gitalk.repo&#125;&#125;',
	        owner: '&#123;&#123;theme.gitalk.owner&#125;&#125;',
	        admin: '&#123;&#123;theme.gitalk.admin&#125;&#125;'.split(','),
	        id: location.pathname,
	        // facebook-like distraction free mode
	        distractionFreeMode: '&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;',
	        createIssueManually: '&#123;&#123; theme.gitalk.createIssueManually &#125;&#125;'
	      &#125;)
	      gitalk.render('gitalk-container')
	    </script>
	  &#123;% endif %&#125;
&#123;% endif %&#125;
</code></pre>
<p>Update the file index.swig under folder next/layout/_third-party/comments to add the below code</p>
<pre><code>&#123;% include 'gitalk.swig' %&#125;
</code></pre>
<p>Update the file comments.swig under folder next/layout/_partials to add the below code</p>
<pre><code>&#123;% elseif theme.gitalk.distractionFreeMode %&#125;  
  &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;
Errors &amp; Tips
Error message:
</code></pre>
<p>After the change on a post, a page or a configuration file, the change is not reflected on the site.</p>
<p>Solution:</p>
<pre><code>Clean the cache by running the command hexo clean
</code></pre>
<p>Error message:</p>
<pre><code>The LivePreview functionality is not working for MarkdownPad editor. The error message is The view has crashed!.
</code></pre>
<p>Solution:</p>
<pre><code>Install Awesomium 1.6.6 SDK from this link and restart the computer
</code></pre>
<p>Error message:</p>
<p>If you are using SSH to deploy your Hexo contents to GitHub, you got an error message Could not read from remote repository when you are running the command hexo deploy to deploy the site to GitHub via cmd.</p>
<p>Solution:</p>
<pre><code>Use Git Bash to run the command, instead of cmd
</code></pre>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>MxUpdate Samples</title>
    <url>/2021/11/02/mxupdate/</url>
    <content><![CDATA[<h2 id="attribute"><a href="#attribute" class="headerlink" title="attribute"></a>attribute</h2><pre><code>exec program mxupdate --update --path E:\EPLM_workspace\Enovia-5-3\40_mxupdate\datamodel\attribute\ --attribute &quot;NSN Network Element Type&quot;;
</code></pre>
<h2 id="type"><a href="#type" class="headerlink" title="type"></a>type</h2><pre><code>exec program mxupdate --update --path E:\EPLM_workspace\Enovia-5-3\40_mxupdate\datamodel\type\ --type &quot;Conflict Mineral Declaration&quot;;
</code></pre>
<h2 id="person"><a href="#person" class="headerlink" title="person"></a>person</h2><pre><code>exec program mxupdate --update --path C:\workspace\EPLM\vendor\dbschema\user\person\ --person admin_platform;
</code></pre>
<h2 id="run-tcl-script"><a href="#run-tcl-script" class="headerlink" title="run tcl script"></a>run tcl script</h2><pre><code>40_mxupdate/datamodel/type/TYPE_Conflict Mineral Declaration.tcl
</code></pre>
<h2 id="query-bus-with-where-clause"><a href="#query-bus-with-where-clause" class="headerlink" title="query bus with where clause"></a>query bus with where clause</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">temp</span> query bus Part * * <span class="keyword">where</span> ((<span class="keyword">current</span> == Approved) &amp;&amp;</span><br><span class="line">(<span class="keyword">attribute</span>[Material Category] ~~ <span class="string">&#x27;Plastic&#x27;</span>) &amp;&amp;</span><br><span class="line">(<span class="keyword">to</span>[Component Substitution].<span class="keyword">from</span>.name ~~ <span class="string">&#x27;*Clutch*&#x27;</span>) &amp;&amp;</span><br><span class="line">(<span class="keyword">to</span>[Component Substitution].<span class="keyword">from</span>.name ~~ <span class="string">&#x27;*Transmission*&#x27;</span>));</span><br></pre></td></tr></table></figure>

<h2 id="query-bus-with-Date"><a href="#query-bus-with-Date" class="headerlink" title="query bus with Date"></a>query bus with Date</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">temp</span> query bus &quot;NSN Sales Item&quot; * * <span class="keyword">where</span> &quot;attribute[NSN GSC Base] != &#x27;0.0&#x27; &amp;&amp; attribute[NSN Cost Effective Date] &lt;= &#x27;Jan 07 2020&#x27;&quot; dump | <span class="keyword">limit</span> <span class="number">5</span> ;</span><br></pre></td></tr></table></figure>
<h2 id="mod-bus-sample"><a href="#mod-bus-sample" class="headerlink" title="mod bus sample"></a>mod bus sample</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mod</span> bus <span class="keyword">TYPE</span> <span class="type">NAME </span>REVISION  ATTR_NAME ATTR_NEW_VALUE;</span><br></pre></td></tr></table></figure>
<h2 id="exec-prog-with-method"><a href="#exec-prog-with-method" class="headerlink" title="exec prog with method"></a>exec prog with method</h2><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">exec program <span class="string">&#x27;NSNSalesItem&#x27;</span> -<span class="function"><span class="keyword">method</span> <span class="title">queryAndCopyCostsRelatedAttrsToCurrentFields</span>;</span></span><br></pre></td></tr></table></figure>
<h2 id="update-prog-and-compile"><a href="#update-prog-and-compile" class="headerlink" title="update prog and compile"></a>update prog and compile</h2><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">exec program mxupdate --update --path D:<span class="symbol">\E</span>PLM_Workspace<span class="symbol">\E</span>novia-DEV<span class="symbol">\4</span>0_mxupdate<span class="symbol">\p</span>rogram<span class="symbol">\j</span>po<span class="symbol">\ </span>--program NSNSalesItem;</span><br><span class="line">compile prog NSNSalesItem;</span><br></pre></td></tr></table></figure>

<h2 id="insert-and-compile-prog"><a href="#insert-and-compile-prog" class="headerlink" title="insert and compile prog"></a>insert and compile prog</h2><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">insert prog PROG_FILE_PATH<span class="comment">;</span></span><br><span class="line">compile prog PROG_NAME<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h2 id="mod-user"><a href="#mod-user" class="headerlink" title="mod user"></a>mod user</h2><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mod</span> person ddong <span class="built_in">assign</span> role ROLE_NAME<span class="comment">;</span></span><br><span class="line"><span class="built_in">mod</span> person ddong PROPERTY_NAME PROPERTY_VALUE<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h2 id="check-assigned-role"><a href="#check-assigned-role" class="headerlink" title="check assigned role"></a>check assigned role</h2><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> person ddong <span class="keyword">select</span> assignment;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/11/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Check_Attribute_Definition</title>
    <url>/2021/11/02/Check-Attribute-Definition/</url>
    <content><![CDATA[<pre><code>public void checkAttributeDefinition(String strAttrName) throws Exception&#123;
        System.out.println(&quot;Context user:&quot; + context.getUser());
        String attName = strAttrName;
        AttributeType attrType = new AttributeType(attName);

        if(attrType != null) &#123;
            attrType.open(context);
            System.out.println(&quot;Attribute Schema: &quot; + attrType.getName());
            System.out.println(&quot;Max Length: &quot; + attrType.getMaxLength());
            System.out.println(&quot;Is Multivalue: &quot; + attrType.isMultiVal());
            System.out.println(&quot;Choices::&quot; + attrType.getChoices());
            System.out.println(&quot;Is Multiline: &quot; + attrType.isMultiLine());
            System.out.println(&quot;Is Range value: &quot; + attrType.isRangeVal());
            System.out.println(&quot;Is Single value: &quot; + attrType.isSingleVal());
            System.out.println(&quot;Is Hidden value: &quot; + attrType.isHidden());
            System.out.println(&quot;Default Value:&quot; + attrType.getDefaultValue());
            System.out.println(&quot;Data Type:&quot; + attrType.getDataType());
            System.out.println(&quot;Attribute Description:&quot; + attrType.getDescription());
            String queryTrigger = &quot;print attribute \&quot;&quot; + attName + &quot;\&quot; select trigger dump |&quot;;
            System.out.println(&quot;Trigger::&quot; + MqlUtil.mqlCommand(context, queryTrigger));
            System.out.println(&quot;Is Dimension Attribute: &quot; + UOMUtil.isAssociatedWithDimension(context, attName));
            if (UOMUtil.isAssociatedWithDimension(context, attName)) &#123;
                System.out.println(&quot;Attribute Dimension:&quot; + attrType.getDimension(context));
            &#125;
        &#125;
        String queryType = &quot;list type * select name attribute[&quot; + attName + &quot;] dump |&quot;;
        String result = MQLUtils.mql(context, queryType);
        String[] tempArr = result.split(&quot;\\n&quot;);
        StringList attDefinedType = new StringList();
        for(String strType: tempArr) &#123;
            String[] tempType = strType.split(&quot;\\|&quot;);
            if(tempType.length &gt; 1 &amp;&amp; &quot;True&quot;.equalsIgnoreCase(tempType[1]))&#123;
                attDefinedType.add(tempType[0]);
            &#125;
        &#125;
        if(attDefinedType.size() &gt; 0)&#123;
            System.out.println(&quot;Defined on Fllowing Types::&lt;&quot; + String.join(&quot;,&quot;, attDefinedType) + &quot;&gt;.&quot;);
        &#125;
    &#125;
</code></pre>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia,Attribute</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP_MDM_Stop_Server</title>
    <url>/2021/11/02/SAP-MDM-Stop-Server/</url>
    <content><![CDATA[<pre><code>package com.sap.mdm.examples;

import com.sap.mdm.commands.AuthenticateServerSessionCommand;
import com.sap.mdm.commands.CommandException;
import com.sap.mdm.commands.CreateServerSessionCommand;
import com.sap.mdm.net.ConnectionException;
import com.sap.mdm.net.ConnectionPool;
import com.sap.mdm.net.ConnectionPoolFactory;
import com.sap.mdm.server.commands.StopServerCommand;

/*
 * Copyright Â© 2004-2006 by SAP AG.
 * All Rights Reserved.
 * 
 * SAP, R/3, mySAP, mySAP.com, xApps, xApp, SAP NetWeaver, and other SAP
 * products and services mentioned herein as well as their respective logos are
 * trademarks or registered trademarks of SAP AG in Germany and in several other
 * countries all over the world. All other product and service names mentioned
 * are the trademarks of their respective companies. Data contained in this
 * document serves informational purposes only. National product specifications
 * may vary.
 * 
 * These materials are subject to change without notice. These materials are
 * provided by SAP AG and its affiliated companies (SAP Group) for informational
 * purposes only, without representation or warranty of any kind, and SAP Group
 * shall not be liable for errors or omissions with respect to the materials.
 * The only warranties for SAP Group products and services are those that are
 * set forth in the express warranty statements accompanying such products and
 * services, if any. Nothing herein should be construed as constituting an
 * additional warranty.
 * 
 */

/**
 * This example demonstrates shutting down the MDM server. The steps are:
 * &lt;ol&gt;
 * &lt;li&gt;Establishes connection with the MDM server&lt;/li&gt;
 * &lt;li&gt;Creates a server session&lt;/li&gt;
 * &lt;li&gt;Authenticates the server session&lt;/li&gt;
 * &lt;li&gt;Stops the MDM server&lt;/li&gt;
 * &lt;/ol&gt;
 * Commands used:&lt;br&gt;
 * &lt;code&gt;CreateServerSessionCommand&lt;/code&gt;&lt;br&gt;
 * &lt;code&gt;AuthenticateServerSessionCommand&lt;/code&gt;&lt;br&gt;
 * &lt;code&gt;StopServerCommand&lt;/code&gt;&lt;br&gt;
 * &lt;br&gt;
 * &lt;a href=&quot;StopServer.java&quot;&gt;Source code for StopServer.java&lt;/a&gt;
 */
public class StopServer &#123;        
private StopServer() &#123;
&#125;

public static void main(String[] args) &#123;
    // create connection pool
    String connectionTag = &quot;LOCALHOST&quot;;
    ConnectionPool connections = null;
    try &#123;
        connections = ConnectionPoolFactory.getInstance(connectionTag);
    &#125; catch (ConnectionException e) &#123;
        e.printStackTrace();
        return;
    &#125;

    // create server session
    CreateServerSessionCommand sessionCommand = new CreateServerSessionCommand(connections);
    try &#123;
        sessionCommand.execute();
    &#125; catch (CommandException e) &#123;
        e.printStackTrace();
        return;
    &#125;        
    String sessionId = sessionCommand.getSession();
    
    // authenticate the repository session
    String userName = &quot;Admin&quot;;
    String userPassword = &quot;&quot;;
    AuthenticateServerSessionCommand authCommand = new AuthenticateServerSessionCommand(connections);
    authCommand.setSession(sessionId);
    authCommand.setUserName(userName);
    authCommand.setUserPassword(userPassword);
    try &#123;
        authCommand.execute();
    &#125; catch (CommandException e) &#123;
        e.printStackTrace();
        return;
    &#125;        

    // stop the MDM server
    StopServerCommand stopServerCommand = new StopServerCommand(connections);
    stopServerCommand.setSession(sessionId);
    try &#123;
        stopServerCommand.execute();
    &#125; catch (CommandException e) &#123;
        e.printStackTrace();
        return;
    &#125;
&#125;
&#125;
</code></pre>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP, MDM</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 常用命令</title>
    <url>/2021/11/02/Redis_Commands/</url>
    <content><![CDATA[<h1 id="Redis-命令"><a href="#Redis-命令" class="headerlink" title="Redis 命令"></a>Redis 命令</h1><p>Redis 命令用于在 redis 服务上执行操作。</p>
<p>要在 redis 服务上执行命令需要一个 redis 客户端。</p>
<p>语法<br>Redis 客户端的基本语法为：</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ redis-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure>
<p>实例<br>以下实例讲解了如何启动 redis 客户端：</p>
<p>启动 redis 服务器，打开终端并输入命令 redis-cli，该命令会连接本地的 redis 服务。</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ redis-<span class="keyword">cli</span></span><br><span class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</span><br><span class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; <span class="built_in">PING</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>
<p>在以上实例中我们连接到本地的 redis 服务并执行 PING 命令，该命令用于检测 redis 服务是否启动。</p>
<p>在远程服务上执行命令<br>如果需要在远程 redis 服务上执行命令，同样我们使用的也是 redis-cli 命令。</p>
<p>语法</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ redis-cli -h host -<span class="selector-tag">p</span> port -<span class="selector-tag">a</span> password</span><br></pre></td></tr></table></figure>
<p>实例<br>以下实例演示了如何连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="variable">$redis</span>-cli -h <span class="number">127.0</span>.<span class="number">0.1</span> -<span class="selector-tag">p</span> <span class="number">6379</span> -<span class="selector-tag">a</span> <span class="string">&quot;mypass&quot;</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt;</span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt; PING</span><br><span class="line"></span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>

<h1 id="Redis-数据类型"><a href="#Redis-数据类型" class="headerlink" title="Redis 数据类型"></a>Redis 数据类型</h1><p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p>
<h2 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h2><p>string 是 redis 最基本的类型，你可以理解成与 Memcached 一模一样的类型，一个 key 对应一个 value。</p>
<p>string 类型是二进制安全的。意思是 redis 的 string 可以包含任何数据。比如jpg图片或者序列化的对象。</p>
<p>string 类型是 Redis 最基本的数据类型，string 类型的值最大能存储 512MB。</p>
<p>实例</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; <span class="builtin-name">SET</span> runoob <span class="string">&quot;菜鸟教程&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis 127.0.0.1:6379&gt; <span class="builtin-name">GET</span> runoob</span><br><span class="line"><span class="string">&quot;菜鸟教程&quot;</span></span><br></pre></td></tr></table></figure>
<p>在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 runoob，对应的值为 菜鸟教程。</p>
<p>注意：一个键最大能存储 512MB。</p>
<h2 id="Hash（哈希）"><a href="#Hash（哈希）" class="headerlink" title="Hash（哈希）"></a>Hash（哈希）</h2><p>Redis hash 是一个键值(key=&gt;value)对集合。</p>
<p>Redis hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。</p>
<p>实例<br>DEL runoob 用于删除前面测试用过的 key，不然会报错：(error) WRONGTYPE Operation against a key holding the wrong kind of value</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">redis</span> <span class="number">127.0.0.1:6379</span>&gt; DEL runoob</span><br><span class="line">redis <span class="number">127.0.0.1:6379</span>&gt; HMSET runoob field1 <span class="string">&quot;Hello&quot;</span> field2 <span class="string">&quot;World&quot;</span></span><br><span class="line"><span class="string">&quot;OK&quot;</span></span><br><span class="line">redis <span class="number">127.0.0.1:6379</span>&gt; HGET runoob field1</span><br><span class="line"><span class="string">&quot;Hello&quot;</span></span><br><span class="line">redis <span class="number">127.0.0.1:6379</span>&gt; HGET runoob field2</span><br><span class="line"><span class="string">&quot;World&quot;</span></span><br></pre></td></tr></table></figure>
<p>实例中我们使用了 Redis HMSET, HGET 命令，HMSET 设置了两个 field=&gt;value 对, HGET 获取对应 field 对应的 value。</p>
<p>每个 hash 可以存储 232 -1 键值对（40多亿）。<br>List（列表）<br>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p>
<p>实例<br>redis 127.0.0.1:6379&gt; DEL runoob<br>redis 127.0.0.1:6379&gt; lpush runoob redis<br>(integer) 1<br>redis 127.0.0.1:6379&gt; lpush runoob mongodb<br>(integer) 2<br>redis 127.0.0.1:6379&gt; lpush runoob rabitmq<br>(integer) 3<br>redis 127.0.0.1:6379&gt; lrange runoob 0 10</p>
<ol>
<li>“rabitmq”</li>
<li>“mongodb”</li>
<li>“redis”<br>redis 127.0.0.1:6379&gt;<br>列表最多可存储 2^32 - 1 元素 (4294967295, 每个列表可存储40多亿)。</li>
</ol>
<h2 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h2><p>Redis 的 Set 是 string 类型的无序集合。</p>
<p>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。</p>
<h3 id="sadd-命令"><a href="#sadd-命令" class="headerlink" title="sadd 命令"></a>sadd 命令</h3><p>添加一个 string 元素到 key 对应的 set 集合中，成功返回 1，如果元素已经在集合中返回 0。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">sadd <span class="built_in">key</span> <span class="built_in">member</span></span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; DEL runoob</span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; sadd runoob redis</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; sadd runoob mongodb</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; sadd runoob rabitm<span class="string">q</span></span><br><span class="line"><span class="string">(integer)</span> <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; sadd runoob rabitm<span class="string">q</span></span><br><span class="line"><span class="string">(integer)</span> <span class="number">0</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; smembers runoob</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) <span class="string">&quot;redis&quot;</span></span><br><span class="line"><span class="number">2</span>) <span class="string">&quot;rabitmq&quot;</span></span><br><span class="line"><span class="number">3</span>) <span class="string">&quot;mongodb&quot;</span></span><br></pre></td></tr></table></figure>
<p>注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。</p>
<p>集合中最大的成员数为 2^32 - 1(4294967295, 每个集合可存储40多亿个成员)。</p>
<h2 id="zset-sorted-set：有序集合"><a href="#zset-sorted-set：有序集合" class="headerlink" title="zset(sorted set：有序集合)"></a>zset(sorted set：有序集合)</h2><p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。<br>不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。</p>
<p>zset的成员是唯一的,但分数(score)却可以重复。</p>
<h3 id="zadd-命令"><a href="#zadd-命令" class="headerlink" title="zadd 命令"></a>zadd 命令</h3><p>添加元素到集合，元素在集合中存在则更新对应score</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">zadd key score member </span><br><span class="line">实例</span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; DEL runoob</span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; zadd runoob <span class="number">0</span> redis</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; zadd runoob <span class="number">0</span> mongodb</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; zadd runoob <span class="number">0</span> rabitm<span class="string">q</span></span><br><span class="line"><span class="string">(integer)</span> <span class="number">1</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; zadd runoob <span class="number">0</span> rabitm<span class="string">q</span></span><br><span class="line"><span class="string">(integer)</span> <span class="number">0</span></span><br><span class="line">redis <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; &gt; ZRANGEBYSCORE runoob <span class="number">0</span> <span class="number">1000</span></span><br><span class="line"><span class="number">1</span>) <span class="string">&quot;mongodb&quot;</span></span><br><span class="line"><span class="number">2</span>) <span class="string">&quot;rabitmq&quot;</span></span><br><span class="line"><span class="number">3</span>) <span class="string">&quot;redis&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="Redis-keys-命令"><a href="#Redis-keys-命令" class="headerlink" title="Redis keys 命令"></a>Redis keys 命令</h1><p>下表给出了与 Redis 键相关的基本命令：</p>
<table>
<thead>
<tr>
<th align="center">序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td>DEL key</td>
<td>该命令用于在 key 存在时删除 key。</td>
</tr>
<tr>
<td align="center">2</td>
<td>DUMP key</td>
<td>序列化给定 key ，并返回被序列化的值。</td>
</tr>
<tr>
<td align="center">3</td>
<td>EXISTS key</td>
<td>检查给定 key 是否存在。</td>
</tr>
<tr>
<td align="center">4</td>
<td>EXPIRE key seconds</td>
<td>为给定 key 设置过期时间，以秒计。</td>
</tr>
<tr>
<td align="center">5</td>
<td>EXPIREAT key timestamp</td>
<td>EXPIREAT 的作用和 EXPIRE 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)。</td>
</tr>
<tr>
<td align="center">6</td>
<td>PEXPIRE key milliseconds</td>
<td>设置 key 的过期时间以毫秒计。</td>
</tr>
<tr>
<td align="center">7</td>
<td>PEXPIREAT key milliseconds-timestamp</td>
<td>设置 key 过期时间的时间戳(unix timestamp) 以毫秒计</td>
</tr>
<tr>
<td align="center">8</td>
<td>KEYS pattern</td>
<td>查找所有符合给定模式( pattern)的 key 。</td>
</tr>
<tr>
<td align="center">9</td>
<td>MOVE key db</td>
<td>将当前数据库的 key 移动到给定的数据库 db 当中。</td>
</tr>
<tr>
<td align="center">10</td>
<td>PERSIST key</td>
<td>移除 key 的过期时间，key 将持久保持。</td>
</tr>
<tr>
<td align="center">11</td>
<td>PTTL key</td>
<td>以毫秒为单位返回 key 的剩余的过期时间。</td>
</tr>
<tr>
<td align="center">12</td>
<td>TTL key</td>
<td>以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。</td>
</tr>
<tr>
<td align="center">13</td>
<td>RANDOMKEY</td>
<td>从当前数据库中随机返回一个 key 。</td>
</tr>
<tr>
<td align="center">14</td>
<td>RENAME key newkey</td>
<td>修改 key 的名称</td>
</tr>
<tr>
<td align="center">15</td>
<td>RENAMENX key newkey</td>
<td>仅当 newkey 不存在时，将 key 改名为 newkey 。</td>
</tr>
<tr>
<td align="center">16</td>
<td>SCAN cursor [MATCH pattern] [COUNT count]</td>
<td>迭代数据库中的数据库键。</td>
</tr>
<tr>
<td align="center">17</td>
<td>TYPE key</td>
<td>返回 key 所储存的值的类型。</td>
</tr>
</tbody></table>
<h1 id="Redis-字符串命令"><a href="#Redis-字符串命令" class="headerlink" title="Redis 字符串命令"></a>Redis 字符串命令</h1><p>下表列出了常用的 redis 字符串命令：</p>
<table>
<thead>
<tr>
<th align="center">序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td>SET key value</td>
<td>设置指定 key 的值</td>
</tr>
<tr>
<td align="center">2</td>
<td>GET key</td>
<td>获取指定 key 的值。</td>
</tr>
<tr>
<td align="center">3</td>
<td>GETRANGE key start end</td>
<td>返回 key 中字符串值的子字符</td>
</tr>
<tr>
<td align="center">4</td>
<td>GETSET key value</td>
<td>将给定 key 的值设为 value ，并返回 key 的旧值(old value)。</td>
</tr>
<tr>
<td align="center">5</td>
<td>GETBIT key offset</td>
<td>对 key 所储存的字符串值，获取指定偏移量上的位(bit)。</td>
</tr>
<tr>
<td align="center">6</td>
<td>MGET key1 [key2..]</td>
<td>获取所有(一个或多个)给定 key 的值。</td>
</tr>
<tr>
<td align="center">7</td>
<td>SETBIT key offset value</td>
<td>对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。</td>
</tr>
<tr>
<td align="center">8</td>
<td>SETEX key seconds value</td>
<td>将值 value 关联到 key ，并将 key 的过期时间设为 seconds (以秒为单位)。</td>
</tr>
<tr>
<td align="center">9</td>
<td>SETNX key value</td>
<td>只有在 key 不存在时设置 key 的值。</td>
</tr>
<tr>
<td align="center">10</td>
<td>SETRANGE key offset value</td>
<td>用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始。</td>
</tr>
<tr>
<td align="center">11</td>
<td>STRLEN key</td>
<td>返回 key 所储存的字符串值的长度。</td>
</tr>
<tr>
<td align="center">12</td>
<td>MSET key value [key value …]</td>
<td>同时设置一个或多个 key-value 对。</td>
</tr>
<tr>
<td align="center">13</td>
<td>MSETNX key value [key value …]</td>
<td>同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。</td>
</tr>
<tr>
<td align="center">14</td>
<td>PSETEX key milliseconds value</td>
<td>这个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间，而不是像 SETEX 命令那样，以秒为单位。</td>
</tr>
<tr>
<td align="center">15</td>
<td>INCR key</td>
<td>将 key 中储存的数字值增一。</td>
</tr>
<tr>
<td align="center">16</td>
<td>INCRBY key increment</td>
<td>将 key 所储存的值加上给定的增量值（increment） 。</td>
</tr>
<tr>
<td align="center">17</td>
<td>INCRBYFLOAT key increment</td>
<td>将 key 所储存的值加上给定的浮点增量值（increment） 。</td>
</tr>
<tr>
<td align="center">18</td>
<td>DECR key</td>
<td>将 key 中储存的数字值减一。</td>
</tr>
<tr>
<td align="center">19</td>
<td>DECRBY key decrement</td>
<td>key 所储存的值减去给定的减量值（decrement） 。</td>
</tr>
<tr>
<td align="center">20</td>
<td>APPEND key value</td>
<td>如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾。</td>
</tr>
</tbody></table>
<h1 id="Redis-hash-命令"><a href="#Redis-hash-命令" class="headerlink" title="Redis hash 命令"></a>Redis hash 命令</h1><p>下表列出了 redis hash 基本的相关命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>HDEL key field1 [field2]</td>
<td>删除一个或多个哈希表字段</td>
</tr>
<tr>
<td>2</td>
<td>HEXISTS key field</td>
<td>查看哈希表 key 中，指定的字段是否存在。</td>
</tr>
<tr>
<td>3</td>
<td>HGET key field</td>
<td>获取存储在哈希表中指定字段的值。</td>
</tr>
<tr>
<td>4</td>
<td>HGETALL key</td>
<td>获取在哈希表中指定 key 的所有字段和值</td>
</tr>
<tr>
<td>5</td>
<td>HINCRBY key field increment</td>
<td>为哈希表 key 中的指定字段的整数值加上增量 increment 。</td>
</tr>
<tr>
<td>6</td>
<td>HINCRBYFLOAT key field increment</td>
<td>为哈希表 key 中的指定字段的浮点数值加上增量 increment 。</td>
</tr>
<tr>
<td>7</td>
<td>HKEYS key</td>
<td>获取所有哈希表中的字段</td>
</tr>
<tr>
<td>8</td>
<td>HLEN key</td>
<td>获取哈希表中字段的数量</td>
</tr>
<tr>
<td>9</td>
<td>HMGET key field1 [field2]</td>
<td>获取所有给定字段的值</td>
</tr>
<tr>
<td>10</td>
<td>HMSET key field1 value1 [field2 value2 ]</td>
<td>同时将多个 field-value (域-值)对设置到哈希表 key 中。</td>
</tr>
<tr>
<td>11</td>
<td>HSET key field value</td>
<td>将哈希表 key 中的字段 field 的值设为 value 。</td>
</tr>
<tr>
<td>12</td>
<td>HSETNX key field value</td>
<td>只有在字段 field 不存在时，设置哈希表字段的值。</td>
</tr>
<tr>
<td>13</td>
<td>HVALS key</td>
<td>获取哈希表中所有值。</td>
</tr>
<tr>
<td>14</td>
<td>HSCAN key cursor [MATCH pattern] [COUNT count]</td>
<td>迭代哈希表中的键值对。</td>
</tr>
</tbody></table>
<h1 id="Redis-列表命令"><a href="#Redis-列表命令" class="headerlink" title="Redis 列表命令"></a>Redis 列表命令</h1><p>下表列出了列表相关的基本命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>BLPOP key1 [key2 ] timeout</td>
<td>移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td>2</td>
<td>BRPOP key1 [key2 ] timeout</td>
<td>移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td>3</td>
<td>BRPOPLPUSH source destination timeout</td>
<td>从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td>4</td>
<td>LINDEX key index</td>
<td>通过索引获取列表中的元素</td>
</tr>
<tr>
<td>5</td>
<td>LINSERT key BEFORE</td>
<td>AFTER pivot value</td>
</tr>
<tr>
<td>6</td>
<td>LLEN key</td>
<td>获取列表长度</td>
</tr>
<tr>
<td>7</td>
<td>LPOP key</td>
<td>移出并获取列表的第一个元素</td>
</tr>
<tr>
<td>8</td>
<td>LPUSH key value1 [value2]</td>
<td>将一个或多个值插入到列表头部</td>
</tr>
<tr>
<td>9</td>
<td>LPUSHX key value</td>
<td>将一个值插入到已存在的列表头部</td>
</tr>
<tr>
<td>10</td>
<td>LRANGE key start stop</td>
<td>获取列表指定范围内的元素</td>
</tr>
<tr>
<td>11</td>
<td>LREM key count value</td>
<td>移除列表元素</td>
</tr>
<tr>
<td>12</td>
<td>LSET key index value</td>
<td>通过索引设置列表元素的值</td>
</tr>
<tr>
<td>13</td>
<td>LTRIM key start stop</td>
<td>对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。</td>
</tr>
<tr>
<td>14</td>
<td>RPOP key</td>
<td>移除列表的最后一个元素，返回值为移除的元素。</td>
</tr>
<tr>
<td>15</td>
<td>RPOPLPUSH source destination</td>
<td>移除列表的最后一个元素，并将该元素添加到另一个列表并返回</td>
</tr>
<tr>
<td>16</td>
<td>RPUSH key value1 [value2]</td>
<td>在列表中添加一个或多个值</td>
</tr>
<tr>
<td>17</td>
<td>RPUSHX key value</td>
<td>为已存在的列表添加值</td>
</tr>
</tbody></table>
<h1 id="Redis-集合命令"><a href="#Redis-集合命令" class="headerlink" title="Redis 集合命令"></a>Redis 集合命令</h1><p>下表列出了 Redis 集合基本命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>SADD key member1 [member2]</td>
<td>向集合添加一个或多个成员</td>
</tr>
<tr>
<td>2</td>
<td>SCARD key</td>
<td>获取集合的成员数</td>
</tr>
<tr>
<td>3</td>
<td>SDIFF key1 [key2]</td>
<td>返回第一个集合与其他集合之间的差异。</td>
</tr>
<tr>
<td>4</td>
<td>SDIFFSTORE destination key1 [key2]</td>
<td>返回给定所有集合的差集并存储在 destination 中</td>
</tr>
<tr>
<td>5</td>
<td>SINTER key1 [key2]</td>
<td>返回给定所有集合的交集</td>
</tr>
<tr>
<td>6</td>
<td>SINTERSTORE destination key1 [key2]</td>
<td>返回给定所有集合的交集并存储在 destination 中</td>
</tr>
<tr>
<td>7</td>
<td>SISMEMBER key member</td>
<td>判断 member 元素是否是集合 key 的成员</td>
</tr>
<tr>
<td>8</td>
<td>SMEMBERS key</td>
<td>返回集合中的所有成员</td>
</tr>
<tr>
<td>9</td>
<td>SMOVE source destination member</td>
<td>将 member 元素从 source 集合移动到 destination 集合</td>
</tr>
<tr>
<td>10</td>
<td>SPOP key</td>
<td>移除并返回集合中的一个随机元素</td>
</tr>
<tr>
<td>11</td>
<td>SRANDMEMBER key [count]</td>
<td>返回集合中一个或多个随机数</td>
</tr>
<tr>
<td>12</td>
<td>SREM key member1 [member2]</td>
<td>移除集合中一个或多个成员</td>
</tr>
<tr>
<td>13</td>
<td>SUNION key1 [key2]</td>
<td>返回所有给定集合的并集</td>
</tr>
<tr>
<td>14</td>
<td>SUNIONSTORE destination key1 [key2]</td>
<td>所有给定集合的并集存储在 destination 集合中</td>
</tr>
<tr>
<td>15</td>
<td>SSCAN key cursor [MATCH pattern] [COUNT count]</td>
<td>迭代集合中的元素</td>
</tr>
</tbody></table>
<h1 id="Redis-有序集合命令"><a href="#Redis-有序集合命令" class="headerlink" title="Redis 有序集合命令"></a>Redis 有序集合命令</h1><p>下表列出了 redis 有序集合的基本命令:</p>
<p>序号|    命令 |描述<br>1|    ZADD key score1 member1 [score2 member2]|向有序集合添加一个或多个成员，或者更新已存在成员的分数<br>2|    ZCARD key|获取有序集合的成员数<br>3|    ZCOUNT key min max|计算在有序集合中指定区间分数的成员数<br>4|    ZINCRBY key increment member|有序集合中对指定成员的分数加上增量 increment<br>5|    ZINTERSTORE destination numkeys key [key …]|计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 destination 中<br>6|    ZLEXCOUNT key min max|在有序集合中计算指定字典区间内成员数量<br>7|    ZRANGE key start stop [WITHSCORES]|通过索引区间返回有序集合指定区间内的成员<br>8|    ZRANGEBYLEX key min max [LIMIT offset count]|通过字典区间返回有序集合的成员<br>9|    ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]|通过分数返回有序集合指定区间内的成员<br>10|    ZRANK key member|返回有序集合中指定成员的索引<br>11|    ZREM key member [member …]|移除有序集合中的一个或多个成员<br>12|    ZREMRANGEBYLEX key min max|移除有序集合中给定的字典区间的所有成员<br>13|    ZREMRANGEBYRANK key start stop|移除有序集合中给定的排名区间的所有成员<br>14|    ZREMRANGEBYSCORE key min max|移除有序集合中给定的分数区间的所有成员<br>15|    ZREVRANGE key start stop [WITHSCORES]|返回有序集中指定区间内的成员，通过索引，分数从高到低<br>16|    ZREVRANGEBYSCORE key max min [WITHSCORES]|返回有序集中指定分数区间内的成员，分数从高到低排序<br>17|    ZREVRANK key member|返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序<br>18|    ZSCORE key member|返回有序集中，成员的分数值<br>19|    ZUNIONSTORE destination numkeys key [key …]|计算给定的一个或多个有序集的并集，并存储在新的 key 中<br>20|    ZSCAN key cursor [MATCH pattern] [COUNT count]|迭代有序集合中的元素（包括元素成员和元素分值）</p>
<h1 id="Redis-HyperLogLog-命令"><a href="#Redis-HyperLogLog-命令" class="headerlink" title="Redis HyperLogLog 命令"></a>Redis HyperLogLog 命令</h1><p>Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。</p>
<p>在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。</p>
<p>但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。</p>
<h2 id="什么是基数"><a href="#什么是基数" class="headerlink" title="什么是基数?"></a>什么是基数?</h2><p>比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}, 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。</p>
<p>下表列出了 redis HyperLogLog 的基本命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>PFADD key element [element …]</td>
<td>添加指定元素到 HyperLogLog 中。</td>
</tr>
<tr>
<td>2</td>
<td>PFCOUNT key [key …]</td>
<td>返回给定 HyperLogLog 的基数估算值。</td>
</tr>
<tr>
<td>3</td>
<td>PFMERGE destkey sourcekey [sourcekey …]</td>
<td>将多个 HyperLogLog 合并为一个 HyperLogLog</td>
</tr>
</tbody></table>
<h1 id="Redis-发布订阅命令"><a href="#Redis-发布订阅命令" class="headerlink" title="Redis 发布订阅命令"></a>Redis 发布订阅命令</h1><p>下表列出了 redis 发布订阅常用命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>PSUBSCRIBE pattern [pattern …]</td>
<td>订阅一个或多个符合给定模式的频道。</td>
</tr>
<tr>
<td>2</td>
<td>PUBSUB subcommand [argument [argument …]]</td>
<td>查看订阅与发布系统状态。</td>
</tr>
<tr>
<td>3</td>
<td>PUBLISH channel message</td>
<td>将信息发送到指定的频道。</td>
</tr>
<tr>
<td>4</td>
<td>PUNSUBSCRIBE [pattern [pattern …]]</td>
<td>退订所有给定模式的频道。</td>
</tr>
<tr>
<td>5</td>
<td>SUBSCRIBE channel [channel …]</td>
<td>订阅给定的一个或多个频道的信息。</td>
</tr>
<tr>
<td>6</td>
<td>UNSUBSCRIBE [channel [channel …]]</td>
<td>指退订给定的频道。</td>
</tr>
</tbody></table>
<h1 id="Redis-事务命令"><a href="#Redis-事务命令" class="headerlink" title="Redis 事务命令"></a>Redis 事务命令</h1><p>下表列出了 redis 事务的相关命令：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>DISCARD</td>
<td>取消事务，放弃执行事务块内的所有命令。</td>
</tr>
<tr>
<td>2</td>
<td>EXEC</td>
<td>执行所有事务块内的命令。</td>
</tr>
<tr>
<td>3</td>
<td>MULTI</td>
<td>标记一个事务块的开始。</td>
</tr>
<tr>
<td>4</td>
<td>UNWATCH</td>
<td>取消 WATCH 命令对所有 key 的监视。</td>
</tr>
<tr>
<td>5</td>
<td>WATCH key [key …]</td>
<td>监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</td>
</tr>
</tbody></table>
<h1 id="Redis-脚本命令"><a href="#Redis-脚本命令" class="headerlink" title="Redis 脚本命令"></a>Redis 脚本命令</h1><p>下表列出了 redis 脚本常用命令：</p>
<p>序号|    命令 |描述<br>1|    EVAL script numkeys key [key …] arg [arg …]|执行 Lua 脚本。<br>2|    EVALSHA sha1 numkeys key [key …] arg [arg …]|执行 Lua 脚本。<br>3|    SCRIPT EXISTS script [script …]|查看指定的脚本是否已经被保存在缓存当中。<br>4|    SCRIPT FLUSH|从脚本缓存中移除所有脚本。<br>5|    SCRIPT KILL|杀死当前正在运行的 Lua 脚本。<br>6|    SCRIPT LOAD script|将脚本 script 添加到脚本缓存中，但并不立即执行这个脚本。</p>
<h1 id="Redis-连接命令"><a href="#Redis-连接命令" class="headerlink" title="Redis 连接命令"></a>Redis 连接命令</h1><p>下表列出了 redis 连接的基本命令：</p>
<p>序号|    命令 |描述<br>1|    AUTH password|验证密码是否正确<br>2|    ECHO message|打印字符串<br>3|    PING|查看服务是否运行<br>4|    QUIT|关闭当前连接<br>5|    SELECT index|切换到指定的数据库</p>
<h1 id="Redis-服务器命令"><a href="#Redis-服务器命令" class="headerlink" title="Redis 服务器命令"></a>Redis 服务器命令</h1><p>下表列出了 redis 服务器的相关命令:</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>BGREWRITEAOF</td>
<td>异步执行一个 AOF（AppendOnly File） 文件重写操作</td>
</tr>
<tr>
<td>2</td>
<td>BGSAVE</td>
<td>在后台异步保存当前数据库的数据到磁盘</td>
</tr>
<tr>
<td>3</td>
<td>CLIENT KILL [ip:port] [ID client-id]</td>
<td>关闭客户端连接</td>
</tr>
<tr>
<td>4</td>
<td>CLIENT LIST</td>
<td>获取连接到服务器的客户端连接列表</td>
</tr>
<tr>
<td>5</td>
<td>CLIENT GETNAME</td>
<td>获取连接的名称</td>
</tr>
<tr>
<td>6</td>
<td>CLIENT PAUSE timeout</td>
<td>在指定时间内终止运行来自客户端的命令</td>
</tr>
<tr>
<td>7</td>
<td>CLIENT SETNAME connection-name</td>
<td>设置当前连接的名称</td>
</tr>
<tr>
<td>8</td>
<td>CLUSTER SLOTS</td>
<td>获取集群节点的映射数组</td>
</tr>
<tr>
<td>9</td>
<td>COMMAND</td>
<td>获取 Redis 命令详情数组</td>
</tr>
<tr>
<td>10</td>
<td>COMMAND COUNT</td>
<td>获取 Redis 命令总数</td>
</tr>
<tr>
<td>11</td>
<td>COMMAND GETKEYS</td>
<td>获取给定命令的所有键</td>
</tr>
<tr>
<td>12</td>
<td>TIME</td>
<td>返回当前服务器时间</td>
</tr>
<tr>
<td>13</td>
<td>COMMAND INFO command-name [command-name …]</td>
<td>获取指定 Redis 命令描述的数组</td>
</tr>
<tr>
<td>14</td>
<td>CONFIG GET parameter</td>
<td>获取指定配置参数的值</td>
</tr>
<tr>
<td>15</td>
<td>CONFIG REWRITE</td>
<td>对启动 Redis 服务器时所指定的 redis.conf 配置文件进行改写</td>
</tr>
<tr>
<td>16</td>
<td>CONFIG SET parameter value</td>
<td>修改 redis 配置参数，无需重启</td>
</tr>
<tr>
<td>17</td>
<td>CONFIG RESETSTAT</td>
<td>重置 INFO 命令中的某些统计数据</td>
</tr>
<tr>
<td>18</td>
<td>DBSIZE</td>
<td>返回当前数据库的 key 的数量</td>
</tr>
<tr>
<td>19</td>
<td>DEBUG OBJECT key</td>
<td>获取 key 的调试信息</td>
</tr>
<tr>
<td>20</td>
<td>DEBUG SEGFAULT</td>
<td>让 Redis 服务崩溃</td>
</tr>
<tr>
<td>21</td>
<td>FLUSHALL</td>
<td>删除所有数据库的所有key</td>
</tr>
<tr>
<td>22</td>
<td>FLUSHDB</td>
<td>删除当前数据库的所有key</td>
</tr>
<tr>
<td>23</td>
<td>INFO [section]</td>
<td>获取 Redis 服务器的各种信息和统计数值</td>
</tr>
<tr>
<td>24</td>
<td>LASTSAVE</td>
<td>返回最近一次 Redis 成功将数据保存到磁盘上的时间，以 UNIX 时间戳格式表示</td>
</tr>
<tr>
<td>25</td>
<td>MONITOR</td>
<td>实时打印出 Redis 服务器接收到的命令，调试用</td>
</tr>
<tr>
<td>26</td>
<td>ROLE</td>
<td>返回主从实例所属的角色</td>
</tr>
<tr>
<td>27</td>
<td>SAVE</td>
<td>同步保存数据到硬盘</td>
</tr>
<tr>
<td>28</td>
<td>SHUTDOWN [NOSAVE] [SAVE]</td>
<td>异步保存数据到硬盘，并关闭服务器</td>
</tr>
<tr>
<td>29</td>
<td>SLAVEOF host port</td>
<td>将当前服务器转变为指定服务器的从属服务器(slave server)</td>
</tr>
<tr>
<td>30</td>
<td>SLOWLOG subcommand [argument]</td>
<td>管理 redis 的慢日志</td>
</tr>
<tr>
<td>31</td>
<td>SYNC</td>
<td>用于复制功能(replication)的内部命令</td>
</tr>
</tbody></table>
<h1 id="Redis-Stream"><a href="#Redis-Stream" class="headerlink" title="Redis Stream"></a>Redis Stream</h1><p>Redis Stream 是 Redis 5.0 版本新增加的数据结构。</p>
<p>Redis Stream 主要用于消息队列（MQ，Message Queue），Redis 本身是有一个 Redis 发布订阅 (pub/sub) 来实现消息队列的功能，但它有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。</p>
<p>简单来说发布订阅 (pub/sub) 可以分发消息，但无法记录历史消息。</p>
<p>而 Redis Stream 提供了消息的持久化和主备复制功能，可以让任何客户端访问任何时刻的数据，并且能记住每一个客户端的访问位置，还能保证消息不丢失。</p>
<p>Redis Stream 的结构如下所示，它有一个消息链表，将所有加入的消息都串起来，每个消息都有一个唯一的 ID 和对应的内容：</p>
<p>每个 Stream 都有唯一的名称，它就是 Redis 的 key，在我们首次使用 xadd 指令追加消息时自动创建。</p>
<h2 id="消息队列相关命令："><a href="#消息队列相关命令：" class="headerlink" title="消息队列相关命令："></a>消息队列相关命令：</h2><p>XADD - 添加消息到末尾<br>XTRIM - 对流进行修剪，限制长度<br>XDEL - 删除消息<br>XLEN - 获取流包含的元素数量，即消息长度<br>XRANGE - 获取消息列表，会自动过滤已经删除的消息<br>XREVRANGE - 反向获取消息列表，ID 从大到小<br>XREAD - 以阻塞或非阻塞方式获取消息列表</p>
<h2 id="消费者组相关命令："><a href="#消费者组相关命令：" class="headerlink" title="消费者组相关命令："></a>消费者组相关命令：</h2><p>XGROUP CREATE - 创建消费者组<br>XREADGROUP GROUP - 读取消费者组中的消息<br>XACK - 将消息标记为”已处理”<br>XGROUP SETID - 为消费者组设置新的最后递送消息ID<br>XGROUP DELCONSUMER - 删除消费者<br>XGROUP DESTROY - 删除消费者组<br>XPENDING - 显示待处理消息的相关信息<br>XCLAIM - 转移消息的归属权<br>XINFO - 查看流和消费者组的相关信息；<br>XINFO GROUPS - 打印消费者组的信息；<br>XINFO STREAM - 打印流信息</p>
<h1 id="Redis-数据备份与恢复"><a href="#Redis-数据备份与恢复" class="headerlink" title="Redis 数据备份与恢复"></a>Redis 数据备份与恢复</h1><p>Redis SAVE 命令用于创建当前数据库的备份。</p>
<p>语法<br>redis Save 命令基本语法如下：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">redis</span> <span class="number">127.0.0.1:6379</span>&gt; SAVE </span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">redis</span> <span class="number">127.0.0.1:6379</span>&gt; SAVE </span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>该命令将在 redis 安装目录中创建dump.rdb文件。</p>
<h2 id="恢复数据"><a href="#恢复数据" class="headerlink" title="恢复数据"></a>恢复数据</h2><p>如果需要恢复数据，只需将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可。获取 redis 目录可以使用 CONFIG 命令，如下所示：<br> <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt;<span class="built_in"> CONFIG </span><span class="builtin-name">GET</span> dir</span><br><span class="line">1) <span class="string">&quot;dir&quot;</span></span><br><span class="line">2) <span class="string">&quot;/usr/local/redis/bin&quot;</span></span><br></pre></td></tr></table></figure><br>以上命令 CONFIG GET dir 输出的 redis 安装目录为 /usr/local/redis/bin。</p>
<h2 id="Bgsave"><a href="#Bgsave" class="headerlink" title="Bgsave"></a>Bgsave</h2><p>创建 redis 备份文件也可以使用命令 BGSAVE，该命令在后台执行。</p>
<p>实例</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1:6379</span>&gt; BGSAVE</span><br><span class="line"></span><br><span class="line">Background saving started</span><br></pre></td></tr></table></figure>

<h1 id="Redis-安全"><a href="#Redis-安全" class="headerlink" title="Redis 安全"></a>Redis 安全</h1><p>我们可以通过 redis 的配置文件设置密码参数，这样客户端连接到 redis 服务就需要密码验证，这样可以让你的 redis 服务更安全。</p>
<p>实例<br>我们可以通过以下命令查看是否设置了密码验证：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; CONFIG get requirepass</span><br><span class="line"><span class="attribute">1</span>) <span class="string">&quot;requirepass&quot;</span></span><br><span class="line"><span class="attribute">2</span>) <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>默认情况下 requirepass 参数是空的，这就意味着你无需通过密码验证就可以连接到 redis 服务。</p>
<p>你可以通过以下命令来修改该参数：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; CONFIG set requirepass <span class="string">&quot;runoob&quot;</span></span><br><span class="line"><span class="attribute">OK</span></span><br><span class="line"><span class="attribute">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">6379</span>&gt; CONFIG get requirepass</span><br><span class="line"><span class="attribute">1</span>) <span class="string">&quot;requirepass&quot;</span></span><br><span class="line"><span class="attribute">2</span>) <span class="string">&quot;runoob&quot;</span></span><br></pre></td></tr></table></figure>
<p>设置密码后，客户端连接 redis 服务就需要密码验证，否则无法执行命令。</p>
<p>语法<br>AUTH 命令基本语法格式如下：</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1:6379</span>&gt; AUTH password</span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1:6379</span>&gt; AUTH <span class="string">&quot;runoob&quot;</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0.0.1:6379</span>&gt; SET mykey <span class="string">&quot;Test value&quot;</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0.0.1:6379</span>&gt; GET mykey</span><br><span class="line"><span class="string">&quot;Test value&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="Redis-客户端连接"><a href="#Redis-客户端连接" class="headerlink" title="Redis 客户端连接"></a>Redis 客户端连接</h1><p>Redis 通过监听一个 TCP 端口或者 Unix socket 的方式来接收来自客户端的连接，当一个连接建立后，Redis 内部会进行以下一些操作：</p>
<p>首先，客户端 socket 会被设置为非阻塞模式，因为 Redis 在网络事件处理上采用的是非阻塞多路复用模型。<br>然后为这个 socket 设置 TCP_NODELAY 属性，禁用 Nagle 算法<br>然后创建一个可读的文件事件用于监听这个客户端 socket 的数据发送<br>最大连接数<br>在 Redis2.4 中，最大连接数是被直接硬编码在代码里面的，而在2.6版本中这个值变成可配置的。</p>
<p>maxclients 的默认值是 10000，你也可以在 redis.conf 中对这个值进行修改。</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">config get maxclients</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) <span class="string">&quot;maxclients&quot;</span></span><br><span class="line"><span class="number">2</span>) <span class="string">&quot;10000&quot;</span></span><br></pre></td></tr></table></figure>
<p>实例<br>以下实例我们在服务启动时设置最大连接数为 100000：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">redis-<span class="keyword">server</span> <span class="comment">--maxclients 100000</span></span><br></pre></td></tr></table></figure>
<h2 id="客户端命令"><a href="#客户端命令" class="headerlink" title="客户端命令"></a>客户端命令</h2><table>
<thead>
<tr>
<th>S.N.</th>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>CLIENT LIST</td>
<td>返回连接到 redis 服务的客户端列表</td>
</tr>
<tr>
<td>2</td>
<td>CLIENT SETNAME</td>
<td>设置当前连接的名称</td>
</tr>
<tr>
<td>3</td>
<td>CLIENT GETNAME</td>
<td>获取通过 CLIENT SETNAME 命令设置的服务名称</td>
</tr>
<tr>
<td>4</td>
<td>CLIENT PAUSE</td>
<td>挂起客户端连接，指定挂起的时间以毫秒计</td>
</tr>
<tr>
<td>5</td>
<td>CLIENT KILL</td>
<td>关闭客户端连接</td>
</tr>
</tbody></table>
<h1 id="Redis-管道技术"><a href="#Redis-管道技术" class="headerlink" title="Redis 管道技术"></a>Redis 管道技术</h1><p>Redis是一种基于客户端-服务端模型以及请求/响应协议的TCP服务。这意味着通常情况下一个请求会遵循以下步骤：</p>
<p>客户端向服务端发送一个查询请求，并监听Socket返回，通常是以阻塞模式，等待服务端响应。<br>服务端处理命令，并将结果返回给客户端。</p>
<h2 id="Redis-管道技术-1"><a href="#Redis-管道技术-1" class="headerlink" title="Redis 管道技术"></a>Redis 管道技术</h2><p>Redis 管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。</p>
<p>实例<br>查看 redis 管道，只需要启动 redis 实例并输入以下命令：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">$(echo <span class="operator">-</span>en <span class="string">&quot;PING<span class="subst">\r</span><span class="subst">\n</span> SET runoobkey redis<span class="subst">\r</span><span class="subst">\n</span>GET runoobkey<span class="subst">\r</span><span class="subst">\n</span>INCR visitor<span class="subst">\r</span><span class="subst">\n</span>INCR visitor<span class="subst">\r</span><span class="subst">\n</span>INCR visitor<span class="subst">\r</span><span class="subst">\n</span>&quot;</span>; sleep <span class="number">10</span>) <span class="operator">|</span> nc localhost <span class="number">6379</span></span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="type">PONG</span></span><br><span class="line"><span class="operator">+</span><span class="type">OK</span></span><br><span class="line">redis</span><br><span class="line">:<span class="number">1</span></span><br><span class="line">:<span class="number">2</span></span><br><span class="line">:<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>以上实例中我们通过使用 PING 命令查看redis服务是否可用， 之后我们设置了 runoobkey 的值为 redis，然后我们获取 runoobkey 的值并使得 visitor 自增 3 次。</p>
<p>在返回的结果中我们可以看到这些命令一次性向 redis 服务提交，并最终一次性读取所有服务端的响应</p>
<h2 id="管道技术的优势"><a href="#管道技术的优势" class="headerlink" title="管道技术的优势"></a>管道技术的优势</h2><p>管道技术最显著的优势是提高了 redis 服务的性能。</p>
<p>一些测试数据<br>在下面的测试中，我们将使用Redis的Ruby客户端，支持管道技术特性，测试管道技术对速度的提升效果。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;rubygems&#x27;</span> </span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;redis&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bench</span><span class="params">(descr)</span></span> </span><br><span class="line">start = Time.now </span><br><span class="line"><span class="keyword">yield</span> </span><br><span class="line">puts <span class="string">&quot;<span class="subst">#&#123;descr&#125;</span> <span class="subst">#&#123;Time.now-start&#125;</span> seconds&quot;</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">without_pipelining</span> </span></span><br><span class="line">r = Redis.new </span><br><span class="line"><span class="number">10000</span>.times &#123; </span><br><span class="line">    r.ping </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">with_pipelining</span> </span></span><br><span class="line">r = Redis.new </span><br><span class="line">r.pipelined &#123; </span><br><span class="line">    <span class="number">10000</span>.times &#123; </span><br><span class="line">        r.ping </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">bench(<span class="string">&quot;without pipelining&quot;</span>) &#123; </span><br><span class="line">    without_pipelining </span><br><span class="line">&#125; </span><br><span class="line">bench(<span class="string">&quot;with pipelining&quot;</span>) &#123; </span><br><span class="line">    with_pipelining </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从处于局域网中的Mac OS X系统上执行上面这个简单脚本的数据表明，开启了管道操作后，往返延时已经被改善得相当低了。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">without</span> pipelining <span class="number">1</span>.<span class="number">185238</span> seconds </span><br><span class="line"><span class="attribute">with</span> pipelining <span class="number">0</span>.<span class="number">250783</span> seconds</span><br></pre></td></tr></table></figure>
<p>如你所见，开启管道后，我们的速度效率提升了5倍。</p>
<h1 id="Redis-分区"><a href="#Redis-分区" class="headerlink" title="Redis 分区"></a>Redis 分区</h1><p>分区是分割数据到多个Redis实例的处理过程，因此每个实例只保存key的一个子集。</p>
<h2 id="分区的优势"><a href="#分区的优势" class="headerlink" title="分区的优势"></a>分区的优势</h2><p>通过利用多台计算机内存的和值，允许我们构造更大的数据库。<br>通过多核和多台计算机，允许我们扩展计算能力；通过多台计算机和网络适配器，允许我们扩展网络带宽。</p>
<h2 id="分区的不足"><a href="#分区的不足" class="headerlink" title="分区的不足"></a>分区的不足</h2><p>redis的一些特性在分区方面表现的不是很好：</p>
<ul>
<li>涉及多个key的操作通常是不被支持的。举例来说，当两个set映射到不同的redis实例上时，你就不能对这两个set执行交集操作。</li>
<li>涉及多个key的redis事务不能使用。</li>
<li>当使用分区时，数据处理较为复杂，比如你需要处理多个rdb/aof文件，并且从多个实例和主机备份持久化文件。</li>
<li>增加或删除容量也比较复杂。redis集群大多数支持在运行时增加、删除节点的透明数据平衡的能力，但是类似于客户端分区、代理等其他系统则不支持这项特性。然而，一种叫做presharding的技术对此是有帮助的。<h2 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h2>Redis 有两种类型分区。 假设有4个Redis实例 R0，R1，R2，R3，和类似user:1，user:2这样的表示用户的多个key，对既定的key有多种不同方式来选择这个key存放在哪个实例中。也就是说，有不同的系统来映射某个key到某个Redis服务。</li>
</ul>
<h3 id="范围分区"><a href="#范围分区" class="headerlink" title="范围分区"></a>范围分区</h3><p>最简单的分区方式是按范围分区，就是映射一定范围的对象到特定的Redis实例。</p>
<p>比如，ID从0到10000的用户会保存到实例R0，ID从10001到 20000的用户会保存到R1，以此类推。</p>
<p>这种方式是可行的，并且在实际中使用，不足就是要有一个区间范围到实例的映射表。这个表要被管理，同时还需要各 种对象的映射表，通常对Redis来说并非是好的方法。</p>
<h3 id="哈希分区"><a href="#哈希分区" class="headerlink" title="哈希分区"></a>哈希分区</h3><p>另外一种分区方法是hash分区。这对任何key都适用，也无需是object_name:这种形式，像下面描述的一样简单：</p>
<p>用一个hash函数将key转换为一个数字，比如使用crc32 hash函数。对key foobar执行crc32(foobar)会输出类似93024922的整数。<br>对这个整数取模，将其转化为0-3之间的数字，就可以将这个整数映射到4个Redis实例中的一个了。93024922 % 4 = 2，就是说key foobar应该被存到R2实例中。注意：取模操作是取除的余数，通常在多种编程语言中用%操作符实现。</p>
<h1 id="Java-使用-Redis"><a href="#Java-使用-Redis" class="headerlink" title="Java 使用 Redis"></a>Java 使用 Redis</h1><p>安装<br>开始在 Java 中使用 Redis 前， 我们需要确保已经安装了 redis 服务及 Java redis 驱动，且你的机器上能正常使用 Java。 Java的安装配置可以参考我们的 Java 开发环境配置 接下来让我们安装 Java redis 驱动：</p>
<p>首先你需要下载驱动包 下载 jedis.jar，确保下载最新驱动包。<br>在你的 classpath 中包含该驱动包</p>
<h2 id="连接到-redis-服务"><a href="#连接到-redis-服务" class="headerlink" title="连接到 redis 服务"></a>连接到 redis 服务</h2><p>实例</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisJava</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> <span class="built_in">Jedis</span>(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果 Redis 服务设置来密码，需要下面这行，没有就不需要</span></span><br><span class="line">        <span class="comment">// jedis.auth(&quot;123456&quot;); </span></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">        <span class="comment">//查看服务是否运行</span></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;服务正在运行: &quot;</span>+jedis.<span class="built_in">ping</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译以上 Java 程序，确保驱动包的路径是正确的。</p>
<blockquote>
<p>连接成功<br>服务正在运行: PONG</p>
</blockquote>
<h2 id="Redis-Java-String-字符串-实例"><a href="#Redis-Java-String-字符串-实例" class="headerlink" title="Redis Java String(字符串) 实例"></a>Redis Java String(字符串) 实例</h2><p>实例</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisStringJava</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> <span class="built_in">Jedis</span>(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">        <span class="comment">//设置 redis 字符串数据</span></span><br><span class="line">        jedis.<span class="built_in">set</span>(<span class="string">&quot;runoobkey&quot;</span>, <span class="string">&quot;www.runoob.com&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取存储的数据并输出</span></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;redis 存储的字符串为: &quot;</span>+ jedis.<span class="built_in">get</span>(<span class="string">&quot;runoobkey&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译以上程序。</p>
<blockquote>
<p>连接成功<br>redis 存储的字符串为: <a href="http://www.runoob.com/">www.runoob.com</a></p>
</blockquote>
<h2 id="Redis-Java-List-列表-实例"><a href="#Redis-Java-List-列表-实例" class="headerlink" title="Redis Java List(列表) 实例"></a>Redis Java List(列表) 实例</h2><p>实例</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisListJava</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> <span class="built_in">Jedis</span>(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">        <span class="comment">//存储数据到列表中</span></span><br><span class="line">        jedis.<span class="built_in">lpush</span>(<span class="string">&quot;site-list&quot;</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        jedis.<span class="built_in">lpush</span>(<span class="string">&quot;site-list&quot;</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        jedis.<span class="built_in">lpush</span>(<span class="string">&quot;site-list&quot;</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取存储的数据并输出</span></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; list = jedis.<span class="built_in">lrange</span>(<span class="string">&quot;site-list&quot;</span>, <span class="number">0</span> ,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;list.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">&quot;列表项为: &quot;</span>+list.<span class="built_in">get</span>(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译以上程序。</p>
<blockquote>
<p>连接成功<br>列表项为: Taobao<br>列表项为: Google<br>列表项为: Runoob</p>
</blockquote>
<h2 id="Redis-Java-Keys-实例"><a href="#Redis-Java-Keys-实例" class="headerlink" title="Redis Java Keys 实例"></a>Redis Java Keys 实例</h2><p>实例</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisKeyJava</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> <span class="built_in">Jedis</span>(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 获取数据并输出</span></span><br><span class="line">        Set&lt;<span class="keyword">String</span>&gt; keys = jedis.<span class="built_in">keys</span>(<span class="string">&quot;*&quot;</span>); </span><br><span class="line">        Iterator&lt;<span class="keyword">String</span>&gt; it=keys.<span class="built_in">iterator</span>() ;   </span><br><span class="line">        <span class="keyword">while</span>(it.<span class="built_in">hasNext</span>())&#123;   </span><br><span class="line">            <span class="keyword">String</span> key = it.<span class="built_in">next</span>();   </span><br><span class="line">            System.out.<span class="built_in">println</span>(key);   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译以上程序。</p>
<blockquote>
<p>连接成功<br>runoobkey<br>site-list</p>
</blockquote>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>StringUtil In Enovia</title>
    <url>/2021/11/02/StringUtilsInEnovia/</url>
    <content><![CDATA[<h2 id="StringUtil-in-Enovia-2013xE"><a href="#StringUtil-in-Enovia-2013xE" class="headerlink" title="StringUtil in Enovia 2013xE"></a>StringUtil in Enovia 2013xE</h2><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.matrixone.apps.domain.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.matrixone.util.Security;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"><span class="keyword">import</span> matrix.util.Mime64;</span><br><span class="line"><span class="keyword">import</span> matrix.util.StringItr;</span><br><span class="line"><span class="keyword">import</span> matrix.util.<span class="keyword">StringList</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> class StringUtil &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> FIELD_SEPARATOR = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> RECORD_SEPARATOR = <span class="string">&quot;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    StringUtil() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">join</span>(<span class="keyword">StringList</span> var0, <span class="keyword">String</span> var1) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var0.<span class="built_in">size</span>() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">String</span>)var0.elementAt(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> var2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            StringItr var3;</span><br><span class="line">            <span class="keyword">for</span>(var3 = <span class="keyword">new</span> StringItr(var0); var3.next(); var2 += var3.obj().length()) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuffer var4 = <span class="keyword">new</span> StringBuffer(var2 + var0.<span class="built_in">size</span>() * var1.length());</span><br><span class="line">            var3.reset();</span><br><span class="line">            <span class="keyword">if</span> (var3.next()) &#123;</span><br><span class="line">                var4.<span class="built_in">append</span>(var3.obj());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var3.next()) &#123;</span><br><span class="line">                var4.<span class="built_in">append</span>(var1);</span><br><span class="line">                var4.<span class="built_in">append</span>(var3.obj());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var4.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">join</span>(<span class="keyword">String</span>[] var0, <span class="keyword">String</span> var1) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var0.length == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> var0[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> var2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> var3 = <span class="number">0</span>; var3 &lt; var0.length; ++var3) &#123;</span><br><span class="line">                var2 += var0[var3].length();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuffer var5 = <span class="keyword">new</span> StringBuffer(var2 + var0.length * var1.length());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> var4 = <span class="number">0</span>; var4 &lt; var0.length; ++var4) &#123;</span><br><span class="line">                <span class="keyword">if</span> (var4 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    var5.<span class="built_in">append</span>(var1);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var5.<span class="built_in">append</span>(var0[var4]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var5.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">join</span>(List var0, <span class="keyword">String</span> var1, <span class="keyword">String</span> var2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            var2 = <span class="string">&quot;;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuffer var3 = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        Iterator var4 = var0.iterator();</span><br><span class="line">        <span class="keyword">if</span> (var4.hasNext()) &#123;</span><br><span class="line">            var3.<span class="built_in">append</span>(<span class="built_in">join</span>((<span class="keyword">StringList</span>)var4.next(), var1));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">            var3.<span class="built_in">append</span>(var2);</span><br><span class="line">            var3.<span class="built_in">append</span>(<span class="built_in">join</span>((<span class="keyword">StringList</span>)var4.next(), var1));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> var3.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">join</span>(<span class="keyword">StringList</span> var0, <span class="keyword">StringList</span> var1, <span class="keyword">String</span> var2, <span class="keyword">String</span> var3) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            var2 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var3 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            var3 = <span class="string">&quot;;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuffer var4 = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        Iterator var5 = var0.iterator();</span><br><span class="line">        Iterator var6 = var1.iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var5.hasNext() &amp;&amp; var6.hasNext()) &#123;</span><br><span class="line">            var4.<span class="built_in">append</span>((<span class="keyword">String</span>)var5.next());</span><br><span class="line">            var4.<span class="built_in">append</span>(var2);</span><br><span class="line">            var4.<span class="built_in">append</span>((<span class="keyword">String</span>)var6.next());</span><br><span class="line">            var4.<span class="built_in">append</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> var4.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">StringList</span> <span class="built_in">split</span>(<span class="keyword">String</span> var0, <span class="keyword">String</span> var1) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var0 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">StringList</span>(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringTokenizer var2 = <span class="keyword">new</span> StringTokenizer(var0, var1, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">StringList</span> var3 = <span class="keyword">new</span> <span class="keyword">StringList</span>(var2.countTokens());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> var4;</span><br><span class="line">            <span class="keyword">String</span> var5;</span><br><span class="line">            <span class="keyword">for</span>(var5 = <span class="keyword">null</span>; var2.hasMoreTokens(); var5 = var4) &#123;</span><br><span class="line">                var4 = var2.nextToken();</span><br><span class="line">                <span class="keyword">if</span> (var1.equals(var4)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (var1.equals(var5)) &#123;</span><br><span class="line">                        var3.addElement(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    var3.addElement(var4);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (var1.equals(var5)) &#123;</span><br><span class="line">                var3.addElement(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var3;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> List <span class="built_in">split</span>(<span class="keyword">String</span> var0, <span class="keyword">String</span> var1, <span class="keyword">String</span> var2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (var0 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">StringList</span>(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (var2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var2 = <span class="string">&quot;;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ArrayList var3 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            Iterator var4 = <span class="built_in">split</span>(var0, var2).iterator();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">StringList</span> var5 = <span class="built_in">split</span>((<span class="keyword">String</span>)var4.next(), var1);</span><br><span class="line">                var3.<span class="built_in">add</span>(var5);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var3;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">StringList</span> splitString(<span class="keyword">String</span> var0, <span class="keyword">String</span> var1) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">StringList</span> var2 = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">        <span class="keyword">String</span> var3 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="built_in">int</span> var4 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> var5 = var1.length();</span><br><span class="line">        <span class="built_in">boolean</span> var6 = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (var0 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> var2;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                var1 = <span class="string">&quot;~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> var7 = var0.length();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> var8 = <span class="number">0</span>; var4 != <span class="number">-1</span> &amp;&amp; var4 &lt; var7; var2.addElement(var3.<span class="built_in">trim</span>())) &#123;</span><br><span class="line">                <span class="built_in">int</span> var9;</span><br><span class="line">                <span class="keyword">if</span> (var4 == <span class="number">0</span> &amp;&amp; var8 == <span class="number">0</span>) &#123;</span><br><span class="line">                    var9 = var4;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    var9 = var4 + var5;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ++var8;</span><br><span class="line">                var4 = var0.indexOf(var1, var9);</span><br><span class="line">                <span class="keyword">if</span> (var4 != <span class="number">-1</span>) &#123;</span><br><span class="line">                    var3 = var0.substring(var9, var4);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    var3 = var0.substring(var9, var7);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (var3 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    var3 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> encrypt(<span class="keyword">String</span> var0) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> Mime64.encode(Security.encrypt(var0.getBytes()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> decrypt(<span class="keyword">String</span> var0) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(Security.deCrypt(Mime64.decode(var0)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>SVN_Commands</title>
    <url>/2021/11/02/SVN-Commands/</url>
    <content><![CDATA[<h2 id="Got-detail-of-repository"><a href="#Got-detail-of-repository" class="headerlink" title="Got detail of repository"></a>Got detail of repository</h2><pre><code>svn info
</code></pre>
<h2 id="change-svn-branch-within-same-repository"><a href="#change-svn-branch-within-same-repository" class="headerlink" title="change svn branch within same repository"></a>change svn branch within same repository</h2><pre><code>svn switch NEW_BRANCH_URL
svn cleanup
</code></pre>
<h2 id="change-location-with-different-repository"><a href="#change-location-with-different-repository" class="headerlink" title="change location with different repository"></a>change location with different repository</h2><pre><code>svn switch --relocate CURRENT_URL NEW_URL
</code></pre>
<blockquote>
<p>Note: Be careful when using the –relocate option. If you mistype the argument, you might end up creating nonsensical URLs within your working copy that render the whole workspace unusable and tricky to fix. It’s also important to understand exactly when one should or shouldn’t use –relocate. Here’s the rule of thumb:</p>
</blockquote>
<ol>
<li><p>If the working copy needs to reflect a new directory within the repository, use just svn switch.</p>
</li>
<li><p>If the working copy still reflects the same repository directory, but the location of the repository itself has changed, use svn switch with the –relocate option.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>SVN</category>
      </categories>
      <tags>
        <tag>SVN</tag>
      </tags>
  </entry>
  <entry>
    <title>loadRepository_and_modify_table_and_field</title>
    <url>/2021/11/02/loadRepository-and-modify-table-and-field/</url>
    <content><![CDATA[<h2 id="LoadRepository"><a href="#LoadRepository" class="headerlink" title="LoadRepository"></a>LoadRepository</h2><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sap.mdm.examples;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.commands.AuthenticateRepositorySessionCommand;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.commands.CommandException;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.commands.CreateRepositorySessionCommand;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.commands.DestroySessionCommand;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.net.ConnectionException;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.net.ConnectionPool;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.net.ConnectionPoolFactory;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.repository.commands.LoadRepositoryCommand;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.server.DBMSType;</span><br><span class="line"><span class="keyword">import</span> com.sap.mdm.server.RepositoryIdentifier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright Â© 2004-2006 by SAP AG.</span></span><br><span class="line"><span class="comment"> * All Rights Reserved.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * SAP, R/3, mySAP, mySAP.com, xApps, xApp, SAP NetWeaver, and other SAP</span></span><br><span class="line"><span class="comment"> * products and services mentioned herein as well as their respective logos are</span></span><br><span class="line"><span class="comment"> * trademarks or registered trademarks of SAP AG in Germany and in several other</span></span><br><span class="line"><span class="comment"> * countries all over the world. All other product and service names mentioned</span></span><br><span class="line"><span class="comment"> * are the trademarks of their respective companies. Data contained in this</span></span><br><span class="line"><span class="comment"> * document serves informational purposes only. National product specifications</span></span><br><span class="line"><span class="comment"> * may vary.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * These materials are subject to change without notice. These materials are</span></span><br><span class="line"><span class="comment"> * provided by SAP AG and its affiliated companies (SAP Group) for informational</span></span><br><span class="line"><span class="comment"> * purposes only, without representation or warranty of any kind, and SAP Group</span></span><br><span class="line"><span class="comment"> * shall not be liable for errors or omissions with respect to the materials.</span></span><br><span class="line"><span class="comment"> * The only warranties for SAP Group products and services are those that are</span></span><br><span class="line"><span class="comment"> * set forth in the express warranty statements accompanying such products and</span></span><br><span class="line"><span class="comment"> * services, if any. Nothing herein should be construed as constituting an</span></span><br><span class="line"><span class="comment"> * additional warranty.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This example demonstrates loading a repository. The steps are:</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Establishes connection with the MDM server&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Creates a repository session for the targeted repository&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Authenticates the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Loads the repository&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Destroys the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * Commands used:&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;AuthenticateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;LoadRepositoryCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;DestroySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;LoadRepository.java&quot;&gt;Source code for LoadRepository.java&lt;/a&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadRepository</span> </span>&#123;        </span><br><span class="line">    <span class="keyword">private</span> LoadRepository() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        <span class="comment">// create connection pool</span></span><br><span class="line">        <span class="keyword">String</span> connectionTag = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        ConnectionPool connections = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connections = ConnectionPoolFactory.getInstance(connectionTag);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ConnectionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// alternatively, a repository identifier can be obtain from the GetMountedRepositoryListCommand  </span></span><br><span class="line">        RepositoryIdentifier reposId = <span class="keyword">new</span> <span class="type">RepositoryIdentifier</span>(<span class="string">&quot;EmptyRepos&quot;</span>, <span class="string">&quot;LOCALHOST&quot;</span>, DBMSType.MS_SQL);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create repository session</span></span><br><span class="line">        CreateRepositorySessionCommand sessionCommand = <span class="keyword">new</span> <span class="type">CreateRepositorySessionCommand</span>(connections);</span><br><span class="line">        sessionCommand.setRepositoryIdentifier(reposId);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sessionCommand.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CommandException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="keyword">String</span> sessionId = sessionCommand.getRepositorySession();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// authenticate the repository session</span></span><br><span class="line">        <span class="keyword">String</span> userName = <span class="string">&quot;Admin&quot;</span>;</span><br><span class="line">        <span class="keyword">String</span> userPassword = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        AuthenticateRepositorySessionCommand authCommand = <span class="keyword">new</span> <span class="type">AuthenticateRepositorySessionCommand</span>(connections);</span><br><span class="line">        authCommand.setSession(sessionId);</span><br><span class="line">        authCommand.setUserName(userName);</span><br><span class="line">        authCommand.setUserPassword(userPassword);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authCommand.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CommandException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// load the repository</span></span><br><span class="line">        LoadRepositoryCommand loadReposCommand = <span class="keyword">new</span> <span class="type">LoadRepositoryCommand</span>(connections);</span><br><span class="line">        loadReposCommand.setSession(sessionId);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            loadReposCommand.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CommandException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// finally destroy the repository session</span></span><br><span class="line">        DestroySessionCommand destroySessionCommand = <span class="keyword">new</span> <span class="type">DestroySessionCommand</span>(connections);</span><br><span class="line">        destroySessionCommand.setSession(sessionId);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            destroySessionCommand.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CommandException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;                </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Create-Table"><a href="#Create-Table" class="headerlink" title="Create Table"></a>Create Table</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.sap.mdm.examples;</span><br><span class="line"></span><br><span class="line">import java.util.Locale;</span><br><span class="line"></span><br><span class="line">import com.sap.mdm.commands.AuthenticateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.CommandException;</span><br><span class="line">import com.sap.mdm.commands.CreateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.DestroySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.GetRepositoryRegionListCommand;</span><br><span class="line">import com.sap.mdm.data.MultilingualString;</span><br><span class="line">import com.sap.mdm.data.RegionProperties;</span><br><span class="line">import com.sap.mdm.data.RegionalString;</span><br><span class="line">import com.sap.mdm.net.ConnectionException;</span><br><span class="line">import com.sap.mdm.net.ConnectionPool;</span><br><span class="line">import com.sap.mdm.net.ConnectionPoolFactory;</span><br><span class="line">import com.sap.mdm.schema.TableProperties;</span><br><span class="line">import com.sap.mdm.schema.commands.CreateTableCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.GetTableListCommand;</span><br><span class="line">import com.sap.mdm.server.DBMSType;</span><br><span class="line">import com.sap.mdm.server.RepositoryIdentifier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright Â© 2004-2006 by SAP AG.</span></span><br><span class="line"><span class="comment"> * All Rights Reserved.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * SAP, R/3, mySAP, mySAP.com, xApps, xApp, SAP NetWeaver, and other SAP</span></span><br><span class="line"><span class="comment"> * products and services mentioned herein as well as their respective logos are</span></span><br><span class="line"><span class="comment"> * trademarks or registered trademarks of SAP AG in Germany and in several other</span></span><br><span class="line"><span class="comment"> * countries all over the world. All other product and service names mentioned</span></span><br><span class="line"><span class="comment"> * are the trademarks of their respective companies. Data contained in this</span></span><br><span class="line"><span class="comment"> * document serves informational purposes only. National product specifications</span></span><br><span class="line"><span class="comment"> * may vary.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * These materials are subject to change without notice. These materials are</span></span><br><span class="line"><span class="comment"> * provided by SAP AG and its affiliated companies (SAP Group) for informational</span></span><br><span class="line"><span class="comment"> * purposes only, without representation or warranty of any kind, and SAP Group</span></span><br><span class="line"><span class="comment"> * shall not be liable for errors or omissions with respect to the materials.</span></span><br><span class="line"><span class="comment"> * The only warranties for SAP Group products and services are those that are</span></span><br><span class="line"><span class="comment"> * set forth in the express warranty statements accompanying such products and</span></span><br><span class="line"><span class="comment"> * services, if any. Nothing herein should be construed as constituting an</span></span><br><span class="line"><span class="comment"> * additional warranty.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This example demonstrates creating a new table for a repository. The steps</span></span><br><span class="line"><span class="comment"> * are:</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Establish connection with the MDM server&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Create a repository session for the targeted repository&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Authenticate the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Create the new table&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Destroy the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * Commands used:&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;AuthenticateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetTableListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetRepositoryRegionListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateTableCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;DestroySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;CreateTable.java&quot;&gt;Source code for CreateTable.java&lt;/a&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> CreateTable &#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="constructor">CreateTable()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a multi-lingual string based on the list of regions.</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @param baseString the base string</span></span><br><span class="line"><span class="comment">     * @return a multi-lingual string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static MultilingualString create<span class="constructor">MultilingualString(RegionProperties[] <span class="params">regionPropertiesList</span>, String <span class="params">baseString</span>)</span> &#123;</span><br><span class="line">        MultilingualString mlString = <span class="keyword">new</span> <span class="constructor">MultilingualString()</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; regionPropertiesList.length; i++) &#123;</span><br><span class="line">            Locale locale = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">Locale()</span>;</span><br><span class="line">            String regionCode = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">RegionCode()</span>;</span><br><span class="line">            String <span class="built_in">string</span> = baseString + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Language()</span> + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Country()</span>;</span><br><span class="line">            RegionalString regionalString = <span class="keyword">new</span> <span class="constructor">RegionalString(<span class="params">string</span>, <span class="params">regionCode</span>)</span>;</span><br><span class="line">            mlString.set(regionalString);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return mlString;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a flat lookup table.</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @return a flat table</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static TableProperties create<span class="constructor">FlatTable(RegionProperties[] <span class="params">regionPropertiesList</span>)</span> &#123;</span><br><span class="line">        MultilingualString tableName = create<span class="constructor">MultilingualString(<span class="params">regionPropertiesList</span>, <span class="string">&quot;NewTable&quot;</span> + System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line"></span><br><span class="line">        TableProperties table = <span class="keyword">new</span> <span class="constructor">TableProperties(TableProperties.FLAT)</span>;        </span><br><span class="line">        table.set<span class="constructor">Name(<span class="params">tableName</span>)</span>;</span><br><span class="line">        table.set<span class="constructor">Code(<span class="string">&quot;NewCode&quot;</span> + System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line">        table.set<span class="constructor">KeyMappable(<span class="params">true</span>)</span>;</span><br><span class="line">        table.set<span class="constructor">Description(<span class="string">&quot;&quot;</span>)</span>;</span><br><span class="line">        </span><br><span class="line">        return table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">// create connection pool to a MDM server</span></span><br><span class="line">        String serverName = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        ConnectionPool connections = null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connections = <span class="module-access"><span class="module"><span class="identifier">ConnectionPoolFactory</span>.</span></span>get<span class="constructor">Instance(<span class="params">serverName</span>)</span>;</span><br><span class="line">        &#125; catch (ConnectionException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// specify the repository to use</span></span><br><span class="line">        <span class="comment">// alternatively, a repository identifier can be obtain from the GetMountedRepositoryListCommand</span></span><br><span class="line">        String repositoryName = <span class="string">&quot;TestRepos&quot;</span>;</span><br><span class="line">        String dbmsName = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        RepositoryIdentifier reposId = <span class="keyword">new</span> <span class="constructor">RepositoryIdentifier(<span class="params">repositoryName</span>, <span class="params">dbmsName</span>, DBMSType.MS_SQL)</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create a repository session</span></span><br><span class="line">        CreateRepositorySessionCommand sessionCommand = <span class="keyword">new</span> <span class="constructor">CreateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        sessionCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span> )</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line">        String sessionId = sessionCommand.get<span class="constructor">RepositorySession()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// authenticate the repository session</span></span><br><span class="line">        String userName = <span class="string">&quot;Admin&quot;</span>;</span><br><span class="line">        String userPassword = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        AuthenticateRepositorySessionCommand authCommand = <span class="keyword">new</span> <span class="constructor">AuthenticateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserName(<span class="params">userName</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserPassword(<span class="params">userPassword</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the list of tables</span></span><br><span class="line">        <span class="comment">// this is useful for resolving conflicting table name the new table might create</span></span><br><span class="line">        GetTableListCommand tableListCommand = <span class="keyword">new</span> <span class="constructor">GetTableListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        tableListCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tableListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;                </span><br><span class="line">        <span class="comment">// get change stamp</span></span><br><span class="line">        <span class="comment">// this is required when we make any kind of changes to the repository</span></span><br><span class="line">        <span class="built_in">int</span> changeStamp = tableListCommand.get<span class="constructor">ChangeStamp()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// retrieve the available regions (languages) for the repository</span></span><br><span class="line">        <span class="comment">// we need this to set up the table name for each region</span></span><br><span class="line">        GetRepositoryRegionListCommand getReposRegionListCommand = <span class="keyword">new</span> <span class="constructor">GetRepositoryRegionListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        getReposRegionListCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getReposRegionListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        RegionProperties<span class="literal">[]</span> regionPropertiesList = getReposRegionListCommand.get<span class="constructor">Regions()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up the table to create</span></span><br><span class="line">        TableProperties newTable = create<span class="constructor">FlatTable(<span class="params">regionPropertiesList</span>)</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create the table on repository</span></span><br><span class="line">        CreateTableCommand createTableCommand = <span class="keyword">new</span> <span class="constructor">CreateTableCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        createTableCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        createTableCommand.set<span class="constructor">Table(<span class="params">newTable</span>)</span>;</span><br><span class="line">        createTableCommand.set<span class="constructor">InChangeStamp(<span class="params">changeStamp</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            createTableCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// finally destroy the session</span></span><br><span class="line">        DestroySessionCommand destroySessionCommand = <span class="keyword">new</span> <span class="constructor">DestroySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        destroySessionCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            destroySessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Create-Field"><a href="#Create-Field" class="headerlink" title="Create Field"></a>Create Field</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.sap.mdm.examples;</span><br><span class="line"></span><br><span class="line">import java.util.Locale;</span><br><span class="line"></span><br><span class="line">import com.sap.mdm.commands.AuthenticateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.CommandException;</span><br><span class="line">import com.sap.mdm.commands.CreateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.DestroySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.GetRepositoryRegionListCommand;</span><br><span class="line">import com.sap.mdm.data.MultilingualString;</span><br><span class="line">import com.sap.mdm.data.RegionProperties;</span><br><span class="line">import com.sap.mdm.data.RegionalString;</span><br><span class="line">import com.sap.mdm.ids.TableId;</span><br><span class="line">import com.sap.mdm.net.ConnectionException;</span><br><span class="line">import com.sap.mdm.net.ConnectionPool;</span><br><span class="line">import com.sap.mdm.net.ConnectionPoolFactory;</span><br><span class="line">import com.sap.mdm.schema.FieldKeywordType;</span><br><span class="line">import com.sap.mdm.schema.FieldProperties;</span><br><span class="line">import com.sap.mdm.schema.FieldSortType;</span><br><span class="line">import com.sap.mdm.schema.TableProperties;</span><br><span class="line">import com.sap.mdm.schema.commands.CreateFieldCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.GetFieldListCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.GetTableListCommand;</span><br><span class="line">import com.sap.mdm.schema.fields.FixedWidthTextFieldProperties;</span><br><span class="line">import com.sap.mdm.server.DBMSType;</span><br><span class="line">import com.sap.mdm.server.RepositoryIdentifier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright Â© 2004-2006 by SAP AG.</span></span><br><span class="line"><span class="comment"> * All Rights Reserved.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * SAP, R/3, mySAP, mySAP.com, xApps, xApp, SAP NetWeaver, and other SAP</span></span><br><span class="line"><span class="comment"> * products and services mentioned herein as well as their respective logos are</span></span><br><span class="line"><span class="comment"> * trademarks or registered trademarks of SAP AG in Germany and in several other</span></span><br><span class="line"><span class="comment"> * countries all over the world. All other product and service names mentioned</span></span><br><span class="line"><span class="comment"> * are the trademarks of their respective companies. Data contained in this</span></span><br><span class="line"><span class="comment"> * document serves informational purposes only. National product specifications</span></span><br><span class="line"><span class="comment"> * may vary.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * These materials are subject to change without notice. These materials are</span></span><br><span class="line"><span class="comment"> * provided by SAP AG and its affiliated companies (SAP Group) for informational</span></span><br><span class="line"><span class="comment"> * purposes only, without representation or warranty of any kind, and SAP Group</span></span><br><span class="line"><span class="comment"> * shall not be liable for errors or omissions with respect to the materials.</span></span><br><span class="line"><span class="comment"> * The only warranties for SAP Group products and services are those that are</span></span><br><span class="line"><span class="comment"> * set forth in the express warranty statements accompanying such products and</span></span><br><span class="line"><span class="comment"> * services, if any. Nothing herein should be construed as constituting an</span></span><br><span class="line"><span class="comment"> * additional warranty.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This example demonstrates creating a new field in the main table. The steps</span></span><br><span class="line"><span class="comment"> * are:</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Establishes connection with server&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Creates a session for the targeted repository&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Authenticates the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Selects the main table&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Creates the new field&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Destroys the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * Commands used:&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;AuthenticateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetTableListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetFieldListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetRepositoryRegionListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateFieldCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;DestroySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;CreateField.java&quot;&gt;Source code for CreateField.java&lt;/a&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> CreateField &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="constructor">CreateField()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a multi-lingual string based on the list of regions.</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @param baseString the base string</span></span><br><span class="line"><span class="comment">     * @return a multi-lingual string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static MultilingualString create<span class="constructor">MultilingualString(RegionProperties[] <span class="params">regionPropertiesList</span>, String <span class="params">baseString</span>)</span> &#123;</span><br><span class="line">        MultilingualString mlString = <span class="keyword">new</span> <span class="constructor">MultilingualString()</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; regionPropertiesList.length; i++) &#123;</span><br><span class="line">            Locale locale = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">Locale()</span>;</span><br><span class="line">            String regionCode = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">RegionCode()</span>;</span><br><span class="line">            String <span class="built_in">string</span> = baseString + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Language()</span> + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Country()</span>;</span><br><span class="line">            RegionalString regionalString = <span class="keyword">new</span> <span class="constructor">RegionalString(<span class="params">string</span>, <span class="params">regionCode</span>)</span>;</span><br><span class="line">            mlString.set(regionalString);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return mlString;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a fixed-width field.</span></span><br><span class="line"><span class="comment">     * @param tableId the table from which the field will be create in</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @return the new fixed-width field</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static FixedWidthTextFieldProperties create<span class="constructor">FixedWidthField(TableId <span class="params">tableId</span>, RegionProperties[] <span class="params">regionPropertiesList</span>)</span> &#123;</span><br><span class="line">        MultilingualString fieldName = create<span class="constructor">MultilingualString(<span class="params">regionPropertiesList</span>, <span class="string">&quot;NewField&quot;</span> + System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line"></span><br><span class="line">        FixedWidthTextFieldProperties field = <span class="keyword">new</span> <span class="constructor">FixedWidthTextFieldProperties()</span>;</span><br><span class="line">        field.set<span class="constructor">TableId(<span class="params">tableId</span>)</span>;        </span><br><span class="line">        field.set<span class="constructor">Name(<span class="params">fieldName</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">Code(<span class="string">&quot;NewCode&quot;</span> + System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line">        field.set<span class="constructor">KeywordType(FieldKeywordType.NORMAL)</span>;        </span><br><span class="line">        field.set<span class="constructor">MultiLingual(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">ModifyOnce(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">Required(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">SortType(FieldSortType.CASE_SENSITIVE)</span>;</span><br><span class="line">        field.set<span class="constructor">Width(60)</span>;</span><br><span class="line">        field.set<span class="constructor">Description(<span class="string">&quot;&quot;</span>)</span>;</span><br><span class="line">     </span><br><span class="line">        return field;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">// create connection pool to a MDM server</span></span><br><span class="line">        String serverName = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        ConnectionPool connections = null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connections = <span class="module-access"><span class="module"><span class="identifier">ConnectionPoolFactory</span>.</span></span>get<span class="constructor">Instance(<span class="params">serverName</span>)</span>;</span><br><span class="line">        &#125; catch (ConnectionException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// specify the repository to use</span></span><br><span class="line">        <span class="comment">// alternatively, a repository identifier can be obtain from the GetMountedRepositoryListCommand  </span></span><br><span class="line">        String repositoryName = <span class="string">&quot;TestRepos&quot;</span>;</span><br><span class="line">        String dbmsName = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        RepositoryIdentifier reposId = <span class="keyword">new</span> <span class="constructor">RepositoryIdentifier(<span class="params">repositoryName</span>, <span class="params">dbmsName</span>, DBMSType.MS_SQL)</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create a repository session</span></span><br><span class="line">        CreateRepositorySessionCommand sessionCommand = <span class="keyword">new</span> <span class="constructor">CreateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        sessionCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span> )</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line">        String sessionId = sessionCommand.get<span class="constructor">RepositorySession()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// authenticate the repository session</span></span><br><span class="line">        String userName = <span class="string">&quot;Admin&quot;</span>;</span><br><span class="line">        String userPassword = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        AuthenticateRepositorySessionCommand authCommand = <span class="keyword">new</span> <span class="constructor">AuthenticateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserName(<span class="params">userName</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserPassword(<span class="params">userPassword</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// retrieve the list of tables and pick the main table for creating a new field</span></span><br><span class="line">        GetTableListCommand tableListCommand = <span class="keyword">new</span> <span class="constructor">GetTableListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        tableListCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tableListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;                </span><br><span class="line"></span><br><span class="line">        TableProperties mainTable = null;</span><br><span class="line">        TableProperties<span class="literal">[]</span> tables = tableListCommand.get<span class="constructor">Tables()</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tables.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tables<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">Type()</span><span class="operator"> == </span>TableProperties.MAIN)</span><br><span class="line">                mainTable = tables<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the list of fields from the main table</span></span><br><span class="line">        <span class="comment">// this is useful for resolving conflicting field names the new field might create</span></span><br><span class="line">        GetFieldListCommand getFieldListCommand = <span class="keyword">new</span> <span class="constructor">GetFieldListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        getFieldListCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        getFieldListCommand.set<span class="constructor">TableId(<span class="params">mainTable</span>.<span class="params">getId</span>()</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getFieldListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// get the change stamp</span></span><br><span class="line">        <span class="comment">// this is required when we make any kind of changes to the repository        </span></span><br><span class="line">        <span class="built_in">int</span> changeStamp = getFieldListCommand.get<span class="constructor">ChangeStamp()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the available regions (languages) for the repository</span></span><br><span class="line">        <span class="comment">// we need this to set up the field name for each region</span></span><br><span class="line">        GetRepositoryRegionListCommand getReposRegionListCommand = <span class="keyword">new</span> <span class="constructor">GetRepositoryRegionListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        getReposRegionListCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getReposRegionListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        RegionProperties<span class="literal">[]</span> regionPropertiesList = getReposRegionListCommand.get<span class="constructor">Regions()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up the field to create</span></span><br><span class="line">        FieldProperties newField = create<span class="constructor">FixedWidthField(<span class="params">mainTable</span>.<span class="params">getId</span>()</span>, regionPropertiesList);        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create the new field</span></span><br><span class="line">        CreateFieldCommand createFieldCommand = <span class="keyword">new</span> <span class="constructor">CreateFieldCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">Field(<span class="params">newField</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">InChangeStamp(<span class="params">changeStamp</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            createFieldCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// finally destroy the session</span></span><br><span class="line">        DestroySessionCommand destroySessionCommand = <span class="keyword">new</span> <span class="constructor">DestroySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        destroySessionCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            destroySessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Modify-Field"><a href="#Modify-Field" class="headerlink" title="Modify Field"></a>Modify Field</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package com.sap.mdm.examples;</span><br><span class="line"></span><br><span class="line">import java.util.Locale;</span><br><span class="line"></span><br><span class="line">import com.sap.mdm.commands.AuthenticateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.CommandException;</span><br><span class="line">import com.sap.mdm.commands.CreateRepositorySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.DestroySessionCommand;</span><br><span class="line">import com.sap.mdm.commands.GetRepositoryRegionListCommand;</span><br><span class="line">import com.sap.mdm.data.MultilingualString;</span><br><span class="line">import com.sap.mdm.data.RegionProperties;</span><br><span class="line">import com.sap.mdm.data.RegionalString;</span><br><span class="line">import com.sap.mdm.ids.TableId;</span><br><span class="line">import com.sap.mdm.net.ConnectionException;</span><br><span class="line">import com.sap.mdm.net.ConnectionPool;</span><br><span class="line">import com.sap.mdm.net.ConnectionPoolFactory;</span><br><span class="line">import com.sap.mdm.schema.FieldKeywordType;</span><br><span class="line">import com.sap.mdm.schema.FieldProperties;</span><br><span class="line">import com.sap.mdm.schema.FieldSortType;</span><br><span class="line">import com.sap.mdm.schema.TableProperties;</span><br><span class="line">import com.sap.mdm.schema.commands.CreateFieldCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.GetFieldListCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.GetTableListCommand;</span><br><span class="line">import com.sap.mdm.schema.commands.ModifyFieldCommand;</span><br><span class="line">import com.sap.mdm.schema.fields.FixedWidthTextFieldProperties;</span><br><span class="line">import com.sap.mdm.server.DBMSType;</span><br><span class="line">import com.sap.mdm.server.RepositoryIdentifier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright Â© 2004-2006 by SAP AG.</span></span><br><span class="line"><span class="comment"> * All Rights Reserved.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * SAP, R/3, mySAP, mySAP.com, xApps, xApp, SAP NetWeaver, and other SAP</span></span><br><span class="line"><span class="comment"> * products and services mentioned herein as well as their respective logos are</span></span><br><span class="line"><span class="comment"> * trademarks or registered trademarks of SAP AG in Germany and in several other</span></span><br><span class="line"><span class="comment"> * countries all over the world. All other product and service names mentioned</span></span><br><span class="line"><span class="comment"> * are the trademarks of their respective companies. Data contained in this</span></span><br><span class="line"><span class="comment"> * document serves informational purposes only. National product specifications</span></span><br><span class="line"><span class="comment"> * may vary.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * These materials are subject to change without notice. These materials are</span></span><br><span class="line"><span class="comment"> * provided by SAP AG and its affiliated companies (SAP Group) for informational</span></span><br><span class="line"><span class="comment"> * purposes only, without representation or warranty of any kind, and SAP Group</span></span><br><span class="line"><span class="comment"> * shall not be liable for errors or omissions with respect to the materials.</span></span><br><span class="line"><span class="comment"> * The only warranties for SAP Group products and services are those that are</span></span><br><span class="line"><span class="comment"> * set forth in the express warranty statements accompanying such products and</span></span><br><span class="line"><span class="comment"> * services, if any. Nothing herein should be construed as constituting an</span></span><br><span class="line"><span class="comment"> * additional warranty.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This example demonstrates modifying a new field in the main table. The steps</span></span><br><span class="line"><span class="comment"> * are:</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Establishes connection with MDM server&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Creates a session for the targeted repository&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Authenticates the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Selects the main table&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Creates the new field&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Modifies the new field&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Destroys the session&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * Commands used:&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;AuthenticateRepositorySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetTableListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetFieldListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;GetRepositoryRegionListCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;CreateFieldCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;ModifyFieldCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;DestroySessionCommand&lt;/code&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;ModifyField.java&quot;&gt;Source code for ModifyField.java&lt;/a&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> ModifyField &#123;          </span><br><span class="line">    <span class="keyword">private</span> <span class="constructor">ModifyField()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a multi-lingual string based on the list of regions.</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @param baseString the base string</span></span><br><span class="line"><span class="comment">     * @return a multi-lingual string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static MultilingualString create<span class="constructor">MultilingualString(RegionProperties[] <span class="params">regionPropertiesList</span>, String <span class="params">baseString</span>)</span> &#123;</span><br><span class="line">        MultilingualString mlString = <span class="keyword">new</span> <span class="constructor">MultilingualString()</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; regionPropertiesList.length; i++) &#123;</span><br><span class="line">            Locale locale = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">Locale()</span>;</span><br><span class="line">            String regionCode = regionPropertiesList<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">RegionCode()</span>;</span><br><span class="line">            String <span class="built_in">string</span> = baseString + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Language()</span> + <span class="string">&quot;_&quot;</span> + locale.get<span class="constructor">Country()</span>;</span><br><span class="line">            RegionalString regionalString = <span class="keyword">new</span> <span class="constructor">RegionalString(<span class="params">string</span>, <span class="params">regionCode</span>)</span>;</span><br><span class="line">            mlString.set(regionalString);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return mlString;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a fixed-width field.</span></span><br><span class="line"><span class="comment">     * @param tableId the table from which the field will be create in</span></span><br><span class="line"><span class="comment">     * @param regionPropertiesList the list of regions</span></span><br><span class="line"><span class="comment">     * @return the new fixed-width field</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> static FixedWidthTextFieldProperties create<span class="constructor">FixedWidthField(TableId <span class="params">tableId</span>, RegionProperties[] <span class="params">regionPropertiesList</span>)</span> &#123;</span><br><span class="line">        MultilingualString fieldName = create<span class="constructor">MultilingualString(<span class="params">regionPropertiesList</span>, <span class="string">&quot;NewField&quot;</span> + System.<span class="params">currentTimeMillis</span>()</span>);</span><br><span class="line"></span><br><span class="line">        FixedWidthTextFieldProperties field = <span class="keyword">new</span> <span class="constructor">FixedWidthTextFieldProperties()</span>;</span><br><span class="line">        field.set<span class="constructor">TableId(<span class="params">tableId</span>)</span>;        </span><br><span class="line">        field.set<span class="constructor">Name(<span class="params">fieldName</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">KeywordType(FieldKeywordType.NORMAL)</span>;        </span><br><span class="line">        field.set<span class="constructor">MultiLingual(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">ModifyOnce(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">Required(<span class="params">true</span>)</span>;</span><br><span class="line">        field.set<span class="constructor">SortType(FieldSortType.CASE_SENSITIVE)</span>;</span><br><span class="line">        field.set<span class="constructor">Width(60)</span>;        </span><br><span class="line">     </span><br><span class="line">        return field;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        <span class="comment">// create connection pool to a MDM server</span></span><br><span class="line">        String tag = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        ConnectionPool connections = null;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connections = <span class="module-access"><span class="module"><span class="identifier">ConnectionPoolFactory</span>.</span></span>get<span class="constructor">Instance(<span class="params">tag</span>)</span>;</span><br><span class="line">        &#125; catch (ConnectionException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// specify the repository to use</span></span><br><span class="line">        <span class="comment">// alternatively, a repository identifier can be obtain from the GetMountedRepositoryListCommand  </span></span><br><span class="line">        String repositoryName = <span class="string">&quot;TestRepos&quot;</span>;</span><br><span class="line">        String dbmsName = <span class="string">&quot;LOCALHOST&quot;</span>;</span><br><span class="line">        RepositoryIdentifier reposId = <span class="keyword">new</span> <span class="constructor">RepositoryIdentifier(<span class="params">repositoryName</span>, <span class="params">dbmsName</span>, DBMSType.MS_SQL)</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create a repository session</span></span><br><span class="line">        CreateRepositorySessionCommand sessionCommand = <span class="keyword">new</span> <span class="constructor">CreateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        sessionCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span> )</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line">        String sessionId = sessionCommand.get<span class="constructor">RepositorySession()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// authenticate the repository session</span></span><br><span class="line">        String userName = <span class="string">&quot;Admin&quot;</span>;</span><br><span class="line">        String userPassword = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        AuthenticateRepositorySessionCommand authCommand = <span class="keyword">new</span> <span class="constructor">AuthenticateRepositorySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserName(<span class="params">userName</span>)</span>;</span><br><span class="line">        authCommand.set<span class="constructor">UserPassword(<span class="params">userPassword</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// retrieve the list of tables and pick the main table for creating a new field</span></span><br><span class="line">        GetTableListCommand tableListCommand = <span class="keyword">new</span> <span class="constructor">GetTableListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        tableListCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tableListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;                </span><br><span class="line"></span><br><span class="line">        TableProperties mainTable = null;</span><br><span class="line">        TableProperties<span class="literal">[]</span> tables = tableListCommand.get<span class="constructor">Tables()</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tables.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tables<span class="literal">[<span class="identifier">i</span>]</span>.get<span class="constructor">Type()</span><span class="operator"> == </span>TableProperties.MAIN)</span><br><span class="line">                mainTable = tables<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the list of fields from the main table</span></span><br><span class="line">        <span class="comment">// this is useful for resolving conflicting field names the new field might create</span></span><br><span class="line">        GetFieldListCommand getFieldListCommand = <span class="keyword">new</span> <span class="constructor">GetFieldListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        getFieldListCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        getFieldListCommand.set<span class="constructor">TableId(<span class="params">mainTable</span>.<span class="params">getId</span>()</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getFieldListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// get the change stamp</span></span><br><span class="line">        <span class="comment">// this is required when we make any kind of changes to the repository        </span></span><br><span class="line">        <span class="built_in">int</span> changeStamp = getFieldListCommand.get<span class="constructor">ChangeStamp()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the available regions (languages) for the repository</span></span><br><span class="line">        <span class="comment">// we need this to set up the field name for each region</span></span><br><span class="line">        GetRepositoryRegionListCommand getReposRegionListCommand = <span class="keyword">new</span> <span class="constructor">GetRepositoryRegionListCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        getReposRegionListCommand.set<span class="constructor">RepositoryIdentifier(<span class="params">reposId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getReposRegionListCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        RegionProperties<span class="literal">[]</span> regionPropertiesList = getReposRegionListCommand.get<span class="constructor">Regions()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up the field to create</span></span><br><span class="line">        FieldProperties newField = create<span class="constructor">FixedWidthField(<span class="params">mainTable</span>.<span class="params">getId</span>()</span>, regionPropertiesList);        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// create the new field</span></span><br><span class="line">        CreateFieldCommand createFieldCommand = <span class="keyword">new</span> <span class="constructor">CreateFieldCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">Field(<span class="params">newField</span>)</span>;</span><br><span class="line">        createFieldCommand.set<span class="constructor">InChangeStamp(<span class="params">changeStamp</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            createFieldCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// a new change stamp is required.  </span></span><br><span class="line">        changeStamp = createFieldCommand.get<span class="constructor">OutChangeStamp()</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// setup the field for modification</span></span><br><span class="line">        FixedWidthTextFieldProperties modifiedField = (FixedWidthTextFieldProperties) newField;</span><br><span class="line">        modifiedField.set<span class="constructor">Width(100)</span>;</span><br><span class="line">        modifiedField.set<span class="constructor">Required(<span class="params">false</span>)</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// modify the field</span></span><br><span class="line">        ModifyFieldCommand modifyFieldCommand = <span class="keyword">new</span> <span class="constructor">ModifyFieldCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        modifyFieldCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        modifyFieldCommand.set<span class="constructor">InChangeStamp(<span class="params">changeStamp</span>)</span>;</span><br><span class="line">        modifyFieldCommand.set<span class="constructor">Field(<span class="params">modifiedField</span>)</span>;        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            modifyFieldCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// finally destroy the session</span></span><br><span class="line">        DestroySessionCommand destroySessionCommand = <span class="keyword">new</span> <span class="constructor">DestroySessionCommand(<span class="params">connections</span>)</span>;</span><br><span class="line">        destroySessionCommand.set<span class="constructor">Session(<span class="params">sessionId</span>)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            destroySessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP, MDM</tag>
      </tags>
  </entry>
  <entry>
    <title>retrive_limited_records_on_sap_mdm</title>
    <url>/2021/11/02/retrive-limited-records-on-sap-mdm/</url>
    <content><![CDATA[<h2 id="Retrive-limited-records-and-modify-attributes"><a href="#Retrive-limited-records-and-modify-attributes" class="headerlink" title="Retrive limited records and modify attributes"></a>Retrive limited records and modify attributes</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public void test<span class="constructor">Search(HashSet <span class="params">itemList</span>)</span> &#123;</span><br><span class="line">        long startTime = <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>current<span class="constructor">TimeMillis()</span>;</span><br><span class="line">        FieldSearchDimension productIDSearchDimension = <span class="keyword">new</span> <span class="constructor">FieldSearchDimension(<span class="params">repSchema</span>.<span class="params">getFieldId</span>(TABLEID_PRODUCTS, <span class="string">&quot;ProductID&quot;</span>)</span>);</span><br><span class="line"></span><br><span class="line">        Set idList = itemList;</span><br><span class="line">        Iterator&lt;String&gt; it = idList.iterator<span class="literal">()</span>;</span><br><span class="line">        <span class="built_in">int</span> lastPageIndex = idList.size<span class="literal">()</span> % PAGE_SIZE<span class="operator"> == </span><span class="number">0</span> ? idList.size<span class="literal">()</span><span class="operator"> / </span>PAGE_SIZE : idList.size<span class="literal">()</span><span class="operator"> / </span>PAGE_SIZE + <span class="number">1</span>;</span><br><span class="line">        ResultDefinition rd = <span class="keyword">new</span> <span class="constructor">ResultDefinition(<span class="params">tableId</span>)</span>;</span><br><span class="line">        FieldId<span class="literal">[]</span> fieldIds = <span class="keyword">new</span> FieldId<span class="literal">[]</span>&#123;fieldProductID, fieldIdOriDB, fieldIdSentToEnovia, fieldIdSendToPCIR, fieldIdP20Relevant&#125;;</span><br><span class="line">        rd.set<span class="constructor">SelectFields(<span class="params">fieldIds</span>)</span>;</span><br><span class="line">        Search search = <span class="keyword">new</span> <span class="constructor">Search(<span class="params">tableId</span>)</span>;</span><br><span class="line">        RetrieveLimitedRecordsCommand rlrc = <span class="keyword">new</span> <span class="constructor">RetrieveLimitedRecordsCommand(<span class="params">connection</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> pageIdx = <span class="number">0</span>;</span><br><span class="line">        rlrc.set<span class="constructor">PageSize(PAGE_SIZE)</span>;</span><br><span class="line">        rlrc.set<span class="constructor">ResultDefinition(<span class="params">rd</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> updateConuntNEPEPLM = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> updateConuntPCIR = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> updateConuntP20 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> updateConuntSentToEnovia = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> pageIndex = <span class="number">0</span>; pageIndex &lt; lastPageIndex; pageIndex++) &#123;</span><br><span class="line">            <span class="built_in">int</span> count = <span class="number">0</span>;</span><br><span class="line">            Set&lt;String&gt; searchSet = <span class="keyword">new</span> HashSet&lt;String&gt;(idList.size<span class="literal">()</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (count = <span class="number">0</span>; count &lt; PAGE_SIZE<span class="operator"> &amp;&amp; </span>idList.size<span class="literal">()</span> &gt; <span class="number">0</span>; count++) &#123;</span><br><span class="line">                String s = it.next<span class="literal">()</span>;</span><br><span class="line">                searchSet.add(s);</span><br><span class="line">                SearchConstraint scProductId = <span class="keyword">new</span> <span class="constructor">TextSearchConstraint(<span class="params">s</span>, TextSearchConstraint.EQUALS)</span>;</span><br><span class="line">                search.add<span class="constructor">SearchItem(<span class="params">productIDSearchDimension</span>, <span class="params">scProductId</span>)</span>;</span><br><span class="line">                it.remove<span class="literal">()</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            rlrc.set<span class="constructor">Search(<span class="params">search</span>)</span>;</span><br><span class="line">            rlrc.set<span class="constructor">Session(<span class="params">session</span>)</span>;</span><br><span class="line">            rlrc.set<span class="constructor">PageIndex(0)</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rlrc.execute<span class="literal">()</span>;</span><br><span class="line">            &#125; catch (CommandException e) &#123;</span><br><span class="line">                e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                logger.error(e.get<span class="constructor">Message()</span>);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            Record<span class="literal">[]</span> records = rlrc.get<span class="constructor">Records()</span>.get<span class="constructor">Records()</span>;</span><br><span class="line">            <span class="keyword">for</span> (Record record : records) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">Boolean</span>.</span></span>value<span class="constructor">Of(String.<span class="params">valueOf</span>(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdSendToPCIR</span>)</span>))) &#123;</span><br><span class="line">                        updateConuntPCIR++;</span><br><span class="line">                        record.set<span class="constructor">FieldValue(<span class="params">fieldIdSendToPCIR</span>, <span class="params">new</span> BooleanValue(Boolean.<span class="params">valueOf</span>(VALUE_Send_To_PCIR)</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">Boolean</span>.</span></span>value<span class="constructor">Of(String.<span class="params">valueOf</span>(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdP20Relevant</span>)</span>))) &#123;</span><br><span class="line">                        updateConuntP20++;</span><br><span class="line">                        record.set<span class="constructor">FieldValue(<span class="params">fieldIdP20Relevant</span>, <span class="params">new</span> BooleanValue(Boolean.<span class="params">valueOf</span>(VALUE_P20_Relevant)</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    record.set<span class="constructor">FieldValue(<span class="params">fieldIdSentToEnovia</span>, <span class="params">new</span> BooleanValue(Boolean.<span class="params">valueOf</span>(VALUE_Sent_To_Enovia)</span>));</span><br><span class="line">                    <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">Boolean</span>.</span></span>value<span class="constructor">Of(String.<span class="params">valueOf</span>(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdSentToEnovia</span>)</span>))) &#123;</span><br><span class="line">                        updateConuntSentToEnovia++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    record.set<span class="constructor">FieldValue(<span class="params">fieldIdOriDB</span>, <span class="params">new</span> LookupValue(<span class="params">recordOriDBNEP</span>.<span class="params">getId</span>()</span>));</span><br><span class="line">                    <span class="keyword">if</span> (!<span class="string">&quot;NEP&quot;</span>.equals<span class="constructor">IgnoreCase(String.<span class="params">valueOf</span>(<span class="params">record</span>.<span class="params">getLookupDisplayValue</span>(<span class="params">fieldIdOriDB</span>)</span>))) &#123;</span><br><span class="line">                        updateConuntNEPEPLM++;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    logger.debug(<span class="string">&quot;item&quot;</span> + record.get<span class="constructor">FieldValue(<span class="params">fieldProductID</span>)</span> + <span class="string">&quot;,pcir:&quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdSendToPCIR</span>)</span>) + <span class="string">&quot;,oridb:&quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">record</span>.<span class="params">getLookupDisplayValue</span>(<span class="params">fieldIdOriDB</span>)</span>));</span><br><span class="line">                    logger.debug(<span class="string">&quot;sent to enovia:&quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdSentToEnovia</span>)</span>));</span><br><span class="line">                    logger.debug(<span class="string">&quot;,p20:&quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">record</span>.<span class="params">getFieldValue</span>(<span class="params">fieldIdP20Relevant</span>)</span>));</span><br><span class="line"></span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                    logger.error(<span class="string">&quot;MDM Value Type Exception::&quot;</span> + e.get<span class="constructor">Message()</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ModifyRecordsCommand modifyRecordsCommand = <span class="keyword">new</span> <span class="constructor">ModifyRecordsCommand(<span class="params">connection</span>)</span>;</span><br><span class="line">            modifyRecordsCommand.set<span class="constructor">Records(<span class="params">records</span>)</span>;</span><br><span class="line">            modifyRecordsCommand.set<span class="constructor">Session(<span class="params">session</span>)</span>;</span><br><span class="line">            modifyRecordsCommand.set<span class="constructor">TableId(<span class="params">tableId</span>)</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                modifyRecordsCommand.execute<span class="literal">()</span>;</span><br><span class="line">            &#125; catch (CommandException e) &#123;</span><br><span class="line">                e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                logger.error(e.get<span class="constructor">Message()</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span><span class="literal">[]</span> crFailed = modifyRecordsCommand.get<span class="constructor">Result()</span>.get<span class="constructor">FailedRecords()</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (crFailed != null<span class="operator"> &amp;&amp; </span>crFailed.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;modifyRecords: No. of records failed:&quot;</span> + crFailed.length);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; crFailed.length; i++) &#123;</span><br><span class="line">                    <span class="built_in">int</span> j = crFailed<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">                    logger.info(<span class="string">&quot;modifyRecords: failed messages:&quot;</span> + modifyRecordsCommand.get<span class="constructor">Result()</span>.get<span class="constructor">FailedRecordMessage(<span class="params">j</span>)</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Get Succeded Records</span></span><br><span class="line">            <span class="built_in">int</span> crSuccess<span class="literal">[]</span> = modifyRecordsCommand.get<span class="constructor">Result()</span>.get<span class="constructor">SucceededRecords()</span>;</span><br><span class="line">            <span class="keyword">if</span> (crSuccess != null<span class="operator"> &amp;&amp; </span>crSuccess.length &gt; <span class="number">0</span>)</span><br><span class="line">                logger.info(<span class="string">&quot;modifyRecords: No. of records succeeded:&quot;</span> + crSuccess.length);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        DestroySessionCommand destroySessionCommand = <span class="keyword">new</span> <span class="constructor">DestroySessionCommand(<span class="params">connection</span>)</span>;</span><br><span class="line">        destroySessionCommand.set<span class="constructor">Session(<span class="params">session</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            destroySessionCommand.execute<span class="literal">()</span>;</span><br><span class="line">        &#125; catch (CommandException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            logger.error(e.get<span class="constructor">Message()</span>);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        long endTime = <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>current<span class="constructor">TimeMillis()</span>;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">&quot;update nep item number::&quot;</span> + updateConuntNEPEPLM);</span><br><span class="line">        logger.info(<span class="string">&quot;update sent to enovia item number::&quot;</span> + updateConuntSentToEnovia);</span><br><span class="line">        logger.info(<span class="string">&quot;update P20 Relevant item number::&quot;</span> + updateConuntP20);</span><br><span class="line">        logger.info(<span class="string">&quot;update attribute send to pcir to N,,Total number:&quot;</span> + updateConuntPCIR);</span><br><span class="line">        logger.info(<span class="string">&quot;update attribute values done in alpim, total time::&quot;</span> + (endTime - startTime)<span class="operator"> / </span><span class="number">1000</span> + <span class="string">&quot;s&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP, MDM</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle_PDB_and_CDB</title>
    <url>/2021/11/02/Oracle-PDB-and-CDB/</url>
    <content><![CDATA[<h2 id="Pretty-Sqlplus-Output"><a href="#Pretty-Sqlplus-Output" class="headerlink" title="Pretty Sqlplus Output"></a>Pretty Sqlplus Output</h2><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> lines <span class="comment">256</span>;</span><br><span class="line"><span class="keyword">set</span> trimout <span class="comment">on</span>;</span><br><span class="line"><span class="keyword">set</span> tab <span class="comment">off</span>;</span><br><span class="line"><span class="keyword">set</span> pagesize <span class="comment">100</span>;</span><br><span class="line"><span class="keyword">set</span> colsep <span class="comment">&quot; | &quot;</span>;</span><br><span class="line">COLUMN column_name FORMAT <span class="keyword">model</span>;</span><br></pre></td></tr></table></figure>

<h2 id="switch-PDB"><a href="#switch-PDB" class="headerlink" title="switch PDB"></a>switch PDB</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">session</span> <span class="keyword">set</span> container = PDB_NAME;</span><br></pre></td></tr></table></figure>

<h2 id="Conn-to-CDB-from-PDB"><a href="#Conn-to-CDB-from-PDB" class="headerlink" title="Conn to CDB from PDB"></a>Conn to CDB from PDB</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ALTER SESSION <span class="builtin-name">SET</span> <span class="attribute">CONTAINER</span>=cdb$root;</span><br></pre></td></tr></table></figure>

<h2 id="Open-PDB"><a href="#Open-PDB" class="headerlink" title="Open PDB"></a>Open PDB</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> pluggable <span class="keyword">database</span> PDB_NAME <span class="keyword">open</span>;</span><br><span class="line"><span class="keyword">alter</span> pluggable <span class="keyword">database</span> <span class="keyword">all</span> <span class="keyword">open</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Auto-Open-PDB-when-CDB-restart"><a href="#Auto-Open-PDB-when-CDB-restart" class="headerlink" title="Auto Open PDB when CDB restart"></a>Auto Open PDB when CDB restart</h2><ol>
<li>Create trigger at CDB<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> open_all_pdbs</span><br><span class="line">  <span class="keyword">AFTER</span> STARTUP <span class="keyword">ON</span> <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">EXECUTE</span> <span class="keyword">IMMEDIATE</span> ‘<span class="keyword">ALTER</span> PLUGGABLE <span class="keyword">DATABASE</span> <span class="keyword">ALL</span> <span class="keyword">OPEN</span>’;</span><br><span class="line"><span class="keyword">END</span> ;</span><br><span class="line">/</span><br></pre></td></tr></table></figure>
<h2 id="Create-unlimited-bigfile-tablespace"><a href="#Create-unlimited-bigfile-tablespace" class="headerlink" title="Create unlimited bigfile tablespace"></a>Create unlimited bigfile tablespace</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> BIGFILE <span class="keyword">TABLESPACE</span> &quot;NSNPR_DATA&quot; DATAFILE <span class="string">&#x27;D:/datafiles/NSNPR/NSNPR_tvc_index.dbf&#x27;</span> SIZE <span class="number">100</span>M REUSE AUTOEXTEND <span class="keyword">ON</span> NEXT <span class="number">3</span>G MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT <span class="keyword">LOCAL</span> SEGMENT SPACE MANAGEMENT AUTO ;</span><br></pre></td></tr></table></figure>
<h2 id="Create-user-and-grant-privilege"><a href="#Create-user-and-grant-privilege" class="headerlink" title="Create user and grant privilege"></a>Create user and grant privilege</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> NSNPR IDENTIFIED <span class="keyword">BY</span> XXXXX</span><br><span class="line">  <span class="keyword">default</span> <span class="keyword">tablespace</span> NSNPR_DATA</span><br><span class="line">  <span class="keyword">temporary</span> <span class="keyword">tablespace</span> <span class="keyword">TEMP</span></span><br><span class="line">  profile <span class="keyword">DEFAULT</span>;</span><br><span class="line"><span class="comment">-- Grant/Revoke role privileges </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> resource <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="comment">-- Grant/Revoke system privileges </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">database</span> link <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="built_in">public</span> <span class="keyword">database</span> link <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">view</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> query rewrite <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">dictionary</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> unlimited <span class="keyword">tablespace</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span> <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> resource <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> DATAPUMP_IMP_FULL_DATABASE <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> NSNPR;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">index</span> <span class="keyword">to</span> NSNPR;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Create-Directory"><a href="#Create-Directory" class="headerlink" title="Create Directory"></a>Create Directory</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="built_in">replace</span> directory EXPDP_1</span><br><span class="line"> <span class="keyword">as</span> <span class="string">&#x27;D:\dump&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Impdp-with-multi-dump-file"><a href="#Impdp-with-multi-dump-file" class="headerlink" title="Impdp with multi dump file"></a>Impdp with multi dump file</h2><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">impdp</span> IMP_User/Pass@pdborcl directory=expdp_<span class="number">1</span> dumpfile=expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">01</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">02</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">03</span>.dmp,	expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">04</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">05</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">06</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">07</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">08</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">09</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">10</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">11</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">12</span>.dmp,expdp_nsnpr_DB_<span class="number">15092020</span>_<span class="number">13</span>.dmp full=y table_exists_action=replace logfile=NSNPR-import-%date:~<span class="number">4</span>,<span class="number">2</span>%-%date:~<span class="number">7</span>,<span class="number">2</span>%-%date:~<span class="number">10</span>,<span class="number">4</span>%.log LOGTIME=<span class="literal">ALL</span> METRICS=Y version=<span class="number">12</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>
<h2 id="Resize-tablespace"><a href="#Resize-tablespace" class="headerlink" title="Resize tablespace"></a>Resize tablespace</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span>space TABLESPACE_NAME resize <span class="number">100</span>G;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Database</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>检查Linux 磁盘空间</title>
    <url>/2021/11/02/check-disk-space-linx/</url>
    <content><![CDATA[<h1 id="How-to-check-disk-space"><a href="#How-to-check-disk-space" class="headerlink" title="How to check disk space"></a>How to check disk space</h1><p>Start by tracking down where the excess usage is being stored. If you have no idea, start from the mountpoint for /dev/sda1:</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">mount <span class="string">| grep sda1</span></span><br></pre></td></tr></table></figure>
<p>Use the du command. If /dev/sda1 is mounted on / (“root”):</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">du</span> --<span class="comment">max</span><span class="literal">-</span><span class="comment">depth=1</span> --<span class="comment">human</span><span class="literal">-</span><span class="comment">readable</span> <span class="comment">/</span> <span class="comment">|</span> <span class="comment">sort</span> --<span class="comment">human</span><span class="literal">-</span><span class="comment">numeric</span><span class="literal">-</span><span class="comment">sort</span></span><br></pre></td></tr></table></figure>
<p>This will list the first level of directories contained in the specified path, in order from smallest to largest. You can increase the depth past 1 to get details of the subdirectories, or change the path to specify a single directory. You can also use the short flags.</p>
<p>For instance, if your username is ubuntu and you want to inspect your home directory:</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">du -d1 -h <span class="regexp">/home/u</span>buntu | <span class="keyword">sort</span> -h</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>lsof_linux</title>
    <url>/2021/11/02/lsof-linux/</url>
    <content><![CDATA[<h1 id="lsof-一切皆文件"><a href="#lsof-一切皆文件" class="headerlink" title="lsof 一切皆文件"></a>lsof 一切皆文件</h1><p>lsof（list open files）是一个查看当前系统文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，该文件描述符提供了大量关于这个应用程序本身的信息。</p>
<p>lsof打开的文件可以是：</p>
<pre><code>普通文件
目录
网络文件系统的文件
字符或设备文件
(函数)共享库
管道，命名管道
符号链接
网络文件（例如：NFS file、网络socket，unix域名socket）
还有其它类型的文件，等等
</code></pre>
<ol>
<li>命令参数<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-a 列出打开文件存在的进程</span></span><br><span class="line"><span class="deletion">-c&lt;进程名&gt; 列出指定进程所打开的文件</span></span><br><span class="line"><span class="deletion">-g 列出GID号进程详情</span></span><br><span class="line"><span class="deletion">-d&lt;文件号&gt; 列出占用该文件号的进程</span></span><br><span class="line"><span class="addition">+d&lt;目录&gt; 列出目录下被打开的文件</span></span><br><span class="line"><span class="addition">+D&lt;目录&gt; 递归列出目录下被打开的文件</span></span><br><span class="line"><span class="deletion">-n&lt;目录&gt; 列出使用NFS的文件</span></span><br><span class="line"><span class="deletion">-i&lt;条件&gt; 列出符合条件的进程。（4、6、协议、:端口、 @ip ）</span></span><br><span class="line"><span class="deletion">-p&lt;进程号&gt; 列出指定进程号所打开的文件</span></span><br><span class="line"><span class="deletion">-u 列出UID号进程详情</span></span><br><span class="line"><span class="deletion">-h 显示帮助信息</span></span><br><span class="line"><span class="deletion">-v 显示版本信息</span></span><br></pre></td></tr></table></figure></li>
<li>使用实例<br>实例1：无任何参数<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">$lsof| more</span><br><span class="line">COMMAND     PID      USER   FD      TYPE             DEVICE SIZE/OFF       NODE NAME</span><br><span class="line">init         <span class="number"> 1 </span>     root  cwd       DIR              253,0    <span class="number"> 4096 </span>        <span class="number"> 2 </span>/</span><br><span class="line">init         <span class="number"> 1 </span>     root  rtd       DIR              253,0    <span class="number"> 4096 </span>        <span class="number"> 2 </span>/</span><br><span class="line">init         <span class="number"> 1 </span>     root  txt       REG              253,0  <span class="number"> 150352 </span>  <span class="number"> 1310795 </span>/sbin/init</span><br><span class="line">init         <span class="number"> 1 </span>     root  mem       REG              253,0   <span class="number"> 65928 </span>  <span class="number"> 5505054 </span>/lib64/libnss_files-2.12.so</span><br><span class="line">init         <span class="number"> 1 </span>     root  mem       REG              253,0 <span class="number"> 1918016 </span>  <span class="number"> 5521405 </span>/lib64/libc-2.12.so</span><br><span class="line">init         <span class="number"> 1 </span>     root  mem       REG              253,0   <span class="number"> 93224 </span>  <span class="number"> 5521440 </span>/lib64/libgcc_s-4.4.6-20120305.so.1</span><br><span class="line">init         <span class="number"> 1 </span>     root  mem       REG              253,0   <span class="number"> 47064 </span>  <span class="number"> 5521407 </span>/lib64/librt-2.12.so</span><br><span class="line">init         <span class="number"> 1 </span>     root  mem       REG              253,0  <span class="number"> 145720 </span>  <span class="number"> 5521406 </span>/lib64/libpthread-2.12.so</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
说明：</li>
</ol>
<p>lsof输出各列信息的意义如下：</p>
<ul>
<li><p>COMMAND：进程的名称</p>
</li>
<li><p>PID：进程标识符</p>
</li>
<li><p>PPID：父进程标识符（需要指定-R参数）</p>
</li>
<li><p>USER：进程所有者</p>
</li>
<li><p>PGID：进程所属组</p>
</li>
<li><p>FD：文件描述符，应用程序通过文件描述符识别该文件。如cwd、txt等:</p>
<blockquote>
<p>  （1）cwd：表示current work dirctory，即：应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改<br>  （2）txt ：该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序<br>  （3）lnn：library references (AIX);<br>  （4）er：FD information error (see NAME column);<br>  （5）jld：jail directory (FreeBSD);<br>  （6）ltx：shared library text (code and data);<br>  （7）mxx ：hex memory-mapped type number xx.<br>  （8）m86：DOS Merge mapped file;<br>  （9）mem：memory-mapped file;<br>  （10）mmap：memory-mapped device;<br>  （11）pd：parent directory;<br>  （12）rtd：root directory;<br>  （13）tr：kernel trace file (OpenBSD);<br>  （14）v86  VP/ix mapped file;<br>  （15）0：表示标准输入<br>  （16）1：表示标准输出<br>  （17）2：表示标准错误<br>  一般在标准输出、标准错误、标准输入后还跟着文件状态模式：r、w、u等<br>  （1）u：表示该文件被打开并处于读取/写入模式<br>  （2）r：表示该文件被打开并处于只读模式<br>  （3）w：表示该文件被打开并处于<br>  （4）空格：表示该文件的状态模式为unknow，且没有锁定<br>  （5）-：表示该文件的状态模式为unknow，且被锁定<br>  同时在文件状态模式后面，还跟着相关的锁<br>  （1）N：for a Solaris NFS lock of unknown type;<br>  （2）r：for read lock on part of the file;<br>  （3）R：for a read lock on the entire file;<br>  （4）w：for a write lock on part of the file;（文件的部分写锁）<br>  （5）W：for a write lock on the entire file;（整个文件的写锁）<br>  （6）u：for a read and write lock of any length;<br>  （7）U：for a lock of unknown type;<br>  （8）x：for an SCO OpenServer Xenix lock on part      of the file;<br>  （9）X：for an SCO OpenServer Xenix lock on the      entire file;<br>  （10）space：if there is no lock.</p>
</blockquote>
</li>
<li><p>TYPE：文件类型，如DIR、REG等，常见的文件类型:</p>
<blockquote>
<p>   （1）DIR：表示目录<br>  （2）CHR：表示字符类型<br>  （3）BLK：块设备类型<br>  （4）UNIX： UNIX 域套接字<br>  （5）FIFO：先进先出 (FIFO) 队列<br>  （6）IPv4：网际协议 (IP) 套接字</p>
</blockquote>
</li>
<li><p>DEVICE：指定磁盘的名称</p>
</li>
<li><p>SIZE：文件的大小</p>
</li>
<li><p>NODE：索引节点（文件在磁盘上的标识）</p>
</li>
<li><p>NAME：打开文件的确切名称</p>
</li>
</ul>
<p>实例2：查找某个文件相关的进程</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="variable">$lsof</span> <span class="regexp">/bin/</span>bash</span><br><span class="line">COMMAND     PID USER  FD   TYPE DEVICE SIZE/OFF    NODE NAME</span><br><span class="line">mysqld_sa  <span class="number">2169</span> root txt    REG  <span class="number">253</span>,<span class="number">0</span>   <span class="number">938736</span> <span class="number">4587562</span> <span class="regexp">/bin/</span>bash</span><br><span class="line">ksmtuned   <span class="number">2334</span> root txt    REG  <span class="number">253</span>,<span class="number">0</span>   <span class="number">938736</span> <span class="number">4587562</span> <span class="regexp">/bin/</span>bash</span><br><span class="line">bash      <span class="number">20121</span> root txt    REG  <span class="number">253</span>,<span class="number">0</span>   <span class="number">938736</span> <span class="number">4587562</span> <span class="regexp">/bin/</span>bash</span><br></pre></td></tr></table></figure>
<p>实例3：列出某个用户打开的文件信息</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -u username</span></span><br></pre></td></tr></table></figure>
<p>-u 选项，u是user的缩写</p>
<p>实例4：列出某个程序进程所打开的文件信息</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -c mysql</span></span><br></pre></td></tr></table></figure>
<p>-c 选项将会列出所有以mysql这个进程开头的程序的文件，其实你也可以写成 </p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">lsof <span class="string">| grep mysql</span></span><br></pre></td></tr></table></figure>
<p>但是第一种方法明显比第二种方法要少打几个字符；<br>实例5：列出某个用户以及某个进程所打开的文件信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$lsof</span>  -u <span class="built_in">test</span> -c mysql</span><br></pre></td></tr></table></figure>
<p>实例6：通过某个进程号显示该进程打开的文件</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -p 11968</span></span><br></pre></td></tr></table></figure>
<p>实例7：列出所有的网络连接</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -i</span></span><br></pre></td></tr></table></figure>
<p>实例8：列出所有tcp 网络连接信息</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -i tcp</span></span><br></pre></td></tr></table></figure>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$lsof -n -i tcp</span><br><span class="line">COMMAND     PID  <span class="keyword">USER</span>   <span class="title">FD</span>   <span class="keyword">TYPE</span>  DEVICE SIZE/OFF <span class="keyword">NODE</span> <span class="title">NAME</span></span><br><span class="line">svnserve  <span class="number">11552</span> weber    <span class="number">3</span>u  IPv4 <span class="number">3799399</span>      <span class="number">0</span>t0  TCP *:svn (LISTEN)</span><br><span class="line">redis-ser <span class="number">25501</span> weber    <span class="number">4</span>u  IPv4  <span class="number">113150</span>      <span class="number">0</span>t0  TCP <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span> (LISTEN)</span><br></pre></td></tr></table></figure>
<p>实例9：列出谁在使用某个端口</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -i :3306</span></span><br></pre></td></tr></table></figure>
<p>实例10：列出某个用户的所有活跃的网络端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$lsof</span> -a -u <span class="built_in">test</span> -i</span><br></pre></td></tr></table></figure>
<p>实例11：根据文件描述列出对应的文件信息</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$lsof</span> -d description(like 2)</span></span><br></pre></td></tr></table></figure>
<p>示例:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="variable">$lsof</span> -d <span class="number">3</span> | grep PARSER1</span><br><span class="line">tail      <span class="number">6499</span> tde    <span class="number">3</span>r   REG    <span class="number">253</span>,<span class="number">3</span>   <span class="number">4514722</span>     <span class="number">417798</span> <span class="regexp">/opt/</span>applog<span class="regexp">/open/</span>log/HOSTPARSER1_ERROR_141217.log.<span class="number">001</span></span><br></pre></td></tr></table></figure>
<p>说明： 0表示标准输入，1表示标准输出，2表示标准错误，从而可知：所以大多数应用程序所打开的文件的 FD 都是从 3 开始<br>实例12：列出被进程号为1234的进程所打开的所有IPV4 network files</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="variable">$lsof</span> -<span class="selector-tag">i</span> <span class="number">4</span> -<span class="selector-tag">a</span> -<span class="selector-tag">p</span> <span class="number">1234</span></span><br></pre></td></tr></table></figure>
<p>实例13：列出目前连接主机nf5260i5-td上端口为：20，21，80相关的所有文件信息，且每隔3秒重复执行</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">lsof</span> -i @nf<span class="number">5260</span>i<span class="number">5</span>-td:<span class="number">20</span>,<span class="number">21</span>,<span class="number">80</span> -r <span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MQL 快捷键</title>
    <url>/2021/11/02/mql-enovia/</url>
    <content><![CDATA[<h1 id="Using-Control-Characters"><a href="#Using-Control-Characters" class="headerlink" title="Using Control Characters"></a>Using Control Characters</h1><p>All editing commands are control characters which are entered by holding the Ctrl or Esc key while typing another key, as listed in the following table. All editing commands operate from any place on the line, not just at the beginning of the line.</p>
<p><em>Command Line Editing Control Characters</em></p>
<table>
<thead>
<tr>
<th>Control Character</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl-A</td>
<td>Moves the cursor to the beginning of the line.</td>
</tr>
<tr>
<td>Ctrl-B</td>
<td>Moves the cursor to the left (back) one column.</td>
</tr>
<tr>
<td>Esc-B</td>
<td>Moves the cursor back one word.</td>
</tr>
<tr>
<td>Ctrl-D</td>
<td>Deletes the character to the right of the cursor.</td>
</tr>
<tr>
<td>Ctrl-E</td>
<td>Moves the cursor to the end of the line.</td>
</tr>
<tr>
<td>Ctrl-F</td>
<td>Moves the cursor right (forward) one column.</td>
</tr>
<tr>
<td>Esc-F</td>
<td>Moves the cursor forward one word.</td>
</tr>
<tr>
<td>Ctrl-H</td>
<td>Deletes the character to the left of the cursor.</td>
</tr>
<tr>
<td>Ctrl-I</td>
<td>Jumps to the next tab stop.</td>
</tr>
<tr>
<td>Ctrl-J</td>
<td>Returns the current line.</td>
</tr>
<tr>
<td>Ctrl-K</td>
<td>Kills from the cursor to the end of the line (see Ctrl-Y).</td>
</tr>
<tr>
<td>Ctrl-L</td>
<td>Redisplays the current line.</td>
</tr>
<tr>
<td>Ctrl-M</td>
<td>Returns the current line.</td>
</tr>
<tr>
<td>Ctrl-N</td>
<td>Fetches the next line from the history list.</td>
</tr>
<tr>
<td>Ctrl-O</td>
<td>Toggles the overwrite/insert mode, initially in insert mode.</td>
</tr>
<tr>
<td>Ctrl-P</td>
<td>Fetches the previous line from the history list.</td>
</tr>
<tr>
<td>Ctrl-R</td>
<td>Begins a reverse incremental search through the history list. Each printing character typed adds to the search substring (which is empty initially). MQL finds and displays the first matching location. Typing Ctrl-R again marks the current starting location and begins a new search for the current substring.</td>
</tr>
<tr>
<td>Type Ctrl-H</td>
<td>Or press the Del key to delete the last character from the search string. MQL restarts the search from the last starting location.Repeated Ctrl-H or Del characters, therefore, unwind the search to the match nearest to the point where you last typed Ctrl-R or Ctrl-S (described below).Type Esc or any other editing character to accept the current match and terminate the search.</td>
</tr>
<tr>
<td>Type Ctrl-H</td>
<td>Or press the Del key until the search string is empty to reset the start of the search to the beginning of the history list. Type Esc or any other editing character to accept the current match and terminate the search.</td>
</tr>
<tr>
<td>Ctrl-S</td>
<td>Begins a forward incremental search through the history list. The behavior is like Ctrl-R but in the opposite direction through the history list.</td>
</tr>
<tr>
<td>Ctrl-T</td>
<td>Transposes the current and previous character.</td>
</tr>
<tr>
<td>Ctrl-U</td>
<td>Kills the entire line (see Ctrl-Y).</td>
</tr>
<tr>
<td>Ctrl-Y</td>
<td>Yanks the previously killed text back at the current location.Backspace Deletes the character left of the cursor.</td>
</tr>
<tr>
<td>Del</td>
<td>Deletes the character right of the cursor.</td>
</tr>
<tr>
<td>Return</td>
<td>Returns the current line.</td>
</tr>
<tr>
<td>Tab</td>
<td>Jumps to the next tab stop.</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>mxType_in_Enovia</title>
    <url>/2021/11/02/mxType-in-Enovia/</url>
    <content><![CDATA[<h2 id="mxType"><a href="#mxType" class="headerlink" title="mxType"></a>mxType</h2><blockquote>
<p>framework.jar</p>
</blockquote>
<p>Static Method List </p>
<h3 id="isOfParentType"><a href="#isOfParentType" class="headerlink" title="isOfParentType"></a>isOfParentType</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* var0 - context</span></span><br><span class="line"><span class="comment">* var1 - sub type need to check</span></span><br><span class="line"><span class="comment">* var2 - parent type </span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="keyword">boolean</span> isOfParentType(Context var0, <span class="keyword">String</span> var1, <span class="keyword">String</span> var2) throws FrameworkException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (var1.equals(var2)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">String</span> var3 = <span class="string">&quot;derivative[&quot;</span> + var1 + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">                <span class="keyword">String</span> var4 = MqlUtil.mqlCommand(var0, <span class="string">&quot;print type <span class="subst">$1</span> select <span class="subst">$2</span> dump&quot;</span>, <span class="keyword">new</span> <span class="keyword">String</span>[]&#123;var2, var3&#125;);</span><br><span class="line">                <span class="keyword">return</span> var4.equalsIgnoreCase(<span class="string">&quot;true&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> var5) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FrameworkException(var5);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="getAttributes"><a href="#getAttributes" class="headerlink" title="getAttributes"></a>getAttributes</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* var0 - current context</span></span><br><span class="line"><span class="comment">* var1 - type name</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">public static MapList get<span class="constructor">Attributes(Context <span class="params">var0</span>, String <span class="params">var1</span>)</span> throws FrameworkException &#123;</span><br><span class="line">        return get<span class="constructor">Attributes(<span class="params">var0</span>, <span class="params">var1</span>, <span class="params">false</span>)</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="getAttributes-1"><a href="#getAttributes-1" class="headerlink" title="getAttributes"></a>getAttributes</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* var0 - context</span></span><br><span class="line"><span class="comment">* var1 - type name</span></span><br><span class="line"><span class="comment">* var2 - if attribute is multiline</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> public static MapList get<span class="constructor">Attributes(Context <span class="params">var0</span>, String <span class="params">var1</span>, <span class="params">boolean</span> <span class="params">var2</span>)</span> throws FrameworkException &#123;</span><br><span class="line">        AttributeType var3 = null;</span><br><span class="line">        MapList var4 = <span class="keyword">new</span> <span class="constructor">MapList()</span>;</span><br><span class="line">        <span class="built_in">int</span> var5 = <span class="number">0</span>;</span><br><span class="line">        String var6 = <span class="string">&quot;type&quot;</span>;</span><br><span class="line">        String var7 = <span class="string">&quot;name&quot;</span>;</span><br><span class="line">        String var8 = <span class="string">&quot;description&quot;</span>;</span><br><span class="line">        String var9 = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">        String var10 = <span class="string">&quot;choices&quot;</span>;</span><br><span class="line">        String var11 = <span class="string">&quot;multiline&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">ContextUtil</span>.</span></span>start<span class="constructor">Transaction(<span class="params">var0</span>, <span class="params">false</span>)</span>;</span><br><span class="line">            Vault var12 = var0.get<span class="constructor">Vault()</span>;</span><br><span class="line">            BusinessType var13 = <span class="keyword">new</span> <span class="constructor">BusinessType(<span class="params">var1</span>, <span class="params">var12</span>)</span>;</span><br><span class="line">            var13.<span class="keyword">open</span>(var0);</span><br><span class="line">            BusinessTypeList var14 = <span class="module-access"><span class="module"><span class="identifier">BusinessType</span>.</span></span>get<span class="constructor">BusinessTypes(<span class="params">var0</span>)</span>;</span><br><span class="line">            BusinessTypeItr var15 = <span class="keyword">new</span> <span class="constructor">BusinessTypeItr(<span class="params">var14</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">                BusinessType var16;</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!var15.next<span class="literal">()</span>) &#123;</span><br><span class="line">                        var13.close(var0);</span><br><span class="line">                        <span class="module-access"><span class="module"><span class="identifier">ContextUtil</span>.</span></span>commit<span class="constructor">Transaction(<span class="params">var0</span>)</span>;</span><br><span class="line">                        return var4;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    var16 = var15.obj<span class="literal">()</span>;</span><br><span class="line">                &#125; <span class="keyword">while</span>(!var16.<span class="keyword">to</span><span class="constructor">String()</span>.equals(var1));</span><br><span class="line"></span><br><span class="line">                var16.<span class="keyword">open</span>(var0);</span><br><span class="line">                AttributeTypeList var17 = var16.get<span class="constructor">AttributeTypes(<span class="params">var0</span>)</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(AttributeTypeItr var18 = <span class="keyword">new</span> <span class="constructor">AttributeTypeItr(<span class="params">var17</span>)</span>; var18.next<span class="literal">()</span>; ++var5) &#123;</span><br><span class="line">                    HashMap var19 = <span class="keyword">new</span> <span class="constructor">HashMap()</span>;</span><br><span class="line">                    var3 = var18.obj<span class="literal">()</span>;</span><br><span class="line">                    var3.<span class="keyword">open</span>(var0);</span><br><span class="line">                    var19.put(var7, var3.<span class="keyword">to</span><span class="constructor">String()</span>);</span><br><span class="line">                    var19.put(var6, var3.get<span class="constructor">DataType()</span>);</span><br><span class="line">                    var19.put(var8, var3.get<span class="constructor">Description()</span>);</span><br><span class="line">                    var19.put(var9, var3.get<span class="constructor">DefaultValue()</span>);</span><br><span class="line">                    var19.put(var10, var3.get<span class="constructor">Choices()</span>);</span><br><span class="line">                    <span class="keyword">if</span> (var2) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span>.equals<span class="constructor">IgnoreCase(<span class="params">var3</span>.<span class="params">getDataType</span>()</span>)) &#123;</span><br><span class="line">                            String var20 = <span class="module-access"><span class="module"><span class="identifier">MqlUtil</span>.</span></span>mql<span class="constructor">Command(<span class="params">var0</span>, <span class="string">&quot;print attribute $1 select $2 dump&quot;</span>, <span class="params">new</span> String[]&#123;<span class="params">var3</span>.<span class="params">toString</span>()</span>, <span class="string">&quot;multiline&quot;</span>&#125;);</span><br><span class="line">                            var19.put(var11, var20);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            var19.put(var11, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    var3.close(var0);</span><br><span class="line">                    var4.add(var5, var19);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var16.close(var0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception var21) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">ContextUtil</span>.</span></span>abort<span class="constructor">Transaction(<span class="params">var0</span>)</span>;</span><br><span class="line">            throw <span class="keyword">new</span> <span class="constructor">FrameworkException(<span class="params">var21</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="getDefaultPolicy"><a href="#getDefaultPolicy" class="headerlink" title="getDefaultPolicy"></a>getDefaultPolicy</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* var0 - context</span></span><br><span class="line"><span class="comment">* var1 - business type</span></span><br><span class="line"><span class="comment">* var2 - if true means query policy for Person otherwise false</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> public static Map get<span class="constructor">DefaultPolicy(Context <span class="params">var0</span>, String <span class="params">var1</span>, <span class="params">boolean</span> <span class="params">var2</span>)</span> throws FrameworkException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map var3 = null;</span><br><span class="line">            MapList var4 = get<span class="constructor">Policies(<span class="params">var0</span>, <span class="params">var1</span>, <span class="params">var2</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (!var4.is<span class="constructor">Empty()</span>) &#123;</span><br><span class="line">                var3 = (Map)var4.get(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return var3;</span><br><span class="line">        &#125; catch (Exception var5) &#123;</span><br><span class="line">            throw <span class="keyword">new</span> <span class="constructor">FrameworkException(<span class="params">var5</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"> public static MapList get<span class="constructor">Policies(Context <span class="params">var0</span>, String <span class="params">var1</span>, <span class="params">boolean</span> <span class="params">var2</span>)</span> throws MatrixException &#123;</span><br><span class="line">        MapList var3 = <span class="keyword">new</span> <span class="constructor">MapList()</span>;</span><br><span class="line">        BusinessType var4 = <span class="keyword">new</span> <span class="constructor">BusinessType(<span class="params">var1</span>, <span class="params">var0</span>.<span class="params">getVault</span>()</span>);</span><br><span class="line">        var4.<span class="keyword">open</span>(var0);</span><br><span class="line">        PolicyList var5 = null;</span><br><span class="line">        <span class="keyword">if</span> (var2) &#123;</span><br><span class="line">            var5 = var4.get<span class="constructor">PoliciesForPerson(<span class="params">var0</span>, <span class="params">false</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var5 = var4.get<span class="constructor">Policies(<span class="params">var0</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Iterator var7 = var5.iterator<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var7.has<span class="constructor">Next()</span>) &#123;</span><br><span class="line">            Policy var6 = (Policy)var7.next<span class="literal">()</span>;</span><br><span class="line">            var6.<span class="keyword">open</span>(var0);</span><br><span class="line">            HashMap var8 = <span class="keyword">new</span> <span class="constructor">HashMap()</span>;</span><br><span class="line">            var8.put(<span class="string">&quot;name&quot;</span>, var6.get<span class="constructor">Name()</span>);</span><br><span class="line">            var8.put(<span class="string">&quot;description&quot;</span>, var6.get<span class="constructor">Description(<span class="params">var0</span>)</span>);</span><br><span class="line">            var8.put(<span class="string">&quot;revision&quot;</span>, var6.get<span class="constructor">FirstInSequence()</span>);</span><br><span class="line">            String var9 = <span class="module-access"><span class="module"><span class="identifier">MqlUtil</span>.</span></span>mql<span class="constructor">Command(<span class="params">var0</span>, <span class="string">&quot;print Policy $1 select $2 dump $3&quot;</span>, <span class="params">new</span> String[]&#123;<span class="params">var6</span>.<span class="params">getName</span>()</span>, <span class="string">&quot;format&quot;</span>, <span class="string">&quot;|&quot;</span>&#125;);</span><br><span class="line">            String var10 = <span class="module-access"><span class="module"><span class="identifier">MqlUtil</span>.</span></span>mql<span class="constructor">Command(<span class="params">var0</span>, <span class="string">&quot;print Policy $1 select $2 dump $3&quot;</span>, <span class="params">new</span> String[]&#123;<span class="params">var6</span>.<span class="params">getName</span>()</span>, <span class="string">&quot;defaultformat&quot;</span>, <span class="string">&quot;|&quot;</span>&#125;);</span><br><span class="line">            String var11 = <span class="module-access"><span class="module"><span class="identifier">MqlUtil</span>.</span></span>mql<span class="constructor">Command(<span class="params">var0</span>, <span class="string">&quot;print Policy $1 select $2 dump $3&quot;</span>, <span class="params">new</span> String[]&#123;<span class="params">var6</span>.<span class="params">getName</span>()</span>, <span class="string">&quot;store&quot;</span>, <span class="string">&quot;|&quot;</span>&#125;);</span><br><span class="line">            StringList var12 = <span class="module-access"><span class="module"><span class="identifier">FrameworkUtil</span>.</span></span>split(var9, <span class="string">&quot;|&quot;</span>);</span><br><span class="line">            var8.put(<span class="string">&quot;formats&quot;</span>, var12);</span><br><span class="line">            var8.put(<span class="string">&quot;defaultFormat&quot;</span>, var10);</span><br><span class="line">            var8.put(<span class="string">&quot;store&quot;</span>, var11);</span><br><span class="line">            var6.close(var0);</span><br><span class="line">            var3.add(var8);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return var3;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>常用正则表达式</title>
    <url>/2021/11/03/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="验证数字的正则表达式集"><a href="#验证数字的正则表达式集" class="headerlink" title="验证数字的正则表达式集"></a>验证数字的正则表达式集</h1><p>验证数字：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">^[0<span class="number">-9</span>]*<span class="variable">$ </span></span><br></pre></td></tr></table></figure>

<p>验证n位的数字：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^\d</span><span class="template-variable">&#123;n&#125;</span><span class="xml">$ </span></span><br></pre></td></tr></table></figure>

<p>验证至少n位数字：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^\d</span><span class="template-variable">&#123;n,&#125;</span><span class="xml">$ </span></span><br></pre></td></tr></table></figure>

<p>验证m-n位的数字：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^\d</span><span class="template-variable">&#123;m,n&#125;</span><span class="xml">$ </span></span><br></pre></td></tr></table></figure>

<p>验证零和非零开头的数字：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^(0|<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*)$ </span><br></pre></td></tr></table></figure>

<p>验证有两位小数的正实数：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^<span class="comment">[0-9]</span>+(.<span class="comment">[0-9]</span>&#123;2&#125;)?$ </span><br></pre></td></tr></table></figure>

<p>验证有1-3位小数的正实数：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^<span class="comment">[0-9]</span>+(.<span class="comment">[0-9]</span>&#123;1,3&#125;)?$ </span><br></pre></td></tr></table></figure>
<p>验证非零的正整数：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">^\+<span class="string">?[</span><span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]*<span class="variable">$ </span></span><br></pre></td></tr></table></figure>

<p>验证非零的负整数：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^\-<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*$ </span><br></pre></td></tr></table></figure>

<p>验证非负整数（正整数 + 0） </p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">^\d+<span class="variable">$ </span></span><br></pre></td></tr></table></figure>

<p>验证非正整数（负整数 + 0） </p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">^<span class="comment">((-\d+)</span>|<span class="comment">(0+)</span>)$ </span><br></pre></td></tr></table></figure>

<p>验证长度为3的字符：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^.</span><span class="template-variable">&#123;3&#125;</span><span class="xml">$ </span></span><br></pre></td></tr></table></figure>
<p>验证由26个英文字母组成的字符串：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">^[<span class="keyword">A</span>-Za-z]+$ </span><br></pre></td></tr></table></figure>

<p>验证由26个大写英文字母组成的字符串：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">^[<span class="keyword">A</span>-Z]+$ </span><br></pre></td></tr></table></figure>
<p>验证由26个小写英文字母组成的字符串：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">^[a-z]+<span class="variable">$ </span></span><br></pre></td></tr></table></figure>

<p>验证由数字和26个英文字母组成的字符串：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">^[<span class="keyword">A</span>-Za-z0-<span class="number">9</span>]+$ </span><br></pre></td></tr></table></figure>
<p>验证由数字、26个英文字母或者下划线组成的字符串：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">^\w+<span class="variable">$ </span></span><br></pre></td></tr></table></figure>
<p>验证用户密码:</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^[a-zA-Z]\w</span><span class="template-variable">&#123;5,17&#125;</span><span class="xml">$ </span></span><br></pre></td></tr></table></figure>
<p>正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。 </p>
<p>验证是否含有 ^%&amp;’,;=?$&quot; 等字符：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">[^%<span class="meta">&amp;&#x27;,;=?$\x22]+ </span></span><br></pre></td></tr></table></figure>

<p>验证汉字：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">^[<span class="symbol">\u</span>4e00-<span class="symbol">\u</span>9fa5],&#123;0,&#125;$ </span><br></pre></td></tr></table></figure>

<p>验证Email地址：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^(<span class="comment">[a-zA-Z0-9]</span>+<span class="comment">[_|\_|\.]</span>?)*<span class="comment">[a-zA-Z0-9]</span>+@(<span class="comment">[a-zA-Z0-9]</span>+<span class="comment">[_|\_|\.]</span>?)*<span class="comment">[a-zA-Z0-9]</span>+\.<span class="comment">[a-zA-Z]</span>&#123;2,3&#125;$</span><br></pre></td></tr></table></figure>

<p>验证InternetURL：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">^<span class="link">http://(</span>[<span class="string">\w-</span>]<span class="code">+\.)+</span>[\w-]<span class="code">+(/[\w-./?%&amp;=]*)?$ ；^[a-zA-z]+</span>://(w<span class="code">+(-w+</span>)<span class="strong">*)(.(w+(-w+)*</span>))<span class="strong">*(?S*</span>)?$ </span><br></pre></td></tr></table></figure>

<p>验证电话号码：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">^(<span class="symbol">\d</span>3,4|<span class="symbol">\d</span>&#123;3,4&#125;-)?<span class="symbol">\d</span>&#123;7,8&#125;$</span><br></pre></td></tr></table></figure>
<p>–正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。<br>验证身份证号（15位或18位数字）：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">^\d</span><span class="template-variable">&#123;15&#125;</span><span class="xml">|\d</span><span class="template-variable">&#123;&#125;</span><span class="xml">18$ </span></span><br></pre></td></tr></table></figure>
<p>验证一年的12个月：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^(0?<span class="comment">[1-9]</span>|1<span class="comment">[0-2]</span>)$</span><br></pre></td></tr></table></figure>
<p>正确格式为：“01”-“09”和“1”“12”<br>验证一个月的31天：</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">^((<span class="number">0</span>?[<span class="number">1</span><span class="number">-9</span>])|<span class="type">((1</span>|<span class="type">2</span>)[<span class="number">0</span><span class="number">-9</span>])|<span class="type">30</span>|<span class="type">31</span>)$</span><br></pre></td></tr></table></figure>
<p>正确格式为：01、09和1、31。<br>整数：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">^-<span class="string">?\d</span>+<span class="variable">$ </span></span><br></pre></td></tr></table></figure>
<p>非负浮点数（正浮点数 + 0）：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">^<span class="symbol">\d</span>+(<span class="symbol">\.</span><span class="symbol">\d</span>+)?$ </span><br></pre></td></tr></table></figure>
<p>正浮点数 </p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^((<span class="comment">[0-9]</span>+\.<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*)|(<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*\.<span class="comment">[0-9]</span>+)|(<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*))$ </span><br></pre></td></tr></table></figure>
<p>非正浮点数（负浮点数 + 0） </p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">^((-<span class="symbol">\d</span>+(<span class="symbol">\.</span><span class="symbol">\d</span>+)?)|(0+(<span class="symbol">\.</span>0+)?))$ </span><br></pre></td></tr></table></figure>
<p>负浮点数 </p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">^(-((<span class="comment">[0-9]</span>+\.<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*)|(<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*\.<span class="comment">[0-9]</span>+)|(<span class="comment">[0-9]</span>*<span class="comment">[1-9]</span><span class="comment">[0-9]</span>*)))$ </span><br></pre></td></tr></table></figure>
<p>浮点数 </p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">^(-?<span class="symbol">\d</span>+)(<span class="symbol">\.</span><span class="symbol">\d</span>+)?$</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>xsl_xml</title>
    <url>/2021/11/03/xsl-xml/</url>
    <content><![CDATA[<h2 id="XML-Sample"><a href="#XML-Sample" class="headerlink" title="XML Sample"></a>XML Sample</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">WebSites</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">Site</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>EPLM R2017 Docs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>/B418doc/index.htm<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">category</span>&gt;</span>Docs<span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">Site</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">Site</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>EPLM R2013 Docs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>/B214doc/DShomepage_English.htm<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">category</span>&gt;</span>Docs<span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">Site</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">Site</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>MyBlog<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://blog.ddong.online<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">Site</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">Site</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>JAVA 8 Docs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://docs.oracle.com/javase/8/docs/api/overview-summary.html<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">category</span>&gt;</span>Docs<span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">Site</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">WebSites</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="XSL-Sample"><a href="#XSL-Sample" class="headerlink" title="XSL Sample"></a>XSL Sample</h2><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">xsl:stylesheet</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>My Web Sites Collection - DT<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#9acd32&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Site<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>URL<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">xsl:for-each</span> <span class="attr">select</span>=<span class="string">&quot;WebSites/Site&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">xsl:sort</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">xsl:choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">xsl:when</span> <span class="attr">test</span>=<span class="string">&quot;category = &#x27;EPLM&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;grey&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                      <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;url&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;grey&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">xsl:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">xsl:when</span> <span class="attr">test</span>=<span class="string">&quot;category = &#x27;ALPIM&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                      <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;url&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">xsl:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">xsl:when</span> <span class="attr">test</span>=<span class="string">&quot;category = &#x27;AFP&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                      <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;url&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">xsl:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">xsl:when</span> <span class="attr">test</span>=<span class="string">&quot;category = &#x27;Docs&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;green&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                      <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;url&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;green&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">xsl:when</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">xsl:otherwise</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                      <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;url&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;category&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">xsl:otherwise</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">xsl:choose</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">xsl:for-each</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="Html-amp-JavaScript-combine"><a href="#Html-amp-JavaScript-combine" class="headerlink" title="Html &amp; JavaScript combine"></a>Html &amp; JavaScript combine</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">loadXMLDoc</span>(<span class="params">filename</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject)&#123;</span></span><br><span class="line"><span class="javascript">    xhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Msxml2.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">    xhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  xhttp.open(<span class="string">&quot;GET&quot;</span>, filename, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">try</span> &#123;xhttp.responseType = <span class="string">&quot;msxml-document&quot;</span>&#125; <span class="keyword">catch</span>(err) &#123;&#125; <span class="comment">// Helping IE11</span></span></span><br><span class="line"><span class="javascript">  xhttp.send(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span> xhttp.responseXML;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">displayResult</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  xml = loadXMLDoc(<span class="string">&quot;mywebsites.xml&quot;</span>);</span></span><br><span class="line"><span class="javascript">  xsl = loadXMLDoc(<span class="string">&quot;mywebsites.xsl&quot;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="comment">// code for IE</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject || xhttp.responseType == <span class="string">&quot;msxml-document&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">      ex = xml.transformNode(xsl);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">&quot;example&quot;</span>).innerHTML = ex;</span></span><br><span class="line"><span class="javascript">  &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.implementation &amp;&amp; <span class="built_in">document</span>.implementation.createDocument)&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// code for Chrome, Firefox, Opera, etc.</span></span></span><br><span class="line"><span class="javascript">    xsltProcessor = <span class="keyword">new</span> XSLTProcessor();</span></span><br><span class="line"><span class="javascript">    xsltProcessor.importStylesheet(xsl);</span></span><br><span class="line"><span class="javascript">    resultDocument = xsltProcessor.transformToFragment(xml, <span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;example&quot;</span>).appendChild(resultDocument);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;displayResult()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>xml xsl html</category>
      </categories>
      <tags>
        <tag>xml xsl html</tag>
      </tags>
  </entry>
  <entry>
    <title>default_value_of_attribute</title>
    <url>/2021/11/03/default-value-of-attribute/</url>
    <content><![CDATA[<h1 id="Get-Attribute-Default-Value"><a href="#Get-Attribute-Default-Value" class="headerlink" title="Get Attribute Default Value"></a>Get Attribute Default Value</h1><h2 id="AttributeType"><a href="#AttributeType" class="headerlink" title="AttributeType"></a>AttributeType</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">AttributeType attrType = <span class="keyword">new</span> <span class="constructor">AttributeType(<span class="params">attrName</span>)</span>;</span><br><span class="line">String defaultValue = attrType.get<span class="constructor">DefaultValue(<span class="params">context</span>)</span>;</span><br></pre></td></tr></table></figure>

<h2 id="AttributeUtil"><a href="#AttributeUtil" class="headerlink" title="AttributeUtil"></a>AttributeUtil</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">String strDefaultValue = <span class="module-access"><span class="module"><span class="identifier">AttributeUtil</span>.</span></span>get<span class="constructor">DefaultAttributeValue(<span class="params">context</span>, <span class="params">attrName</span>)</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia; Attribute</tag>
      </tags>
  </entry>
  <entry>
    <title>ListUtil_Enovia</title>
    <url>/2021/11/03/ListUtil-Enovia/</url>
    <content><![CDATA[<h1 id="Class-com-matrixone-apps-common-util-ListUtil"><a href="#Class-com-matrixone-apps-common-util-ListUtil" class="headerlink" title="Class com.matrixone.apps.common.util.ListUtil"></a>Class com.matrixone.apps.common.util.ListUtil</h1><blockquote>
<p>public class ListUtil extends java.lang.Object</p>
</blockquote>
<h2 id="static-method-compareLists"><a href="#static-method-compareLists" class="headerlink" title="static method compareLists"></a>static method compareLists</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">public static void compareLists(java.util.List oldList,</span><br><span class="line">                                java.util.List newList,</span><br><span class="line">                                java.util.List addedItems,</span><br><span class="line">                                java.util.List removedItems,</span><br><span class="line">                                java.util.List retainedItems)</span><br><span class="line">Compare <span class="literal">two</span> lists <span class="keyword">and</span> determine <span class="keyword">the</span> added, removed, <span class="keyword">and</span> retained <span class="keyword">items</span>.</span><br><span class="line">Parameters:</span><br><span class="line">oldList - <span class="keyword">the</span> old list <span class="built_in">to</span> compare</span><br><span class="line">newList - <span class="keyword">the</span> <span class="built_in">new</span> list <span class="built_in">to</span> compare</span><br><span class="line">addedItems - <span class="keyword">items</span> that are only <span class="keyword">in</span> <span class="keyword">the</span> <span class="built_in">new</span> list</span><br><span class="line">removedItems - <span class="keyword">items</span> that are only <span class="keyword">in</span> <span class="keyword">the</span> old list</span><br><span class="line">retainedItems - <span class="keyword">items</span> that are <span class="keyword">in</span> both lists</span><br><span class="line">Since:</span><br><span class="line">AEF <span class="number">9.5</span><span class="number">.1</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>

<h2 id="For-Example"><a href="#For-Example" class="headerlink" title="For Example"></a>For Example</h2><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">StringList</span> list3 = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">      list3.<span class="built_in">add</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">      list3.<span class="built_in">add</span>(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">      list3.<span class="built_in">add</span>(<span class="string">&quot;1111&quot;</span>);</span><br><span class="line">      list3.<span class="built_in">add</span>(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">StringList</span> list4 = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">      list4.<span class="built_in">add</span>(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">      list4.<span class="built_in">add</span>(<span class="string">&quot;21&quot;</span>);</span><br><span class="line">      list4.<span class="built_in">add</span>(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">      list4.<span class="built_in">add</span>(<span class="string">&quot;211&quot;</span>);</span><br><span class="line">      list4.<span class="built_in">add</span>(<span class="string">&quot;311&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">StringList</span> added = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">      <span class="keyword">StringList</span> removed = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">      <span class="keyword">StringList</span> retained = <span class="keyword">new</span> <span class="keyword">StringList</span>();</span><br><span class="line">      ListUtil.compareLists(list3, list4, added, removed, retained);</span><br><span class="line">      System.out.<span class="built_in">println</span>(<span class="string">&quot;list 3: &quot;</span> + list3);</span><br><span class="line">      System.out.<span class="built_in">println</span>(<span class="string">&quot;list 4: &quot;</span> + list4);</span><br><span class="line">      System.out.<span class="built_in">println</span>(<span class="string">&quot;list added: &quot;</span> + added);</span><br><span class="line">      System.out.<span class="built_in">println</span>(<span class="string">&quot;list removed: &quot;</span> + removed);</span><br><span class="line">      System.out.<span class="built_in">println</span>(<span class="string">&quot;list retained: &quot;</span> + retained);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Output:</p>
</blockquote>
<pre><code>list 3: [1, 11, 1111, 11111]
list 4: [11, 21, 111, 211, 311]
list added: [21, 111, 211, 311]
list removed: [1, 1111, 11111]
list retained: [11]
</code></pre>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>RelationshipUtil_Enovia</title>
    <url>/2021/11/03/RelationshipUtil-Enovia/</url>
    <content><![CDATA[<h1 id="Class-RelationshipUtil"><a href="#Class-RelationshipUtil" class="headerlink" title="Class RelationshipUtil"></a>Class RelationshipUtil</h1><blockquote>
<p>com.matrixone.apps.common.util.RelationshipUtil<br>public class RelationshipUtil extends java.lang.Object</p>
</blockquote>
<p>The RelationshipUtil class provides tools to float objects.</p>
<h2 id="Method-Summary"><a href="#Method-Summary" class="headerlink" title="Method Summary"></a>Method Summary</h2><table>
<thead>
<tr>
<th align="center">access</th>
<th align="left">Method Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="center">static void</td>
<td align="left">connected(matrix.db.Context context, java.lang.Object objectId,java.lang.String relPattern, java.lang.String typePattern, java.lang.String expandDir, java.util.Map policyStateMap)</td>
<td align="left">Floats the specified relationships to this object.</td>
</tr>
<tr>
<td align="center">static void</td>
<td align="left">connected(matrix.db.Context context, java.lang.Object objectId, java.lang.String relPattern, java.lang.String typePattern, java.lang.String expandDir, java.lang.String floatExpression)</td>
<td align="left">Floats the specified relationships to this object.</td>
</tr>
</tbody></table>
<h2 id="Method-Detail"><a href="#Method-Detail" class="headerlink" title="Method Detail"></a>Method Detail</h2><h3 id="connected"><a href="#connected" class="headerlink" title="connected"></a>connected</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">public static void connected(matrix<span class="selector-class">.db</span><span class="selector-class">.Context</span> context,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.Object</span> objectId,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> relPattern,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> typePattern,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> expandDir,</span><br><span class="line">                             java<span class="selector-class">.util</span><span class="selector-class">.Map</span> policyStateMap)</span><br><span class="line">                      throws java<span class="selector-class">.lang</span>.Exception</span><br></pre></td></tr></table></figure>
<p>Floats the specified relationships to this object. The objects connected to the previous revision of the given object and that meet the specified criteria are disconnected from the previous revision and connected to the given object. To meet the specified criteria, the objects must be connected to the previous revision of the given object through the relationship and type patterns, in the specified direction, and must be editable. To be editable, the object’s state must be one of the states listed in the policy-state map, or the object must not be in it’s last state.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">BusinessObject mc = <span class="keyword">new</span> <span class="built_in">BusinessObject</span>(<span class="string">&quot;Microcomputer&quot;</span>, <span class="string">&quot;Q Prom&quot;</span>,</span><br><span class="line">                                       <span class="string">&quot;A&quot;</span>, <span class="string">&quot;Manufacturing&quot;</span>);</span><br><span class="line">HashMap sTargetState = <span class="keyword">new</span> <span class="built_in">HashMap</span>();</span><br><span class="line">sTargetState.<span class="built_in">put</span>(<span class="string">&quot;Production&quot;</span>, <span class="string">&quot;Active&quot;</span>);</span><br><span class="line">sTargetState.<span class="built_in">put</span>(<span class="string">&quot;Documentation&quot;</span>, <span class="string">&quot;Finished&quot;</span>);</span><br><span class="line">HashMap returnedMsg = RelationshipUtil.<span class="built_in">connected</span>(context, mc,</span><br><span class="line">      <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, sTargetState, <span class="number">0</span>, <span class="string">&quot;from&quot;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>
<p>Parameters:</p>
<ol>
<li>context - The matrix context object.</li>
<li>objectId - The object to float relationships to.</li>
<li>relPattern - The relationships to expand.</li>
<li>expandDir - The direction to expand. This can be “from” or “to”. Anything else will expand in both directions.</li>
<li>policyStateMap - A map from policy names to a list of the editable states in that policy.<br>Throws:<br>java.lang.Exception - if float failed.</li>
</ol>
<h3 id="connected-1"><a href="#connected-1" class="headerlink" title="connected"></a>connected</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">public static void connected(matrix<span class="selector-class">.db</span><span class="selector-class">.Context</span> context,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.Object</span> objectId,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> relPattern,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> typePattern,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> expandDir,</span><br><span class="line">                             java<span class="selector-class">.lang</span><span class="selector-class">.String</span> floatExpression)</span><br><span class="line">                      throws java<span class="selector-class">.lang</span>.Exception</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
  <entry>
    <title>extract_history_data_Enovia_2013XE</title>
    <url>/2021/11/08/extract-history-data-Enovia-2013XE/</url>
    <content><![CDATA[<h1 id="Filter-History-Data-in-Enovia-v2013xE"><a href="#Filter-History-Data-in-Enovia-v2013xE" class="headerlink" title="Filter History Data in Enovia v2013xE"></a>Filter History Data in Enovia v2013xE</h1><pre><code>                Map hmaplist = UINavigatorUtil.getHistoryData(this.ctx, objId);
                Vector timeArray = (Vector) hmaplist.get(&quot;time&quot;);
                Vector userArray = (Vector) hmaplist.get(&quot;user&quot;);
                Vector actionArray = (Vector) hmaplist.get(&quot;action&quot;);
                Vector stateArray = (Vector) hmaplist.get(&quot;state&quot;);
                Vector descriptionArray = (Vector) hmaplist.get(&quot;description&quot;);
                sb.append(&quot;\n&quot; + objId + &quot;~&quot; + type + &quot;~&quot; + name + &quot;~Current state = &quot; + current + &quot;~Branch To = &quot; + strBranchTo);
                //System.out.println(&quot;\n&quot; + objId + &quot;~&quot; + type + &quot;~&quot; + name + &quot;~Current state = &quot; + current + &quot;~Branch To = &quot; + strBranchTo);
                for (int i = 0; i &lt; descriptionArray.size(); i++) &#123;
                    String history = &quot;history = &quot;;
                    String desc = (String) descriptionArray.get(i);
                    if (desc.contains(&quot;Branch To&quot;)) &#123;
                        String user = (String) userArray.get(i);
                        if (!user.split(&quot;\\:&quot;)[1].trim().equalsIgnoreCase(&quot;User Agent&quot;)) &#123;
                            history += actionArray.get(i) + &quot; &quot;;
                            history += desc + &quot; &quot;;
                            history += userArray.get(i) + &quot; &quot;;
                            history += stateArray.get(i) + &quot; &quot;;
                            history += timeArray.get(i) + &quot; &quot;;
                            sb.append(&quot;\n\t&quot; + history);
                        &#125;
                    &#125;
                &#125;
</code></pre>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia-History</tag>
      </tags>
  </entry>
  <entry>
    <title>Info_of_MQL_in_Enovia</title>
    <url>/2021/11/08/info-of-MQL-Enovia/</url>
    <content><![CDATA[<h2 id="what-is-MQL"><a href="#what-is-MQL" class="headerlink" title="what is MQL"></a>what is MQL</h2><p>MQL is the <strong>Matrix Query Language</strong>. Similar to SQL, MQL consists of a set of commands that help<br>the administrator set up and test an ENOVIA Live Collaboration database quickly and efficiently.<br>MQL is primarily a tool for building the ENOVIA Live Collaboration database. Also, you can use<br>MQL to add information to the existing database, and extract information from the database.</p>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia, MQL</tag>
      </tags>
  </entry>
  <entry>
    <title>JPOs_in_Enovia</title>
    <url>/2021/11/24/JPOs-in-Enovia/</url>
    <content><![CDATA[<h2 id="JPO-in-Enovia"><a href="#JPO-in-Enovia" class="headerlink" title="JPO in Enovia"></a>JPO in Enovia</h2><p>Access to JPOs through the Studio Customization Toolkit consists of two invoke methods on a new JPO class.  </p>
<ol>
<li><p>One form of the invoke method returns an int (useful for returning exit codes).)</p>
<p> int ret = JPO.invoke(Context context, String className, String[] initargs, String methodName, String[] methodargs);</p>
</li>
<li><p>The other form returns a Java Object.</p>
<p> Object ret = JPO.invoke(Context context, String className, String[] initargs,String methodName,String[] methodargs, java.lang.Class retType);</p>
</li>
</ol>
<p>An example of an object method in the “emxProject” JPO would be:</p>
<pre><code>import matrix.db.*;
public class $&#123;CLASSNAME&#125; &#123;
     public $&#123;CLASSNAME&#125; (Context context, String []args) &#123;
    &#125;
    public BusinessObjectList query(Context context, String []args) 
    &#123;
        Query query = new Query(args[0]);
         return query.evaluate(context);
     &#125;
&#125;
</code></pre>
<p>called by the following in a .jsp:</p>
<pre><code>String[] init = new String[] &#123;&#125;;
String[] args = new String[] &#123; &quot;.finder&quot; &#125;;
BusinessObjectList list = (BusinessObjectList)JPO.invoke(context, &quot;Project&quot;, init, &quot;query&quot;, args, BusinessObjectList.class);
</code></pre>
<p><em>Note the use of casting, which is necessary because the system only knows to return an<br>object instance. In the example above you see that BusinessObjectList is consistently used<br>for declaring the object to hold the return object, for casting, and for the sixth argument<br>that defines the return type.</em></p>
<p>The JPO class has two methods that correspond to serializing an Object into a String, and de-serializing a String back into an Object. The method names are <strong>packArgs</strong> and <strong>unpackArgs</strong>, respectively. Since <strong>JPOs only accept<br>strings as arguments</strong>, you must use the packArgs/unpackArgs methods to convert Java objects to/from strings when using JPOs. </p>
<p>These methods actually work with a String array of size two, that holds the class in the first slot and the serialized object in the second slot. This allows users of the String array to do proper type casting.<br>One can build up several Objects in a String array by calling <strong>packArgs()</strong> several times using the proper indexing into the String array. However, it is better to place all arguments in a single compound object (like a hashmap) and then pack just the single compound object into the args array. Keep in mind that any Object needing to be passed as an argument in this way must implement the <em>java.io.Serializable</em> interface.You can only call packargs on objects that are serialized. In releases before 9.5.3.0, many of the Studio Customization Toolkit classes were not. Most classes are now serialized and so may be passed as arguments to JPOs.</p>
<h2 id="The-packArgs-method-has-the-following-signature"><a href="#The-packArgs-method-has-the-following-signature" class="headerlink" title="The packArgs method has the following signature:"></a>The packArgs method has the following signature:</h2><pre><code>public static String[] packArgs(Object in) throws Exception
</code></pre>
<h2 id="The-unpackArgs-method-has-the-following-signature"><a href="#The-unpackArgs-method-has-the-following-signature" class="headerlink" title="The unpackArgs method has the following signature:"></a>The unpackArgs method has the following signature:</h2><pre><code>public static Object unpackArgs(String[] in) throws Exception
</code></pre>
<p>The following packing logic is placed in a bean that is called from a JSP.</p>
<pre><code> /**
 * Sends an icon mail message to the specified users.
 *
 * @param context the Matrix &lt;code&gt;Context&lt;/code&gt; object
 * @param toList the to list of users to notify
 * @param ccList the cc list of users to notify
 * @param bccList the bcc list of users to notify
 * @param subject the notification subject
 * @param message the notification message
 * @param objectIdList the list of objects to send with the 
notification
 * @throws FrameworkException if the operation fails
 * @since AEF 9.5.0.0
 * @grade 0
 */
 public static void sendMessage(Context context, StringList toList, StringList ccList, StringList bccList,     String subject, String message, StringList objectIdList) throws FrameworkException
     &#123;
         try
         &#123;
             ContextUtil.pushContext(context);
             // Create the arguments for the notification.
             Map note = new HashMap();
             note.put(&quot;toList&quot;, toList);
             note.put(&quot;ccList&quot;, ccList);
             note.put(&quot;bccList&quot;, bccList);
             note.put(&quot;subject&quot;, subject);
             note.put(&quot;message&quot;, message);
             note.put(&quot;objectIdList&quot;, objectIdList);
             // Pack arguments into string array.
             String[] args = JPO.packArgs(note);
             // Call the jpo to send the message.
             JPO.invoke(context, &quot;emxMailUtil&quot;, null, 
            &quot;sendMessage&quot;, args);
         &#125;
         catch (Exception e)
         &#123;
             throw (new FrameworkException(e));
         &#125;
         finally
         &#123;
             ContextUtil.popContext(context);
         &#125;
 &#125;
</code></pre>
<p>The unpacking logic is then found in the JPO method where it is performed prior to passing the arguments on to the worker method (this design pattern is very useful for hiding the details of packing and unpacking arguments).</p>
<pre><code> /**
 * Sends an icon mail notification to the specified users.
 *
 * @param context the Matrix &lt;code&gt;Context&lt;/code&gt; object
 * @param args contains a Map with the following entries:
 * toList - the list of users to notify
 * ccList - the list of users to cc
 * bccList - the list of users to bcc
 * subject - the notification subject
 * message - the notification message
 * objectIdList - the ids of objects to send with the 
notification
 * @returns nothing
 * @throws Exception if the operation fails
 * @since AEF 9.5.0.0
 */
 public static int sendMessage(Context context, String[] args) throws Exception&#123;
     if (args == null || args.length &lt; 1)
     &#123;
         throw (new IllegalArgumentException());
     &#125;
     Map map = (Map) JPO.unpackArgs(args);
     sendMessage(context,(StringList) map.get(&quot;toList&quot;), (StringList) map.get(&quot;ccList&quot;), (StringList) map.get(&quot;bccList&quot;), (String) map.get(&quot;subject&quot;), (String) map.get(&quot;message&quot;), (StringList) map.get(&quot;objectIdList&quot;));
     return 0;
 &#125;
</code></pre>
<p>Avoid getting business object selectable items one at a time. Code similar to the following should never exist:</p>
<pre><code>///////////////////////////////////////////////////////////////
// Do not have code like below 
///////////////////////////////////////////////////////////////
// Query using MQLCommand
 MQLCommand mqlCmd = new MQLCommand();
 mqlCmd.executeCommand(ctx, &quot;temp query bus t2 t2* 0 dump \n&quot;);
 String rslt = mqlCmd.getResult().trim();
 StringTokenizer st1 = new StringTokenizer(rslt,&quot;\n&quot;);
 while (st1.hasMoreElements()) &#123;
     String resultBo = st1.nextToken().trim();
     System.out.println(&quot;Result bo =&quot;+resultBo);
     MQLCommand subMqlCmd = new MQLCommand();
     String mqlStr = &quot;print bus &quot;+resultBo+ &quot; select attribute[int-u] attribute[color-u];&quot;;
     subMqlCmd.executeCommand(ctx, mqlStr);
     String subResult = subMqlCmd.getResult().trim();
     System.out.println(&quot;Sub result =&quot;+subResult);
 &#125;
</code></pre>
<p>Instead, multiple selectables should be specified in one command. Multiple selectable items can be specified for any of the following commands:</p>
<p>• print bus<br>• expand bus<br>• temp query<br>• print set  </p>
<p>For example:</p>
<pre><code> MQLCommand mqlCmd = new MQLCommand();
 mqlCmd.executeCommand(ctx, &quot;temp query bus t2 t2* 0 select attribute[int-u].value attribute[color-u].value    from[r3].attribute[rstring-u].value dump |&quot;);
 String result = mqlCmd.getResult().trim();
 StringTokenizer st = new StringTokenizer(result,&quot;|&quot;);
 while (st.hasMoreTokens()) &#123;
     System.out.println(&quot;Result token =&quot;+st.nextToken());
 &#125;
</code></pre>
<p>The coding approach shown above could be made more efficient by using the following syntax:</p>
<pre><code> // Query using ADK calls
 StringList busSelect = new StringList(7);
 busSelect.addElement(&quot;id&quot;);
 busSelect.addElement(&quot;type&quot;);
 busSelect.addElement(&quot;name&quot;);
 busSelect.addElement(&quot;revision&quot;);
 busSelect.addElement(&quot;attribute[int-u].value&quot;);
 busSelect.addElement(&quot;attribute[color-u].value&quot;);     
 busSelect.addElement(&quot;from[r3].attribute[rstring-u].value&quot;);

 // Prepare temp query
 Query query = new Query();
 query.setBusinessObjectType(&quot;t2&quot;);
 query.setBusinessObjectName(&quot;t2*&quot;);
 query.setBusinessObjectRevision(&quot;0&quot;);
 query.setOwnerPattern(&quot;*&quot;);
 query.setVaultPattern(&quot;unit1&quot;);
 query.setWhereExpression(&quot;&quot;);
 BusinessObjectWithSelectList bwsList = new BusinessObjectWithSelectList();
 
 // Do the query
 bwsList = query.selectTmp(ctx, busSelect); 
 // Iterate through the objects returned and get data.
 for (int idx=0; idx&lt;bwsList.size(); idx++)
 &#123;
     BusinessObjectWithSelect bws = (BusinessObjectWithSelect) bwsList.elementAt(idx);
     String sType = (String)bws.getSelectData(&quot;type&quot;); 
     System.out.println(&quot;Type =&quot;+sType);
     String sName = (String)bws.getSelectData(&quot;name&quot;); 
     System.out.println(&quot;Name =&quot;+sName);
     String sRevision = (String)bws.getSelectData(&quot;revision&quot;); 
     System.out.println(&quot;Revision =&quot;+sRevision);

     // Get businessobject attribute values
     String attrOneVal = (String)bws.getSelectData(&quot;attribute[int-u].value&quot;); 
     System.out.println(&quot;AttrOneVal =&quot;+attrOneVal);
     String attrTwoVal = (String)bws.getSelectData(&quot;attribute[color-u].value&quot;);
     System.out.println(&quot;AttrTwoVal =&quot;+attrTwoVal);

     // Get relationship attribute values
     String attrRelVal = (String)bws.getSelectData(&quot;from[r3].attribute[rstring-u].value&quot;);
     System.out.println(&quot;AttrRelVal =&quot;+attrRelVal);         
 &#125; 
</code></pre>
<p>When an MQL selectable item is used to retrieve information about a relationship, the “relationship” item should not be used if a direction is known. Instead, “to” or “from” should be used. This reduces the number of database tables that need to be searched. For example, instead of:</p>
<pre><code>relationship\[BOM\].attribute\[Qty\]
</code></pre>
<p>Use:</p>
<pre><code>from\[BOM\].attribute\[Qty\]
</code></pre>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia, JPO</tag>
      </tags>
  </entry>
  <entry>
    <title>vault_in_enovia</title>
    <url>/2021/11/30/vault-in-enovia-1/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>vault_in_enovia</title>
    <url>/2021/11/30/vault-in-enovia/</url>
    <content><![CDATA[<h1 id="Vaults"><a href="#Vaults" class="headerlink" title="Vaults"></a>Vaults</h1><p>A <em>vault</em> is a storage location residing in the underlying database that is defined by an ENOVIA Live Collaboration System Administrator for use by ENOVIA Live Collaboration. Vaults allow the designer of the ENOVIA Live Collaboration database to construct one or more logical storage locations within the database. The Business Administrator determines what the vault is for, while the System Administrator defines where the vault is located on the network. Vaults should use actual host and path names, not mounted directories. Paths must be exported on the host to all users<br>who require access to the vaults.  </p>
<blockquote>
<p>You must be a System Administrator to access vaults.</p>
</blockquote>
<p>In addition to the business object vaults created by the System Administrator, a vault called the Administration vault that is created automatically when ENOVIA Live Collaboration is installed on your system. The Administration vault is used for administrative purposes only and serves as the master definition vault. The Administration vault is used for definitions only. You cannot use it for storing business objects. Vaults contain metadata (information about objects), while stores contain the application files associated with business objects. All vaults contain a complete set of ENOVIA Live Collaboration definitions. These definitions identify the characteristics of items such as persons, roles, types, formats, etc. When you make changes to a definition (such as add, modify, or delete), all definition copies must be updated to reflect the change. This update of the vaults occurs simultaneously if all the copies are available. If any of the copies are not available (a vault is not available), you cannot alter the definitions. This prevents partial alteration of the ENOVIA Live Collaboration definitions. For example, assume you want to add a new format definition. After you enter the Add Format command, ENOVIA Live Collaboration will attempt to add the definition. If the definition is valid (no errors), all copies of the ENOVIA Live Collaboration definitions are changed to include this new format. But assume that a vault resides on a host that is currently offline. In this case, no changes to the definitions are made. If changes were allowed, the one vault would not be updated to contain the change. Therefore, you should ensure that all defined vaults are available before modifying the ENOVIA Live Collaboration definitions.</p>
<h2 id="Types-of-Vaults"><a href="#Types-of-Vaults" class="headerlink" title="Types of Vaults"></a>Types of Vaults</h2><p>There are four types of vaults: </p>
<ol>
<li>local</li>
<li>remote</li>
<li>foreign</li>
<li>external.</li>
</ol>
<ul>
<li>Most vaults are local.  </li>
<li>Remote vaults are used for loosely-coupled databases, which allow two entirely different ENOVIA Live Collaboration installations to share data.</li>
<li>Foreign vaults are used with Adaplets, which allow data from virtually any source to be modeled as ENOVIA Live Collaboration objects.</li>
<li>External (Web Service Adaplet) vaults are used with External stores that contain data maintained by external servers.  </li>
</ul>
<p>When defining a vault in MQL, you don’t need to specify which type it is. The system knows which type of vault you are defining by the parameters you specify for the vault.</p>
<ul>
<li>For local vaults, you define Oracle tablespaces using the Tablespace and Indexspace clauses.</li>
<li>For remote vaults, you specify the server using the Server clause.</li>
<li>For foreign vaults, you specify tablespaces, and Interface and Map fields (using the Interface and Map clauses).</li>
<li>External vaults need only a parameters file.</li>
</ul>
<h2 id="Defining-a-Vault"><a href="#Defining-a-Vault" class="headerlink" title="Defining a Vault"></a>Defining a Vault</h2><p>Use the Add Vault command to define a vault:</p>
<pre><code>add vault NAME [ADD_ITEM &#123;ADD_ITEM&#125;];
</code></pre>
<p><strong>NAME</strong> is the name of the vault you are creating.<br><strong>ADD_ITEM</strong> is an Add Vault clause that provides more information about the vault you are creating.</p>
<h2 id="Printing-a-vault-definition"><a href="#Printing-a-vault-definition" class="headerlink" title="Printing a vault definition"></a>Printing a vault definition</h2><pre><code>print vault NAME;
</code></pre>
<p><em>If the NAME contains embedded spaces, use quotation marks</em> </p>
<h2 id="Delete-Vault"><a href="#Delete-Vault" class="headerlink" title="Delete Vault"></a>Delete Vault</h2><pre><code>delete vault NAME;
</code></pre>
<h2 id="Clear-Vault"><a href="#Clear-Vault" class="headerlink" title="Clear Vault"></a>Clear Vault</h2><p>The Clear Vault command is used to delete all business objects and associations in a vault:</p>
<pre><code>clear vault NAME [minorrevision] [relationship] [full] [size NUMBER];
</code></pre>
<p><em>NAME</em> is the name of the vault you want to clear.<br><em>NUMBER</em> is the size of the transaction before a database commit. The Size clause only applies when any of the other optional clauses are included.</p>
<p>Once a Vault has been established and used, you should NOT use the Clear Vault command. In addition, you should not use it when users are online.  </p>
<ul>
<li><p>Minorrevision Clause</p>
<blockquote>
<p>Include this clause before actually clearing the vault to have first remove the business objects in the named vault from revision chains of objects in other vaults. This involves modifying rows in the vaults lxBO table (marking rows that need to be cleaned up). Upon successful execution of this command, all revision chains that need adjustment prior to the clear vault command are fixed.</p>
</blockquote>
</li>
<li><p>Relation Clause</p>
<blockquote>
<p>Include this clause before actually clearing the vault to have ENOVIA Live Collaboration first disconnect business objects in the named vault from objects in other vaults. This involves modifying rows in the vaults lxRO table (marking rows that need to be cleaned up). Upon successful execution of this command, all connections to objects in other vaults are removed.</p>
</blockquote>
</li>
<li><p>Full Clause</p>
<blockquote>
<p>Include this clause before actually clearing the vault to have ENOVIA Live Collaboration first perform both a “clear vault relationship” and a “clear vault revision.” Additionally all tables of the vault are dropped and recreated, cleaning up the marked rows.</p>
</blockquote>
</li>
<li><p>Size Clause</p>
<blockquote>
<p>Include this clause of the clear vault command to indicate a transaction size before the relation or revision changes are committed to the database. For example, to remove all connections to or from objects in other vaults and commit the changes 100 at a time use the following:.</p>
</blockquote>
<p>  clear vault MyVault relation size 100;</p>
</li>
</ul>
<p>When used without the Revision, Relation or Full clauses, the Size clause is ignored.</p>
<h2 id="Index-Vault"><a href="#Index-Vault" class="headerlink" title="Index Vault"></a>Index Vault</h2><p>The index command should be used periodically after modification and deletions to clean up the database indices.</p>
<pre><code>index vault NAME [table TABLE_NAME [indexspace TABLESPACE_NAME]];
</code></pre>
<p>NAME is the name of the vault to index. You can run the index vault command against any vault, including ADMINISTRATION.</p>
<p>Re-indexing vaults can improve find performance whether or not transaction boundaries have been used in the data loading process. If data is loaded from a sequentially sorted data file, the resulting index will be less than optimal. Re-indexing randomizes the index, making find performance noticeably better. Indexing a vault in this manner rebuilds the system indices that must be present for locating objects by name, type, and owner, as well as other SQL convertible fields.</p>
<p>To show the SQL commands for a particular index vault command, without actually changing the indices, use the validate index vault command as follows:.</p>
<pre><code>validate index vault NAME [table TABLE_NAME [indexspace TABLESPACE_NAME]];
</code></pre>
<p>This is helpful to use on very large databases, where indexing a vault may take many hours. The validate output shows the SQL commands that need to be run. You could then manually run the commands in order, to make progress with minimal disruption.</p>
<p>Each clause is described below.</p>
<ul>
<li>Table Clause </li>
</ul>
<p>Include this clause to indicate which database tables should be re-indexed. Only those columns that have indexing defined will be re-indexed. You should include up to and including the “_” in a table name, since what follows is specific to the vault specified. For example:</p>
<pre><code>index vault &quot;Engineering-1&quot; table lxbo_;
</code></pre>
<p>This command might generate and execute SQL similar to:</p>
<blockquote>
<p>alter index lxBO_abbe6b7a_lxOid_Index rebuild;<br> alter index lxBO_abbe6b7a_lxName_Index rebuild;<br>alter index lxBO_abbe6b7a_lxOwner_Index rebuild;<br>alter index lxBO_abbe6b7a_lxPolicy_Index rebuild;  </p>
</blockquote>
<p>The Engineering-1 vault is associated with the abbe6b7a table.</p>
<ul>
<li>Indexspace Clause</li>
</ul>
<p>Use this clause to specify an alternate database tablespace to use for processing this command. For example:</p>
<pre><code>index vault “Engineering-1” table lxbo_ indexspace USER_DATA;
</code></pre>
<p>This SQL generated is as follows:</p>
<blockquote>
<p>alter index lxBO_abbe6b7a_lxOid_Index rebuild tablespace USER_DATA;<br>alter index lxBO_abbe6b7a_lxName_Index rebuild tablespace USER_DATA;<br>alter index lxBO_abbe6b7a_lxOwner_Index rebuild tablespace USER_DATA;<br>alter index lxBO_abbe6b7a_lxPolicy_Index rebuild tablespace USER_DATA;<br>alter index lxBO_abbe6b7a_lxState_Index rebuild tablespace USER_DATA;</p>
</blockquote>
<p>This command adds indices to all columns of lxBO_ table (of the vault Engineering-1) that have indexing defined, and the command would use tablespace USER_DATA to hold the index data.</p>
<p>You must also include the table clause with using the indexspace clause.</p>
<h2 id="Fixing-Fragmented-Vaults"><a href="#Fixing-Fragmented-Vaults" class="headerlink" title="Fixing Fragmented Vaults"></a>Fixing Fragmented Vaults</h2><p>As objects are deleted from a vault, storage gaps will occur in the vault database file. These gaps represent wasted disk space and can cause an increase in access time. MQL provides the tidy vault command to fix fragmentations in the database file of the vault. </p>
<pre><code>tidy vault NAME [commit N];
</code></pre>
<ul>
<li><p>NAME is the name of the vault you want to fix. You can specify the ADMINISTRATION vault to remove unused records of deleted administration objects.  </p>
</li>
<li><p>When this command is executed, ENOVIA Live Collaboration consolidates the fragmented database file. It deletes rows in the database tables that are marked for deletion.</p>
</li>
<li><p>Commit N Clause<br>Include this clause when tidying large vaults. The number N that follows specifies that the command should commit the database transaction after this many objects have been tidied. The default is 1000. For example:</p>
<p>  tidy vault “Engineering” commit 200</p>
</li>
</ul>
<p>The Commit N clause cannot be used for the ADMINISTRATION vault.</p>
<h2 id="List-of-Vaults"><a href="#List-of-Vaults" class="headerlink" title="List of Vaults"></a>List of Vaults</h2><p>A vault is a grouping of objects that depends on the types of objects used, the relationships they have to one another, and the people who need access to them.<br>The following code demonstrates how to get a list of vaults.</p>
<pre><code>try&#123;
     getContext().connect();
     VaultList list = Vault.getVaults(getContext());
     _context.disconnect();
     VaultItr itr = new VaultItr(list);
     while(itr.next())
     &#123;
         Vault vault = itr.obj();
         System.out.println(&quot;vault: &quot; + vault.getName());
     &#125;
     getContext().disconnect();
&#125;catch (MatrixException e)&#123;
 // Can’t load vaults
&#125;
</code></pre>
]]></content>
      <categories>
        <category>Enovia</category>
      </categories>
      <tags>
        <tag>Enovia</tag>
      </tags>
  </entry>
</search>
